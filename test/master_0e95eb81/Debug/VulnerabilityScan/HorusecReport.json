{
  "version": "v2.8.0",
  "id": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
  "repositoryID": "00000000-0000-0000-0000-000000000000",
  "repositoryName": "",
  "workspaceID": "00000000-0000-0000-0000-000000000000",
  "workspaceName": "",
  "status": "success",
  "errors": "",
  "createdAt": "2022-06-24T08:55:33.312470319Z",
  "finishedAt": "2022-06-24T08:56:21.324051963Z",
  "analysisVulnerabilities": [
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324084663Z",
      "vulnerabilities": {
        "vulnerabilityID": "55255a0e-2a3f-43a9-9b4d-9ae6d4870fdf",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"8.1.1\" for fix this issue.",
        "details": "(1/8) * Possible vulnerability detected: An issue was discovered in Pillow before 8.1.1. TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode. NOTE: this issue exists because of an incomplete fix for CVE-2020-35654.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-25289.\nCwe Links: (https://cwe.mitre.org/data/definitions/787.html)\n         \n(2/8) * Possible vulnerability detected: An issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is a negative-offset memcpy with an invalid size.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-25290.\nCwe Links: (https://cwe.mitre.org/data/definitions/787.html)\n         \n(3/8) * Possible vulnerability detected: An issue was discovered in Pillow before 8.1.1. In TiffDecode.c, there is an out-of-bounds read in TiffreadRGBATile via invalid tile boundaries.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-25291.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)\n         \n(4/8) * Possible vulnerability detected: An issue was discovered in Pillow before 8.1.1. There is an out-of-bounds read in SGIRleDecode.c.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-25293.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)\n         \n(5/8) * Possible vulnerability detected: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-27921.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)\n         \n(6/8) * Possible vulnerability detected: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICNS container, and thus an attempted memory allocation can be very large.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-27922.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)\n         \n(7/8) * Possible vulnerability detected: Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for an ICO container, and thus an attempted memory allocation can be very large.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-27923.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)\n         \n(8/8) * Possible vulnerability detected: An issue was discovered in Pillow before 8.1.1. The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-25292.",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-25289",
        "vulnHash": "8318a6cedab783e3b0b6a689f96d363d549ea544fcd150cf4f93bc180473ab49",
        "deprecatedHashes": [
          "76e90c84bcab2745611d56929819c991a7b4aeecff44543efcab14805198035e",
          "36c8635616a9309a8122b22835881ede5711600fd0eaec41e81e7f6a4d45bb68",
          "f122609ede8786d67d03972524cba2b012b082711b3ee3d43ce7449e4cd4cba8",
          "5fc5770583196ad1ef06376c1cbf7eab2edd82b3bae135e89f57d39293bc4718"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324085763Z",
      "vulnerabilities": {
        "vulnerabilityID": "70090039-b73e-4c87-95d8-3b3e2f56509b",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"8.3.0\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: Pillow through 8.2.0 and PIL (aka Python Imaging Library) through 1.1.7 allow an attacker to pass controlled parameters directly into a convert function to trigger a buffer overflow in Convert.c.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-34552.\nCwe Links: (https://cwe.mitre.org/data/definitions/120.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-34552",
        "vulnHash": "4270474bf3c2f50a41dac644db420b2909db7440ae6c368f648e48fc420339bf",
        "deprecatedHashes": [
          "d67c897f23f98796644809bcb851168267caf0aba0c3f9ed52d3f95cfa450719",
          "5b7f17361d716319d13a4a635840a36776efec0e9e1823968ec0fa6bb8b256cc",
          "0b97329d39f85ed1c3ffce7be70a1f09b77ccae4b8617fbd321fcd1fd087b448",
          "ebb68318e9f7526cafa40eb33eb2e5b8a9022297b79ddd5480d6d1a3a47cf8bf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324086763Z",
      "vulnerabilities": {
        "vulnerabilityID": "838005b5-bff1-4f13-9078-a18def5ab634",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"9.0.0\" for fix this issue.",
        "details": "(1/4) * Possible vulnerability detected: PIL.ImageMath.eval in Pillow before 9.0.0 allows evaluation of arbitrary expressions, such as ones that use the Python exec method. A lambda expression could also be used,\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-22817.\n         \n(2/4) * Possible vulnerability detected: path_getbbox in path.c in Pillow before 9.0.0 improperly initializes ImagePath.Path.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-22815.\nCwe Links: (https://cwe.mitre.org/data/definitions/665.html)\n         \n(3/4) * Possible vulnerability detected: path_getbbox in path.c in Pillow before 9.0.0 has a buffer over-read during initialization of ImagePath.Path.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-22816.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)\n         \n(4/4) * Possible vulnerability detected: JpegImagePlugin may append an EOF marker to the end of a truncated file, so that the last segment of the data will still be processed by the decoder.If the EOF marker is not detected as such however, this could lead to an infinite loop where JpegImagePlugin keeps trying to end the file.\nPrimaryURL: https://github.com/advisories/GHSA-4fx9-vc88-q2xc.",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2022-22817",
        "vulnHash": "ac6db6243aead3dda355b9135be43969acb77ad8a11293e143937b4d15175ec0",
        "deprecatedHashes": [
          "34603c024b594e83a63c7e2ee0b04b2d31a1c544f404ab5b2bff2fa49313699d",
          "bdcdc183829f7997b44a80cfa0fc46910a1712d75547493b9846c4da1ef11ee5",
          "b0a8e1f3ca802afa58580025a37502366282b61247ab45810f174fc79face5c1",
          "f4924bc5f66b3ed09f1a6002b0b16298ce154eeff4823d9a7381789462f68148"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324087963Z",
      "vulnerabilities": {
        "vulnerabilityID": "776de8a2-3921-484f-86d1-c2c0e7588f34",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"9.0.1\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: Pillow before 9.0.1 allows attackers to delete files because spaces in temporary pathnames are mishandled.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24303.",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2022-24303",
        "vulnHash": "e2310a2eb817a161c9c357835a83b72cb9d20b3d0fa23dde1e5c3ba6d0d44e7d",
        "deprecatedHashes": [
          "bb3fabb2e12d4a2bb1d6d86a8282213c703e4e498338ce836b8d8450db42ce07",
          "a87a0a1dcef341f7ccf376df047502be9e4a6332c8fce128b6dea4573b99f53d",
          "eb723647fbc907d5a5ce57c4463afc29277c9257c07804d47c6f0c0c80c05a3b",
          "5ee025608bcdda1ed56eca3289aa2dfd5db881e866e3194b2725e9cf83d6ca68"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324389665Z",
      "vulnerabilities": {
        "vulnerabilityID": "b4b2ec71-c6f5-49cf-acca-70dc9e3e1188",
        "line": "3442",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "handlebars",
        "details": "(1/9) * Possible vulnerability detected: The package handlebars before 4.7.7 are vulnerable to Prototype Pollution when selecting certain compiling options to compile templates coming from an untrusted source.\n         \n(2/9) * Possible vulnerability detected: Versions of `handlebars` prior to 3.0.8 or 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Objects' `__proto__` and `__defineGetter__` properties, which may allow an attacker to execute arbitrary code through crafted payloads.\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.3.0 or later.\n         \n(3/9) * Possible vulnerability detected: The package handlebars before 4.7.7 are vulnerable to Remote Code Execution (RCE) when selecting certain compiling options to compile templates coming from an untrusted source.\n         \n(4/9) * Possible vulnerability detected: Handlebars before 4.4.5 allows Regular Expression Denial of Service (ReDoS) because of eager matching. The parser may be forced into an endless loop while processing crafted templates. This may allow attackers to exhaust system resources.\n         \n(5/9) * Possible vulnerability detected: Versions of `handlebars` prior to 3.0.8 or 4.5.3 are vulnerable to prototype pollution. It is possible to add or modify properties to the Object prototype through a malicious template. This may allow attackers to crash the application or execute Arbitrary Code in specific conditions.\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.5.3 or later.\n         \n(6/9) * Possible vulnerability detected: Versions of `handlebars` prior to 3.0.8 or 4.5.3 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It is due to an incomplete fix for a [previous issue](https://www.npmjs.com/advisories/1316). This vulnerability can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.5.3 or later.\n         \n(7/9) * Possible vulnerability detected: Handlebars before 3.0.8 and 4.x before 4.5.3 is vulnerable to Arbitrary Code Execution. The lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript. This can be used to run arbitrary code on a server processing Handlebars templates or in a victim's browser (effectively serving as XSS).\n         \n(8/9) * Possible vulnerability detected: Versions of `handlebars` prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).\n\nThe following template can be used to demonstrate the vulnerability:  \n```{{#with \"constructor\"}}\n\t{{#with split as |a|}}\n\t\t{{pop (push \"alert('Vulnerable Handlebars JS');\")}}\n\t\t{{#with (concat (lookup join (slice 0 1)))}}\n\t\t\t{{#each (slice 2 3)}}\n\t\t\t\t{{#with (apply 0 a)}}\n\t\t\t\t\t{{.}}\n\t\t\t\t{{/with}}\n\t\t\t{{/each}}\n\t\t{{/with}}\n\t{{/with}}\n{{/with}}```\n\n\n## Recommendation\n\nUpgrade to version 3.0.8, 4.5.2 or later.\n         \n(9/9) * Possible vulnerability detected: Affected versions of `handlebars` are vulnerable to Denial of Service. The package's parser may be forced into an endless loop while processing specially-crafted templates. This may allow attackers to exhaust system resources leading to Denial of Service.\n\n\n## Recommendation\n\nUpgrade to version 4.4.5 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1067912",
        "vulnHash": "fe818429207ed21fea133ec7b24c49b11eb729208cf0a0d84a638a2f16f02a9e",
        "deprecatedHashes": [
          "41df6994c94743c74ae036749a92e011b3263aa978cbf7f20c77f0805793cb12",
          "856d2a56092f319142feebf2eaf8e66c252d45f2efe59ee12c59987a781e8a29"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324400966Z",
      "vulnerabilities": {
        "vulnerabilityID": "4e25e9ae-c73d-4ade-b8f4-a7390352ccf5",
        "line": "3922",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "lodash",
        "details": "(1/4) * Possible vulnerability detected: Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.\n\n\n\n\n## Recommendation\n\nUpdate to version 4.17.12 or later.\n         \n(2/4) * Possible vulnerability detected: `lodash` versions prior to 4.17.21 are vulnerable to Command Injection via the template function.\n         \n(3/4) * Possible vulnerability detected: Versions of lodash prior to 4.17.19 are vulnerable to Prototype Pollution. The function zipObjectDeep allows a malicious user to modify the prototype of Object if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.\n\nThis vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.\n         \n(4/4) * Possible vulnerability detected: All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i \u003c n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1069477",
        "vulnHash": "6043403ff3e9570dac40e7d501fd43af0e36b9ada6dd9dbeaf91eadfd022c178",
        "deprecatedHashes": [
          "a63274064259b09f1e35fc589cf415530bfed48d5308e57fbe56318e75d713af",
          "8c55bc919d4a87e21db70b9a975622b063477e0950cd94b2b2fee3186b7d0463"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324401966Z",
      "vulnerabilities": {
        "vulnerabilityID": "7c176f1f-7bba-400f-b079-a89a3b8f4d6c",
        "line": "4929",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "set-value",
        "details": "(1/2) * Possible vulnerability detected: Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `set-value` 3.x, upgrade to version 3.0.1 or later.\nIf you are using `set-value` 2.x, upgrade to version 2.0.1 or later.\n         \n(2/2) * Possible vulnerability detected: This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1069524",
        "vulnHash": "687497b9421b2cdf3e61b5d3826796ef842a657ce87503b82f8c0da1a7567764",
        "deprecatedHashes": [
          "77d83ab1e53453186201a706788f0cb193f12f0ef015b9b9ca03b5efa4401f6a",
          "95a9c8c49deaed811fe6184a8d16166d22110e127e8cc38fa8853f2ccd0a7ad2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324407466Z",
      "vulnerabilities": {
        "vulnerabilityID": "967e5b9b-d4b5-413e-b1c1-b5e51fceffe7",
        "line": "55",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "minimist",
        "details": "(1/2) * Possible vulnerability detected: Minimist \u003c=1.2.5 is vulnerable to Prototype Pollution via file index.js, function setKey() (lines 69-95).\n         \n(2/2) * Possible vulnerability detected: Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1067342",
        "vulnHash": "260536c706261a73fb8164d1e486d2b982479fb74f45d42c2b4a8d8bd61a3f4f",
        "deprecatedHashes": [
          "f155440b7feac2e740ae6b31779616ce9e2fb470b3b83d32bb5b5423a01e279b",
          "dbcc6c7161f25cf56dc881ce8b1033a3902d07e82b194d44b3da18f6497459c8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324413766Z",
      "vulnerabilities": {
        "vulnerabilityID": "f2fb1853-fdaa-4759-adab-fa973ef593a5",
        "line": "4100",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "mixin-deep",
        "details": "(1/1) * Possible vulnerability detected: Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n\n\n\n## Recommendation\n\nIf you are using `mixin-deep` 2.x, upgrade to version 2.0.1 or later.\nIf you are using `mixin-deep` 1.x, upgrade to version 1.3.2 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1069526",
        "vulnHash": "552b7547f26ae3d87399aa51511a8b107a5656264727d9037d3d7ec38bba73c2",
        "deprecatedHashes": [
          "ea395821816f44d2674a3401af577f2a519f1e4dde1a2477e1b6045bd8c1b3d7",
          "b8553c730ad54656f5231e7c4225c9295b12ab24344d8137506d6765fc480708"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324429966Z",
      "vulnerabilities": {
        "vulnerabilityID": "094ff4e8-b57a-4ed2-9ae7-afd8920ac3cb",
        "line": "34",
        "column": "24",
        "confidence": "MEDIUM",
        "file": "tests/units/utils/data.py",
        "code": "\"password\": \"test123\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "4f63c298b44aa1464432f1682252569cd00d3d81ddec83bab3af61148f364c32",
        "deprecatedHashes": [
          "6963e20fa3347067017d0b69e9c85a0e0e8f3bf79c56a5e956d1c4c062cdf9a4",
          "bf311c79ba49361a625aadebf2c3afd4140e73b35f1a216a285d19fc5d790e67"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324431066Z",
      "vulnerabilities": {
        "vulnerabilityID": "3725d4b6-32a8-4a78-bcc8-22bdf3a191a9",
        "line": "41",
        "column": "24",
        "confidence": "MEDIUM",
        "file": "tests/units/utils/data.py",
        "code": "\"password\": \"test123\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "4c1394b1c45235a87b629b9df9b83d375dc114ddcf1b84e531f58774df7d99d5",
        "deprecatedHashes": [
          "9b33193eada96b3e0d9d634428cb4adf3446650b1480eb461238bdf331386f36",
          "12f1d4b43446b64105f097e95acc5572701803d3a0f1e16e2986f7e7c2af7792"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324432166Z",
      "vulnerabilities": {
        "vulnerabilityID": "dbb2eb1c-f58c-4550-ba46-9a8f16c69c12",
        "line": "38",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/utils/fix_slugs_order.py",
        "code": "dbname.slug = 'Cohort_acronym'",
        "details": "(1/1) * Possible vulnerability detected: Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-25",
        "vulnHash": "84d0d9a2a14c34f738119b1c6e7550ee04c4eba8b8bda6ce05446255b3631e1a",
        "deprecatedHashes": [
          "b6661a4ec6becd76bacb74d41fbf8ee3968a6f4c47b6fb87a28408c304e85d4f",
          "042286c1270aecc5e7abe3e40d601f4a7df4d560be008050758cdf8db8954811"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324433266Z",
      "vulnerabilities": {
        "vulnerabilityID": "3c8b2dff-4b9d-4a50-98fa-d709800993dd",
        "line": "24",
        "column": "54",
        "confidence": "MEDIUM",
        "file": "emif/utils/oldpublications_to_comments.py",
        "code": "28ba72a1e72326b', '7b128593480b53409ac83c9582badbb7',",
        "details": "(1/1) * Possible vulnerability detected: Facebook Secret Key\nWhen use Facebook Secret Key is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-4",
        "vulnHash": "7f5a87de7b2e697b8a08c450846be5a99c2dbe1bcda9c21a20bfdd92062b8756",
        "deprecatedHashes": [
          "300fd496a6647049c4dc837506e150618cd05f1eb7b7372f2ab5234c28ceea8a",
          "5650c0f7eb98db81ecb1517a86d2fab036bc1d6a4140e1f8ecab075d5e697120"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324434266Z",
      "vulnerabilities": {
        "vulnerabilityID": "ac9d7308-50ae-47a1-a395-09002ad1d30b",
        "line": "26",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "docker/local_settings.py",
        "code": "SECRET_KEY = os.environ.get('DOCKER_SECRET', '+g93fk44)x+s%7-$7hb23@saom=#+7@n6lstr8-p7x8z$3#_f9')",
        "details": "(1/1) * Possible vulnerability detected: Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-25",
        "vulnHash": "a20084c98582bd8aa6f4a8560b55ddee1664d0ba2e9cd16c10e02bfa630ec541",
        "deprecatedHashes": [
          "59dd5c49874b238d1823cd9e593f24e0ac4d8e05dc2793c0f8248a9a96aa93f0",
          "5a739e26114501ab1b21d3f3d30901609f4b807b4a66071103dd9812d18da3b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324435266Z",
      "vulnerabilities": {
        "vulnerabilityID": "315c8f5a-c8f3-4084-ac46-b5a471ae186a",
        "line": "46",
        "column": "33",
        "confidence": "MEDIUM",
        "file": "docker/local_settings.py",
        "code": "'HOST': os.environ.get('MONGODBHOST', 'localhost'),",
        "details": "(1/1) * Possible vulnerability detected: Potential Hard-coded credential\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-25",
        "vulnHash": "b16b46f4b4b47a28cc324c6a7846437cd161c38db30437839c6ab6f4608208c2",
        "deprecatedHashes": [
          "cf5935ab5feb6392c1b7b36d68d269fe1d0978432b93caea2c6e9aa990249e6d",
          "6955a9ba0f6a0f4c6a9393e16770ba7c1c3991b299d514fee21e757d38e61283"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324436266Z",
      "vulnerabilities": {
        "vulnerabilityID": "336b9558-d0c3-4b52-a078-3e6df9d4a86e",
        "line": "35",
        "column": "86",
        "confidence": "MEDIUM",
        "file": "loadtests/db_listing.py",
        "code": "\":\"emif\", 'csrfmiddlewaretoken': self.__getCsrf()}, name=\"Login page\")",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "c159d025c6dc5da5cef966e1db9e53913f3fbae9f06989a23638d7a7831596f2",
        "deprecatedHashes": [
          "6a7b1f5648c7176ba7800cab6879b5a856ac294cc959831f859c7ef865d023d1",
          "122158bf72f92db7fe3447e0eb586d4d02bf4ab15610f82a83544ba107fec4fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324437166Z",
      "vulnerabilities": {
        "vulnerabilityID": "63c37142-2931-4e99-820f-7431d173e51b",
        "line": "20",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "nightwatch.json",
        "code": "\"password\": \"emif\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "c3ce032766d4a2df48b5c0415d6ba89258770a11cd1a20ed42472e9d7d559bbb",
        "deprecatedHashes": [
          "f678f25c8bc4dbf9ed4fa3a2620306df17f524086e01f84873297fcbdcbcac5b",
          "8083f627d263bc827c78769ce758989d5d7e327a7c10d5c958aed9a2fcc5b0eb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324438366Z",
      "vulnerabilities": {
        "vulnerabilityID": "b1838b7b-1cca-4371-98ef-288d91f6b2dc",
        "line": "7",
        "column": "13",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/users.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "6645f7884a26df68edccd4b33911f7a9097572043e8191f88fafb347fb1251ca",
        "deprecatedHashes": [
          "08fe0aeec40068f1a148606f122f61a0c461aa6100b9695bac537a94786167a4",
          "7b61216e7e4c1f23d0d5232e9177b480e21ed948a71472ab96e354ff22f84c73"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324439466Z",
      "vulnerabilities": {
        "vulnerabilityID": "ecefb284-d9f7-480d-be86-a3b71f045a66",
        "line": "18",
        "column": "13",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/users.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "bb8cff50a343f1fb81ba1f28c25bc38b46ca02618ccbe3be935ba212e2440a2b",
        "deprecatedHashes": [
          "23eb7514e6cbcc8d4232aacdb11361bf72d0458f6485b3bb22e9fd11dfc98e47",
          "241417e6a44b49563215090373debef1b2b1577d1ed007061133ab501ed853e3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324440566Z",
      "vulnerabilities": {
        "vulnerabilityID": "3105caf1-dbd8-489b-8036-79ba00144db7",
        "line": "32",
        "column": "13",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/users.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "9c52a6ca184b759064bf2ea64d535550ded138aba46f2e26e9d9ae01ded5213c",
        "deprecatedHashes": [
          "77bc82682724e8e9366330e0756f68c539020a22b8e0c314b64cec46d1084d3e",
          "1cf3070a17073bc9b1abc86f89430b2411d4d3e43bf065474e34166d19d69c0d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324441666Z",
      "vulnerabilities": {
        "vulnerabilityID": "0b2699d2-7881-4b2a-a9a8-e1e0ad5b7714",
        "line": "92",
        "column": "172",
        "confidence": "MEDIUM",
        "file": "emif/insert_script.py",
        "code": "password\":\"app123\",\"password_confirmation\":\"app123\"}}' http://127.0.0.1:8000/api/insert",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "9c34e70845c8b7a88646c62d1597a381de68089c0f5682c83abbaf09203500f6",
        "deprecatedHashes": [
          "a723a24775e734f3a0682c27bd2e23629df4b4e719fbfd2c71d2f08ebcd6a93f",
          "a361a3a16dd3f772311906055c37a9c37817bcd8d39d4b600699129ea5263d64"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324442666Z",
      "vulnerabilities": {
        "vulnerabilityID": "95b17823-f636-4ad8-bfe5-d2762cb5cbbf",
        "line": "58",
        "column": "83",
        "confidence": "MEDIUM",
        "file": "emif/utils/purgeSolr.py",
        "code": "fb204d155\", \"1dc33e09aca64afadb19c0a8bf57c6cf\", \"9143206be72362cf61a9c6d5b8d5ffb9\"]",
        "details": "(1/1) * Possible vulnerability detected: Facebook Secret Key\nWhen use Facebook Secret Key is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-4",
        "vulnHash": "8e73544132d58857db840a3241a14f32ff00e0320ebc81b7dc54edc2167977a3",
        "deprecatedHashes": [
          "3a618b42c45c1772d78d5d8fc3be20e315526aab09cb7daa860fcc400c56a36a",
          "21dc0791eab9adfe60b781dba4f6a65de3bc156afd009ecedc04b21411234060"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324443666Z",
      "vulnerabilities": {
        "vulnerabilityID": "480827ac-5cd5-4bef-9377-a321aa6545e8",
        "line": "58",
        "column": "1036",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/flatpages_with_placeholders.json",
        "code": "ssword')\u003c/code\u003e\u003c/p\u003e \u003c/li\u003e \u003cli\u003e Using token authentication: \u003cp\u003e\u003ccode\u003emontra = Montra(url='http://127.",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "2ccf3d920289954017a9baa09a1948b9c71c5bbf1ca4e745a2101efa984e6855",
        "deprecatedHashes": [
          "a758ec2d560833f668b5ffa1d8d3740de342668c7cab3f8ed1366a6dd1341f91",
          "a75dc25cbe9b4b9469a99818d932988737414add26c0dd7d23f7ace2168d07e9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324444666Z",
      "vulnerabilities": {
        "vulnerabilityID": "cbd549e5-ec12-4274-8e85-b5e7fb2c0f91",
        "line": "159",
        "column": "40",
        "confidence": "MEDIUM",
        "file": "confs/sso/attributemaps/basic.py",
        "code": "'urn:mace:dir:attribute-def:userPassword': 'userPassword',",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "63b5d7baa4bbf357e5d74d547416ff6e1c0d3a325a879bcac75e25a3f6bb4314",
        "deprecatedHashes": [
          "73028b92ae303cb3b6652a740fc04de8aa21af1218e4cdf95f8376faf0ab5150",
          "f38b0b88b11a9e3742c079d52f9d5c0e1072e9f52aa20834a44505ce1469230a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324445666Z",
      "vulnerabilities": {
        "vulnerabilityID": "093f1846-7976-4ea9-af78-6352049fcde6",
        "line": "320",
        "column": "13",
        "confidence": "MEDIUM",
        "file": "confs/sso/attributemaps/basic.py",
        "code": "'userPassword': 'urn:mace:dir:attribute-def:userPassword',",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "f6a1899e2fc2f24f3e0b915a5393b8d5d7217e4590249f4d1026f1dcd75ab40f",
        "deprecatedHashes": [
          "8ed3e62d21ee7af8debacb18ed495ae6b36a1f67e704757e5b469f1648b7a719",
          "b414d30ef11cae54247c0c07ffc49c8e93c3b1db9fdb5e69ccd4f77a3e140e00"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324446666Z",
      "vulnerabilities": {
        "vulnerabilityID": "1fee0272-81ed-4dcd-9f66-41200e765765",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FlatpagesTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "0bed5bad8b93583743759aeb32bde2c04b7af81d454c59ed40c328abcd42791d",
        "deprecatedHashes": [
          "fb8e6af3e05663d87964cf4bbcb080818b8c0191221f8e00628fc8f17f16d921",
          "0eac9fab287236b51bfa9dddf74339594ed501a748f7293a0b6be5680e80dfeb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324447666Z",
      "vulnerabilities": {
        "vulnerabilityID": "82f02a25-8c7a-456f-a012-cafd0915cf71",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FlatpagesTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "5c674b40e876363a6cd69d2615c570715eb96194e4130a63b3bb16c8a3bba555",
        "deprecatedHashes": [
          "942432d5ce523a4d20ca10cf05b67bb67e6230dfc648d9df6ec71e0437cb1571",
          "917b4d9b9eb2e43c63863583a792ff05226445ab06b197a3cf3c7277a975f710"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324448766Z",
      "vulnerabilities": {
        "vulnerabilityID": "6a98ed8e-a08f-4281-b36d-c341bc15d0f2",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FlatpagesTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "b76c075185e6e0da47477d719b7c7d6bf0ea2b5709eac3eaaae8c740a2bd6ec8",
        "deprecatedHashes": [
          "3a5a6c7c0340f3baea0b10c2c766eb3725584a503af4c026fcd532adc3d5e67e",
          "f7bb24cab9b9b95f85547e7035e14b3dd27082e3a68c802bcd7084c4616c18a4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324449866Z",
      "vulnerabilities": {
        "vulnerabilityID": "13710114-c534-4d9a-9620-e018f0bfcf57",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/LoginTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "9225c023033bbd62427d498e594f0402c7477da382a62a9d2bf9eed293f7f902",
        "deprecatedHashes": [
          "2909c9a2649cabe87b1f300ecc22fa778a2b2a58f775efa6a6b5515ecc507e0f",
          "941c49ba28aaf5b3474c3de1b69e7cc4dada989f6b953af59a241fd94543cc1d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324450866Z",
      "vulnerabilities": {
        "vulnerabilityID": "0e13b984-f0b3-4434-8acf-f8184e4a60f1",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/LoginTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "ee14db910ab33ba1c342c482cc66a955a011598cc92265faa6a3ff633a936971",
        "deprecatedHashes": [
          "91c3761c8e39d6139aa9fb06a1737837ec7966aa98f4807e83ca8cd640eae9f6",
          "730c17ceb5e986204270c01b10008ea2b777608e70ff3e32885acc66ea6f4972"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324451866Z",
      "vulnerabilities": {
        "vulnerabilityID": "b830c3ad-415a-4730-b7bd-8ab9952af290",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/LoginTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "d8501b7c4b6dc2823e96c3f1c39ed9b1a124d3a9f2a2874063f8e3b8d28649a4",
        "deprecatedHashes": [
          "b81e592e91b6aaa5f8e179200675fbeff68b62cbdc1e75e9c5e327c6806c2a68",
          "e9838f694a4b9373997476e417315abc7f8bbd32ba35dac961a4c15c6d560322"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324452866Z",
      "vulnerabilities": {
        "vulnerabilityID": "30b74046-5329-4094-aebb-b3ce82c9db9a",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/QuestionnaireImportTest.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "4fa0272794f5583fcca22a70d6552b326fe8e7dff1720c76780acc03995e1526",
        "deprecatedHashes": [
          "9c1f05d2359c71a4bee708de57cec2824c6b2cd599ae1934232bf6e08077704d",
          "ac7e1ccddf796728b222bf867feb5bd70d77d3b86e30d53ca6917d38423eacda"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324453866Z",
      "vulnerabilities": {
        "vulnerabilityID": "d0c5f178-7621-4ead-9494-3db642bff9b5",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/QuestionnaireImportTest.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "806c262aeebc30ce7f7cb7abfb1712c0154ac3fc0ed777991ec9fe31d7407bcd",
        "deprecatedHashes": [
          "687574c3d38dedd48d6e9f64292d003eba919840f4b062a34eac17ed5a163d6f",
          "0a0f85721792830a65bce329e04a1345dbf99d14ef8f0bb4f8a15a0708aa5e1e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324455066Z",
      "vulnerabilities": {
        "vulnerabilityID": "05ca83e1-5b08-4bb4-b071-0fffede59a6c",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/QuestionnaireImportTest.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "a158aaa53a39504ad0422ec0a6fefd7a1ad1c53f3194ff4be1df51925a8fa62c",
        "deprecatedHashes": [
          "18b17dca60cbc23ac288d7ecd0d835a1e9ddf157feedef6611f928f082af1148",
          "f1e16f91d43cd872b065536af6835a19f7321ca18ae6632d7b9e431d7aa2140c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324455966Z",
      "vulnerabilities": {
        "vulnerabilityID": "27974d06-4ccd-49b6-8f9e-f8c9a5a89041",
        "line": "411",
        "column": "19",
        "confidence": "MEDIUM",
        "file": "docker/README.md",
        "code": "EMAIL_HOST_PASSWORD = 'passwd'",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "9c91bda379809e183e743fee17f16326fe45298c404fc4041b0193c195fe613f",
        "deprecatedHashes": [
          "9ef89202fe019410698ac7b140bdad1973fc93457591a9f9b8aa926178a78e01",
          "c0bf69600dfb0732f00d9264c9dbfa0040bd52fe28daa234d69e1e595bf02880"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324456966Z",
      "vulnerabilities": {
        "vulnerabilityID": "c0e107fe-25e4-4aa6-85e6-e472a10b2d79",
        "line": "420",
        "column": "15",
        "confidence": "MEDIUM",
        "file": "docker/README.md",
        "code": "GITHUB_PASSWD='pass'",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "586d943138b81b5e3834613a3835efc909f9e9923ff15ed86ff2f644c1356c56",
        "deprecatedHashes": [
          "b83ae35bae5c75563172341db7170195f93d79f597b980a17c999dd243208d60",
          "e00ecd4a64f8ff8362c86cc6476a1fdf159a4598fc974b6baf39f0f6eca558d5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324458066Z",
      "vulnerabilities": {
        "vulnerabilityID": "f44f7ad6-7068-4e9e-9245-2a8b5b16be61",
        "line": "86",
        "column": "84",
        "confidence": "MEDIUM",
        "file": "emif/population_characteristics/comparison.py",
        "code": "0ec76\", \"2e303fd12bc5e5fd03a54651dd8d6334\"]",
        "details": "(1/1) * Possible vulnerability detected: Facebook Secret Key\nWhen use Facebook Secret Key is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-4",
        "vulnHash": "1674835d7c82a6220edf942ada3b5e3b8e4ad5e0ef96c3573dad013f15fec3ac",
        "deprecatedHashes": [
          "123f0770852f21077fcbd370329654329d6e8961489fb6685225a0a0213e1e70",
          "914c00fa60d118b03b700d479f34be1bdfe737882c07ea1be699da4d50057a59"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324459166Z",
      "vulnerabilities": {
        "vulnerabilityID": "4091a7ba-edd7-48e4-9202-ec1ece7d1bca",
        "line": "133",
        "column": "84",
        "confidence": "MEDIUM",
        "file": "emif/population_characteristics/comparison.py",
        "code": "0ec76\", \"2e303fd12bc5e5fd03a54651dd8d6334\"]",
        "details": "(1/1) * Possible vulnerability detected: Facebook Secret Key\nWhen use Facebook Secret Key is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-4",
        "vulnHash": "20009fff871de91ea5c5f4ef3e4728d5ac97080d1ec11ae6965f34de7d4abd87",
        "deprecatedHashes": [
          "03b9c1b464a7f949e3bbe0e6d82f60bd90216aa81fd6a26f74ab76e50c9402c2",
          "eca988f43dbbde75d75785f46410ec9c85fedc2528fc98735f9c6d3136637518"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324460166Z",
      "vulnerabilities": {
        "vulnerabilityID": "c15f47c8-62d8-41bf-8d43-8cd5005e2657",
        "line": "119",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/emif/settings.py",
        "code": "'PASSWORD': '12345', # Not used with sqlite3.",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "75c8ef84cc5ab9cea5b7172d50f0a212b00fbc2444da474f7d5980e96f0f44b7",
        "deprecatedHashes": [
          "2251f03a2934603b48942753d92a5bc7509408aefd1666c8b02a59b11e2b1228",
          "d1d2a0824be1b1bd1b65f599befbca906debdc0f056807ea2bc55ce2469df01b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324461166Z",
      "vulnerabilities": {
        "vulnerabilityID": "4fa7edd8-b08b-419d-8097-5ad980242fc3",
        "line": "36",
        "column": "1245",
        "confidence": "MEDIUM",
        "file": "confs/not_avaliable/not_available_includes/fonts/FontAwesome.otf",
        "code": "twitterfacebookgithubunlockcredit_cardrsshddbullhornbellcertificatehand_righthand_lefthand_uphand_do",
        "details": "(1/1) * Possible vulnerability detected: Twitter Client ID\nWhen use Twitter Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-7",
        "vulnHash": "acfdae0c4a4a94124d1ee559af137965bac7a05ca77ad6b5618a29a127d7bba1",
        "deprecatedHashes": [
          "676f10e533a4231c0c5c9f53a5ad04d3e2f1b8aec8277e3d8d717665c5e22376",
          "eafd393388cc504502a11e41f21de7aa80ce7c033af16856edae51c2f6710b1b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324462166Z",
      "vulnerabilities": {
        "vulnerabilityID": "8c5ccd18-03ed-493b-abf0-a6ae8157a8d5",
        "line": "36",
        "column": "1260",
        "confidence": "MEDIUM",
        "file": "confs/not_avaliable/not_available_includes/fonts/FontAwesome.otf",
        "code": "githubunlockcredit_cardrsshddbullhornbellcertificatehand_righthand_lefthand_uphand_downcircle_arrow_",
        "details": "(1/1) * Possible vulnerability detected: Github\nA GitHub access token was found. This pose a critical threat against your organization since it can give access not only to the platform itself and all the members of your (perhaps private) organization to feed more accurate spear phishing attacks but also to actual source code from your applications. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-8",
        "vulnHash": "a09137919607cb6ac89bc93da1a62161070c75ecffd47ddfe334f1922aa7ef27",
        "deprecatedHashes": [
          "ffac8e23d621a87bef18d01691ece0e716bb241f0a3fd3857cc24ab6b746e419",
          "274e7cd9c57a61b7ceb01f13e2496d52dd2f773ce85cdb316858cd4e62d6ada0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324463166Z",
      "vulnerabilities": {
        "vulnerabilityID": "677fa2eb-5d2e-47d4-9a45-c658b0cf7c1b",
        "line": "36",
        "column": "1134",
        "confidence": "MEDIUM",
        "file": "confs/not_avaliable/not_available_includes/fonts/FontAwesome.otf",
        "code": "linkedin_signpushpinexternal_linksignintrophygithub_signupload_altlemonphonecheck_emptybookmark_empt",
        "details": "(1/2) * Possible vulnerability detected: LinkedIn Client ID\nWhen use LinkedIn Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.\n         \n(2/2) * Possible vulnerability detected: LinkedIn Secret Key\nWhen use LinkedIn Secret Key is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-9",
        "vulnHash": "adfc52046c6775274c7c52e22fe45bdcb156570cec412061fb62e9e9b9139f45",
        "deprecatedHashes": [
          "7c43b97957d59767bf43bb3b9011a5468c35e85304aeb30644e422648d120d36",
          "533e9c0ab7e6d6f782576d1fdd1fa01063382137cf019385eaff60e9949d0b47"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324464066Z",
      "vulnerabilities": {
        "vulnerabilityID": "5415d9d7-e67c-4acd-90ca-2774b37674af",
        "line": "36",
        "column": "1712",
        "confidence": "MEDIUM",
        "file": "confs/not_avaliable/not_available_includes/fonts/FontAwesome.otf",
        "code": "linkedinundolegaldashboardcomment_altcomments_altboltsitemapumbrellapastelight_bulbexchangecloud_dow",
        "details": "(1/2) * Possible vulnerability detected: LinkedIn Client ID\nWhen use LinkedIn Client ID is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.\n         \n(2/2) * Possible vulnerability detected: LinkedIn Secret Key\nWhen use LinkedIn Secret Key is recommended use vault or environment variable encrypted for the best security. For more information checkout the CWE-312 (https://cwe.mitre.org/data/definitions/312.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-9",
        "vulnHash": "b0b047498fc50fb599656d072cb2dc4743ff81b20686eb1a0b00c6fcc6f4af75",
        "deprecatedHashes": [
          "ff2e0832d665441eaaff6a9ddcc5ce66e6507e1f204d58e818d05ecb31bd3125",
          "6b6b3cfdcd4ab12b45597cb1ac7a12496a956f210e1f85a61c0d665b500d0782"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324467366Z",
      "vulnerabilities": {
        "vulnerabilityID": "6d4ac462-8485-4203-8aba-a510ae5e2436",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/CommunityAccessControlTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "49090f45f0bae562c2aee3e200ddb9005b67aacf8a725dabcc0f863af40ee22a",
        "deprecatedHashes": [
          "28db2480487eb5dd1e5594b18404af63b7f6d57e5ad3494226400acfbc3bf0ee",
          "cf9ca96dcd8143bba9ed363d97d9cb250c38a5a3e15754a657ef6be716021981"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324468366Z",
      "vulnerabilities": {
        "vulnerabilityID": "bf936b00-5248-4140-9243-22c3760f322d",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/CommunityAccessControlTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "f3302194a957fb08fbf42009abcc04eee5acd8d8224eed8bf6153a2ffa1aaf30",
        "deprecatedHashes": [
          "045f70914e3a21026159204f029c207c5b0158d5dbbf2758501d10dd6942e461",
          "a1c2bd53bcfdba63929ad8a321cc3111908f37d9f38d05388a4368a3bce1dd00"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324469266Z",
      "vulnerabilities": {
        "vulnerabilityID": "e525e313-4889-4679-8b59-f068227bcc49",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/CommunityAccessControlTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "8b7584d57252768dd44907917709f1052ae194e39e61fbbdbb11eeab12a60fda",
        "deprecatedHashes": [
          "57e9f4d7adc3a619892ca793414d273543177c31a5fc9fa151ae9acd20b65ffb",
          "2be5b575b10f3c957bc29d180ecfbcc2735b851a52c10a128f06c579cb44f516"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324470366Z",
      "vulnerabilities": {
        "vulnerabilityID": "bc545bf9-b377-4514-adb9-28b0b7f9d800",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintShareOwnershipDraftTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "51a23c08d9500aaa31303184ca7b233daf5e53b68d886dad385ce0f1149e2a53",
        "deprecatedHashes": [
          "7c8f14f1e03cdae1d29d76aa8d23080b551a3591a37f9e10c3f18e2c50e50a40",
          "de06977f48d168123665fbd65adcad4bdf80d1b091da05b8dc304caa19e62dcf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324471266Z",
      "vulnerabilities": {
        "vulnerabilityID": "6543df20-558d-4316-800d-30cac6b36939",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintShareOwnershipDraftTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "26046b3ba840a3122356c585522bdf58c95e7825513a2937b58af707716da471",
        "deprecatedHashes": [
          "2c914b1af48d490154038dad1cf0df1b6f0bd2c3ae4de9bfa0f7f8a05e444236",
          "47a283ace83107f5f27700041d1d60e0b90b6df01e66541511543d39e9d60efd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324472366Z",
      "vulnerabilities": {
        "vulnerabilityID": "6d03b4b8-278e-4a2a-a662-66bec6d34f7a",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintShareOwnershipDraftTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "45b105ea1522c760923ebfd5e4086c35120ef9f5854e7b682028e8666e6713a9",
        "deprecatedHashes": [
          "2a7f7ee733ae677e960fc4b57e0bc24216f7b2e350efa3e8d3fc7b4a25f22fca",
          "55137c045e2fe36879cb6f2adbde871ca9e05cdd4913374d00ae4b105888c136"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324473566Z",
      "vulnerabilities": {
        "vulnerabilityID": "38c1f9f7-1ea5-42bd-815a-fef4aabeb23d",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/PluginAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "816027e757e536aa84a316d2d460f6dbec02581ff85edaadc3524902db29737a",
        "deprecatedHashes": [
          "880e915e5fb598cdfbe3ca97ca925dfb374d5ea939e5185e85af76745dd03a8f",
          "5817200999545489492f6b47e5c7e26f30b8d83af50d1ea7f18b6bf9003146b7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324474566Z",
      "vulnerabilities": {
        "vulnerabilityID": "1336a48b-3dea-442a-8b94-02dae653098d",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/PluginAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "b420a39958903b205a5e8a8c97a34e8219a2e6a641f42444ffe3976463723502",
        "deprecatedHashes": [
          "e9e4a75c16f76e4ebb68dc99b7948fb6512f93c3bd5a82448b4fc7325323ef3b",
          "02e90bb673aef8af1c93a776be7efe0e59829ba98973ca9af61b9bb6ab4e91f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324475666Z",
      "vulnerabilities": {
        "vulnerabilityID": "a8fb63fa-ad00-4e53-9c43-e2beee266647",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/PluginAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "99bd728c474a39f09e794bcb2cd7b5afd72be8eb77c2391168aa8c7cfb01f51e",
        "deprecatedHashes": [
          "6b9f0f530cff87c85cab5dd629a6f001e25e628980bc0701b735eb3d1911810f",
          "8b398f2ef9555af3d7db4d8e6fc336c73fe7360d6e4696c158c2cb9bf887b082"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324476666Z",
      "vulnerabilities": {
        "vulnerabilityID": "343115fb-cbf0-4e9c-90da-546d7d931af0",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintPrivateLinkTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "cbc5e585ea3a6fb16d225ba98ae4a0a1526698a5f496257e72acc589b1d6a841",
        "deprecatedHashes": [
          "e67f1e19dd27b657eb38dee60a6b518b1fb42efdb330ea7b2a8785a42f5f0f58",
          "92fbcf78eb780de4db1ac575658647ac071df59b04478e4e3a337b26924adac1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324477666Z",
      "vulnerabilities": {
        "vulnerabilityID": "c4ec0909-1e3c-4901-97d3-7e82c7f53405",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintPrivateLinkTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "61d27569afdae1735942249a3d81a0a449b0345653ab15ae994dd573cfae3c62",
        "deprecatedHashes": [
          "f65ec01dffb74eb884b2cebb7aa79260729e1e8695c755201062ed07c3fda71f",
          "72ab5f7e168df8a9916a9b366e913cf898975e57d280361e1baf6ea405a84cd5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324478666Z",
      "vulnerabilities": {
        "vulnerabilityID": "9fd0beb6-01a1-47ae-a871-ce68ee28be03",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintPrivateLinkTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "358722c6c571d0d1adfb5260816db8a74953168027d6a4b823c63677de9dff2d",
        "deprecatedHashes": [
          "0227085bb03eaabf25e26d0cda792408e2460dd70518b84a8f1cd5bfee3779a9",
          "af1ed48d6fb126d0a2f69aafab7be6e752873a26f077b67f259d12ef1a20268f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324479666Z",
      "vulnerabilities": {
        "vulnerabilityID": "a3f29ba3-3053-4a07-9efc-81573d6c4259",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintShareOwnershipTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "af4c52841807fe78bd6f17654c2c971adca689e9ac5729d119d1d69526100252",
        "deprecatedHashes": [
          "26d6e21cda1ec038284a8554fa1a5ee6eac044e8097211a01212133a565ca33b",
          "f0e370b1449dc5cbda7e5d13a685b2634b6910c393d74bce3052dc4263f6fc12"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324480666Z",
      "vulnerabilities": {
        "vulnerabilityID": "9eb5253b-3a01-4439-b271-023564184f38",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintShareOwnershipTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "fa88893b4fdf3f9e778e750eecc147661f807d0f3c3b51a768c2791847de032a",
        "deprecatedHashes": [
          "7d8602b55359600caac5e058e0a257a0e8356b8b26923bc7583e9058a8ecfc34",
          "34110a4cfe87734c2d4f524b6e764000e1df9a73667cd94a386a8b0c0e284344"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324481966Z",
      "vulnerabilities": {
        "vulnerabilityID": "c1794084-9044-4cc6-b0aa-3b35893bafc4",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintShareOwnershipTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "2c1080961efe6df75d64a42b365f3e5e58bfb6feb56e74a1ce32071e5c9a0592",
        "deprecatedHashes": [
          "5e1e715cf30a8542193e022d01946c3d4f7e3e20afe821d195d539f84c9c2a48",
          "617c055cc51364d30c407ea39560457e276ce3e717e18851583206580f1e45ab"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324482966Z",
      "vulnerabilities": {
        "vulnerabilityID": "8ba09a58-eba2-4e6b-82aa-4c82f67a344a",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/QSetsPermissionsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "0d1528bf88d8214a775b11981d62a7d172cac923afadf3c5f9f89137c515fbb1",
        "deprecatedHashes": [
          "30d401795a4280df6164bbdb9bff00e8bebb44c1ed99e07dccc0f3948e2adee1",
          "44438004638ceabecdd2be141ad6138f85ac0c884c3f3f3ce4e3ba2f6e507f03"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324483966Z",
      "vulnerabilities": {
        "vulnerabilityID": "0c4ad1bc-057d-4758-bef9-7efc56d192f3",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/QSetsPermissionsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "2c82b44d104e65709177e8db33f8caad763b53731beac678fc1669a89f05bb97",
        "deprecatedHashes": [
          "7b6f40bfb3899aa4b6d8e23f6107994a0f871ff6f5e77418658d3d28199604b3",
          "59ec6431ea7d9651f5fa3833c0207df8ae38d07da96633b1c179a5e3a271b1a2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324484966Z",
      "vulnerabilities": {
        "vulnerabilityID": "c6f67808-0f7e-45e5-a7af-784cac3f290e",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/QSetsPermissionsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "6f1e1ac88b05d746cab905e4649472eb44ca5d8402403919ce8f0185a95b4b01",
        "deprecatedHashes": [
          "03fc4a4c0df6722bf31dc2d603c4865f070417507e8fa10613fd5df924ec394f",
          "60d220f660ab80e05d537c78fc4cfce08c591c7eff89ed8ccd19ef0c56e64334"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324485966Z",
      "vulnerabilities": {
        "vulnerabilityID": "ebbecabd-1603-49dc-abc4-3bd6f5cec960",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintAccessControlTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "6b54843269d3d0e54d284c0a0ecb4fb3d7a70a38fa41cf778e22350d5b60d653",
        "deprecatedHashes": [
          "60e5fd9081288a96f04c38ddc573c0d7545b9814dce2b7baecd77230c3c7e443",
          "90806c060bee8a38bbb43facf6e53a0f9f0567c728ef990fd5c1d43d02ff5a32"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324486966Z",
      "vulnerabilities": {
        "vulnerabilityID": "44efad0f-18b7-43a1-877a-e240f34222ce",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintAccessControlTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "37f519a1225d89cd85b31d3cfa8870cb338c493d1bce08c63161be25cb6abe23",
        "deprecatedHashes": [
          "f7e7b138fd80b3942ee904f4b9546ee95543add6ac29e4df3fc661ebed1eb8bd",
          "c36e195f75b62199cf5d1d36c056b41d57a7351e0518b1aef073c34c6cc2bdd4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324487966Z",
      "vulnerabilities": {
        "vulnerabilityID": "bea4d9a6-f10b-4d69-a71a-685d08282b09",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintAccessControlTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "f41b90fd06314d28ef1dd029968c9c18d2b74c495b64f16469f3a5a1dc480450",
        "deprecatedHashes": [
          "cb44510abf6504a42d1f590b25ece868adae15b07fc4206e901e9d492f54dd55",
          "2e2310639fdafe8f7420fb63ae70f97a31ab5f950779f59ce19a2c51791c01e4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324488866Z",
      "vulnerabilities": {
        "vulnerabilityID": "277d2cca-b263-487f-9fc5-50b9a0a137e1",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintSearchTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "c269ad2e20e58c737c8f5d63da0a30f01aba667fa80db3f93343e12b45359e84",
        "deprecatedHashes": [
          "0f9b6c15d6bb296dfed4398dbd9f5021e297658ecc338a19e313db4f1b0ad148",
          "2d87cf5643201dbc7493eadc9cb30ea32e879dcd835cbcb37efb1298439e432c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324489866Z",
      "vulnerabilities": {
        "vulnerabilityID": "f01e080e-de17-4901-9fa6-bb722a647cae",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintSearchTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "c05fa6c3c22cd63b80d5aaccbde49e9825b8e5573839773eb7fe573f8c100cf3",
        "deprecatedHashes": [
          "986a86f7f9d271facf84679f436ee71a630db15d0232c727aabdd022b6754a04",
          "2071ad77c1290a95a0e0497cf69f9084770db18b206df81d550799a6c26d4c39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324490966Z",
      "vulnerabilities": {
        "vulnerabilityID": "70178a64-2337-466a-b9a2-6145154cd428",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintSearchTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "98f2861fa1d3801cb42af002ec90699e1b2e3effa1b7b257d79d1ec491e2d0d5",
        "deprecatedHashes": [
          "d6f0c1b44a48271fb88e6b3ec04f57e6e40ec133180abc6936e5d202eaa5172a",
          "419a6d391fa78e314285886f1fdc1d382467d445038d9c67b6cd4bb6340dc48c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324492066Z",
      "vulnerabilities": {
        "vulnerabilityID": "9c94b40f-14d2-4838-ab61-0eaef96dd446",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupAPITestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "e44c2e8a922184af89cdb6c0187ba0ff32a9f9edf28c722afb0fb73eaa7cb11d",
        "deprecatedHashes": [
          "5248b76b679520f206ab89eafcfad1a89df46e3895873cdee1663978a11f6878",
          "84b6d6e688f9b4f3293a7c7958f79a5a8e1526a9b5e6e20e872771b3ec44f16f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324492966Z",
      "vulnerabilities": {
        "vulnerabilityID": "4c114103-30ee-4a6b-8a2d-89ebac444bfe",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupAPITestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "6d5eb3bf2be1d94a5170f9206414c8af13107850643b351630cbc61e39a0b5fe",
        "deprecatedHashes": [
          "67f3a15438cde1a14ab043bb9befd512299ccaa44c148fdf5e2a799a88c76107",
          "916c4d54b6db16af5ae271ae2b36ecd857b5e99915fc09076a33cd146caa5bd9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324494066Z",
      "vulnerabilities": {
        "vulnerabilityID": "caf0dc7b-6328-44b1-8971-430120e80c58",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupAPITestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "d855c0bc46e0633ac9cb8026bf8bcfdcf06ea3109bd40fa0c066c54c4d1d7c05",
        "deprecatedHashes": [
          "38f3136dc5a3123e913ccd4a66d98592af4f2c1d82882aedc317a92dd1625d95",
          "67809e8d0d23d5e52023224bac57eb1145fd54a58f769f7ae4eec8413f3fb358"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324494966Z",
      "vulnerabilities": {
        "vulnerabilityID": "f3eaca63-b40b-4006-a5fe-350c964a02d7",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/SearchEngineTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "f514e3215b294a3df3b54b7542b56005e6aab02ccf028741cc0171aa70a88d2a",
        "deprecatedHashes": [
          "6dbde9fea3c86907569475f52edfe8d36152ed64b227d658137feabf0fc09f80",
          "224b8a51f1105a38b7b0272a3dcccfdee0e6b83794eddbcc208e6d4ef557ac2e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324495966Z",
      "vulnerabilities": {
        "vulnerabilityID": "746adaab-f509-471f-8166-f79932061c9d",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/SearchEngineTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "f36312fe7724d818d15578ad74deeac589f234c151ca8bc870d01bdba9315817",
        "deprecatedHashes": [
          "c7cbca4d044e2a902c67c85a65d6026465f7096c1bdacc282a9898a091e338a5",
          "1b8079408395fa7bee9043448ef49ada04965899c5e841828187f0d5fb11e18b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324496966Z",
      "vulnerabilities": {
        "vulnerabilityID": "9738cf47-bdea-49d2-a01e-b6a4e4015c90",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/SearchEngineTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "44681815fa214dc41ccf363645e8ebfa9a7865a95dd7bdaa2683070e79e32cc1",
        "deprecatedHashes": [
          "4c131e0d765693e330776f6fde13ae26a7a0467d8bc4721579bafc4bb3a3523d",
          "94ea64ce2a1378f55e0384fe42053e67756ee07ce8d7114f99f4dae7649ec58c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324497966Z",
      "vulnerabilities": {
        "vulnerabilityID": "1991e382-e996-4bb0-aa5e-38d15812e938",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "2ee070741af5e3187f67edf9eb1d52be70cb5ec5a5ae16f6141c3b482b9aa63a",
        "deprecatedHashes": [
          "6557ffa59f504073f315dbf0771f92835f8c4578be16705615a247b5f26eefd5",
          "77e30eb008bb97d9312786f6645eb935ce25c485523abded3ed544de4ce48ee3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324498966Z",
      "vulnerabilities": {
        "vulnerabilityID": "3de6e6da-ae82-42c6-9c80-526a22f7400c",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "5957b648b97c1c65a400abf84c935af385e11ad5788102b1eeb0bf1954feaae8",
        "deprecatedHashes": [
          "91989405a60825b2b9e89f9d0b5d869736018fa9db9aece418170b3728a66ace",
          "bfc629ff755f71d81382a553915ffab841fb01203b1f216d5b68f9b68efc2ea4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324499966Z",
      "vulnerabilities": {
        "vulnerabilityID": "0687de69-b6c3-4951-91d6-e940a4207d23",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "07708d491c534574d2487dd1b79cd5cc8258f0bc4eaccf561e527e77624fd07b",
        "deprecatedHashes": [
          "db0e68b8cbf4f4e396f47051f1a03198204aa12b302259b7a2274d50a53b25aa",
          "65d95042f29611bcbcd780b04297c74c85a965c26a490d1a450765aed6863e1e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324500966Z",
      "vulnerabilities": {
        "vulnerabilityID": "cbe6bbc1-fa68-436f-887b-20d20ddecb21",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupEditorsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "7ac35eb7d9efb33f346e9363e983674d24907404607535f0b998dad9951c6696",
        "deprecatedHashes": [
          "450c70dbd02e1aebb1e3920eb94644f1d173afc1e293fcaaeea0115eca7a9a1c",
          "a570b86bebe513f234a25d2add46d82995454a6a5e315acc1325169eca25666d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324501966Z",
      "vulnerabilities": {
        "vulnerabilityID": "4ffd0d29-2124-4934-b277-88a5704b99a2",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupEditorsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "a145a84121ad3280b59210b16d2c9426505522c71074fba5ebe839b9f6f9e8e4",
        "deprecatedHashes": [
          "f2e575dfe005509b441dabb76d764b177da145f9d2d167578d0ece72d9dc807a",
          "558a286a5a8b2e8a1069e4e16b2072537e99a5ad9e2c2ee1371007d7d56ab0ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324503066Z",
      "vulnerabilities": {
        "vulnerabilityID": "0976d9bd-9f3e-4cbf-8221-fa1f5bffcd00",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupEditorsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "cd2cdb2b6a7c2cfdd6b34828e4f6edec03a581bfe1293f339dc61e2c9a4425d4",
        "deprecatedHashes": [
          "0935395e299cd7e0248bba83f6c138ed4e238194cd12bc29d4918dc3c60ab3e0",
          "79001735b82b8b3280e19bb337f133d49602742069b3efb7191a43ef4d88e9cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324503966Z",
      "vulnerabilities": {
        "vulnerabilityID": "569ab3ae-b0f1-4f4a-8fc9-263b673e914c",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "984a777cb3949fee4a11fbbad45ee802fde2d3dd77326ceebe2b1e84cb579d2a",
        "deprecatedHashes": [
          "d1d83eb003adc41f2778f22782503b496f00c8f0fff8d019ab5279f53d8981f1",
          "5626a763fb119341837a78949a067cc688c79903717a548562afdfe70847ea6a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324505066Z",
      "vulnerabilities": {
        "vulnerabilityID": "f7b81ab0-37cc-44ba-a717-cea074fabfdd",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "1d13d7002bfecd8fbf71b2e4aa3305b3c3c99d6261498cfceae8249f71131ec6",
        "deprecatedHashes": [
          "e5d9ce148fb4e37de72df45d04816237bd0a1cdf277fc4f26f6dacb8aedac711",
          "08f6c672463c57c28ff013bc6ac7ebec4de376d0907489930f3aea386d7db0b4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324506066Z",
      "vulnerabilities": {
        "vulnerabilityID": "d515606a-5a9d-48bd-9772-897bb0424fd4",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupAddTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "da485f3380689e5861a8293d4af60a5fddfddb3ee1bf1e74e00ae467e406796b",
        "deprecatedHashes": [
          "e1c356d04e834f9994e1fdd7d0c39ca9acf89097845ad6c9a1234832d6c4fafb",
          "3d52da05963a0b61bc1bf9955a60587abeadc1039c353c12d7c8622392b65d14"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324507166Z",
      "vulnerabilities": {
        "vulnerabilityID": "d304adbf-e15a-451c-82f2-2de2683ded30",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupPluginPermissionsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "490241dabff192ec61a76675189ba79c369313c480cb05ad34db9a7e08b37f9f",
        "deprecatedHashes": [
          "529daeafd510be90f1a06ad825cd38eea35dab762d25b900f9cdf4428f74bcaf",
          "0a7e511cba6ab61c106741b3bcb96692d02afa87e00dd3399bf35ac7e65a0985"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324508066Z",
      "vulnerabilities": {
        "vulnerabilityID": "876f9718-ac6d-4df2-b10b-9b5a1f34c961",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupPluginPermissionsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "009de31cd4da2470f2d8575ad674929304cc4f3d874d20d2ffe833629663f0b0",
        "deprecatedHashes": [
          "b84c86dbf81c44873362d6a6bd1ec90619940829b96a794007fe55df8ed4b8a0",
          "01062d336a83d86bd5b4889767e40297883bcafc28c5d6c732714b476590bad7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324509166Z",
      "vulnerabilities": {
        "vulnerabilityID": "7cb9c1a5-cc64-4f7c-a8b9-7cfeaf25caa8",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/GroupPluginPermissionsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "965475368c230c642a58476235142631d8284aabf9dfd92a223127d2e95ea8f6",
        "deprecatedHashes": [
          "970a060844856974a414cb359bed6271b7f85e604f2709194cc8344c859f74a4",
          "fd9c892f202c5555d8e65bab26a0b5296668e56d7dcbf1db5cd0a77c15bdd261"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324510166Z",
      "vulnerabilities": {
        "vulnerabilityID": "c3f5c6eb-7f7b-4ce3-98e0-d51d61371f89",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintPublishTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "2371edfd37fab61f1a7a268e7f6fe9a82c18bf3625d9ee6b63d58817b06c7d29",
        "deprecatedHashes": [
          "366faa3f347ad628018b359f17bbf654be5c283691950b78193316959b6ea078",
          "8eed0990cfe8508f7486e853263e5c096029d1d2209ea88d4972b8927f6238fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324511167Z",
      "vulnerabilities": {
        "vulnerabilityID": "11a3575d-6a4e-4ab4-96c8-b7eef57015e1",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintPublishTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "3dbf53ea08167f572f1bdf1401b4689b6304c96de66fe7f895bc313585d057a6",
        "deprecatedHashes": [
          "0a97a829374da37c3c45c68423aafa9423b5ab1c4a81867b313b742ae72ef636",
          "d4dc5c9d31f29c32bc709d26a0f7e527cdacaf5524eb6e5cdc3764856cf36fb5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324512167Z",
      "vulnerabilities": {
        "vulnerabilityID": "d7232766-26b9-40f7-b9bf-b2c7d9b7b04b",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintPublishTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "1092cd14b1a8ac1fc065234fcc252e47a38077e747cbcd8dd334d489a2472d35",
        "deprecatedHashes": [
          "2d111da5a579865dd5cb8b6e71852a26834637cc94ec2551866ce3673ef6c561",
          "07990d5cd44133e546cab512b13e14b928a2c1b2e27ba7ab7358ec1107f83f24"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324513067Z",
      "vulnerabilities": {
        "vulnerabilityID": "54567178-b7ba-4fb6-8bcb-107a061a979a",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintViewsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "0f320acd8013197f238fb4ada574d5bb07200cadc719d6f0083d9d4b8b0e09a9",
        "deprecatedHashes": [
          "59385c07e07343c8c67572575491fc18764177b4903bd5bd2c9bc821b510dc09",
          "087701ab73522984eab93d377eac7d735a1ec70446d94c15b7c4d4fe7c44fbda"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324514067Z",
      "vulnerabilities": {
        "vulnerabilityID": "bd2cd0b4-9657-49fe-a6b1-1953866a34f0",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintViewsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "c253b478b2503ef9c35631fc3e7c27ff5dad62f26755bc3dfad38decbf56cdff",
        "deprecatedHashes": [
          "a9fb91852429a555c62ab7444938a4974432d6d63ac913a0db44b7813c446210",
          "83a26b1290bb02f0a66287cd787f62d734f7dabf4179db51aceb8cadc3212cc4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324515167Z",
      "vulnerabilities": {
        "vulnerabilityID": "dc1bc1c3-d055-4d5e-9c9e-018741801ea2",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintViewsTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "36ecd4790b018b4448bd96880029fd56a6de210c0fe3aecf6f2e0ef3bf45b547",
        "deprecatedHashes": [
          "af3371bed8116ef897c4abeaa50729b41798d2346078a481c4adf67ea4282f8b",
          "9843c743899c210b2f74794ff4f1bd0e8027d101b876ae1a6964d1bbf1103aff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324516167Z",
      "vulnerabilities": {
        "vulnerabilityID": "75c57b67-3915-46f2-980f-d6c72629b3b2",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintListingTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "102fe4d8f282d0809e883a921654d502a90cf755fee1569aa2ccb1b689a8f4f4",
        "deprecatedHashes": [
          "f0665238250344a81f40a7d39223c3da5fb152a0353ddaf79f1e2d6fb057f550",
          "a14155e4b1e0e8da527806239bff3115f13a5279ba7295fba1f358a4b1d21bd2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324517067Z",
      "vulnerabilities": {
        "vulnerabilityID": "82f354d0-e3d0-42c4-8d44-03b60b4733ab",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintListingTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "a31179d10ddbfff4367cc5eff9ddd2f90e0b6da401e50ea6610daeeaeb7fbbfc",
        "deprecatedHashes": [
          "da036419ebd7cf2822a344b13778f7597efc6c7a997cba7859acf89d153cf050",
          "cab29c17e55ecdd10c52e7151da37c176083f5a5664cdbbf98ce682c9cb15ef5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324518067Z",
      "vulnerabilities": {
        "vulnerabilityID": "23521f47-1229-419f-9258-57ae1ac24b31",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintListingTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "65ba6b61d26f94036993bdab99eabb5b439ed6f1d9dcb96988cb2f2bdaee286c",
        "deprecatedHashes": [
          "e09f0c1e6b34d538d9cbb802e0b7052dfa1c57b1e9b2ef6fbfb979d0472891e4",
          "c19b5e80eb59fb9283bd7200a5d380a369546ca8ed4984f955b11a06cfe885ca"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324519167Z",
      "vulnerabilities": {
        "vulnerabilityID": "948bc939-c005-49fc-b334-98f007cd1c5c",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintFilterTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "c2b984f005dd7f891917c7db98dcae522c96ad3246c5b2c47cbdc2b03848c8bb",
        "deprecatedHashes": [
          "356d2ee35f1031d24683128184b48aa8399b7e338044e9ddfb21abd9bbb90410",
          "a41fe1b43db841dd834a4995bd3ddd63367f98ad319d9e4fd0fa1cc5057cf73f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324520167Z",
      "vulnerabilities": {
        "vulnerabilityID": "f7e1e2ad-4a37-4074-9c40-62a7a098c6e0",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintFilterTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "0ea21586fca39421ece5bfb3143f106e094e411bf5fc0ed10d785d544321516f",
        "deprecatedHashes": [
          "e50872693bdcd9bf6f5d61cc3ea23ccf5a217fd400bcd1df8cf7b8d775ca0b9c",
          "c219c6fe4b1b705e9a1130b4bde184d6d2c4e02b15bda0f188b7e64275afe0f7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324521267Z",
      "vulnerabilities": {
        "vulnerabilityID": "aed2c7b0-b287-4af4-891c-d490ad7f4c3c",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintFilterTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "be07bef5171de7ebbdc49803f2dfeec473b0807d944afa3ae6ba304e1ae671ef",
        "deprecatedHashes": [
          "72c6ea76111a5c5f812217915a0360dd49f8638b26dcefedbbfaad64c69e7c60",
          "b7cc2dec97c2fc90c8d01051a4fc0fd924cd1df94fb6499eda9578b94a094695"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324522267Z",
      "vulnerabilities": {
        "vulnerabilityID": "ca8e8f39-1ab4-4d3e-ba03-d738ff87f70d",
        "line": "56",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintDeleteTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "d6881ce571d8ae7985ce05286612f3afe2b65a991f321365f41f493b5c8ec4b4",
        "deprecatedHashes": [
          "bda43f744b0c2203138dc0e4917a9fef923673718b329a2543af7d25a800d53a",
          "a141bb21c92d66cfb2bbf2bafdf052b5b22fda8aae28d5af4c08dc63f45a0198"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324523367Z",
      "vulnerabilities": {
        "vulnerabilityID": "6249ae49-6292-4b4c-adbb-1cabbc12476c",
        "line": "74",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintDeleteTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "3e9ca65b5ca8286d8cf9f8d741cf99a32cb477bc02e6dc5168e9c69f7aae333d",
        "deprecatedHashes": [
          "27e6776b5a41ef45ff3de6896f539d8e0d015d4f00a83cf2b03b823cff058af0",
          "260c5a3a39bc51b8c8f28cff72f2173f1975081659f73f0efbc09423a2999e0e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324524267Z",
      "vulnerabilities": {
        "vulnerabilityID": "486c7347-4c88-4fc3-a29f-2051561612ae",
        "line": "92",
        "column": "9",
        "confidence": "MEDIUM",
        "file": "emif/fixtures/test_fixtures/FingerprintDeleteTestCase.json",
        "code": "\"password\": \"pbkdf2_sha256$36000$WauzpJOXCyWr$tIWKvitjYbc1TbTBA7AhOlT+MrwafeWaPENgVAQdH78=\",",
        "details": "(1/1) * Possible vulnerability detected: Hard-coded password\nThe software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data. For more information checkout the CWE-798 (https://cwe.mitre.org/data/definitions/798.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "Leaks",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-LEAKS-26",
        "vulnHash": "c904d751b9ae0325fe0ccc201a9a2ff79d672b195e6aa7c31d762c5f5014bb67",
        "deprecatedHashes": [
          "93c02ccfcec91ceb3da54043ca96ace804dcdc091cd91ab3278fe133a1fd11c3",
          "c815de1effdc6cc9ffcdb7e3c89cdc954ca494fa3a678057814f614f27cbe875"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324570967Z",
      "vulnerabilities": {
        "vulnerabilityID": "44506d19-afdf-452c-ae94-9bfbb95e8ba3",
        "line": "78",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/dashboard/static/js/emif.dashboard.js",
        "code": "eval(data);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "3636890a21ddc6994d01f16dd8b74dc502bf1a6bb143beeb8eb22ec24b16ea44",
        "deprecatedHashes": [
          "eaf456b8ffcae9ea74cb49ae8f587163600d04c69364244a5142ad7af0248c64",
          "4e7bddff93ade89d97531ca92f6a89e4fe940ccd51528cb4983bc4bedf06437b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324590067Z",
      "vulnerabilities": {
        "vulnerabilityID": "c8985b08-807c-41ff-a43f-a1b6c1cb6b88",
        "line": "162",
        "column": "8",
        "confidence": "MEDIUM",
        "file": "emif/developer/static/js/emif.globalwidget.js",
        "code": "eval(tryme);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "3cf20b8746c8757767043094ea44f515984db6172eb679f139751cfcaa507422",
        "deprecatedHashes": [
          "dc9e44c38da48ad2e5bf81a74453c922e2f269d46bf4d056bf2b7ed4b27d67d3",
          "e5aca6bf7d0711a1a0e6af32a7d236ff48fc84bddf46f6a39666209357e8303b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324605267Z",
      "vulnerabilities": {
        "vulnerabilityID": "ee4fc622-b992-4d04-862e-8b4e1abb56df",
        "line": "30",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/developer/static/js/emif.livepreview.js",
        "code": "eval(data);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "72c43fe73f6b81b13558f819624a7c5021101bc48ab7b2336bee8592f174230c",
        "deprecatedHashes": [
          "e538076a9a6428133f83dbdbc74509609341918cad3722e78a198b68ead6c8ed",
          "c133629b3f143681cab14eb43ff76873b0bc78a3e88924e3aab1aa985b959c1b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324607267Z",
      "vulnerabilities": {
        "vulnerabilityID": "81e13719-94d5-4b28-8915-b060a74c64b9",
        "line": "30",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/developer/static/js/emif.livepreview_fingerprint.js",
        "code": "eval(data);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "394316003df32561f39d7418cf82c8fb0e13d63c3a2b1467cf8615d59a7aafa6",
        "deprecatedHashes": [
          "ce792e405020e1d6094dd612f1f3781efed143c5d8a0d104cd2b5028fb229bec",
          "c598d7e40615a3d64372268bc1f71e5c868201aa801228ceefc64590885ec212"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324641968Z",
      "vulnerabilities": {
        "vulnerabilityID": "c672b5ee-6abe-4f49-8385-15c9c54ab110",
        "line": "81",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/community/static/js/emif.manage_community_qsets.js",
        "code": "eval(\"self.\" + functionCall);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "d193a72fe6694047027d3c186a66a8c4860bed45a3db4a214515c9ac06d9c9c8",
        "deprecatedHashes": [
          "7d0ddccf8a86bc507d0c6d5eb10d85f048f698e9459fa80c2c3a8ae04f9471af",
          "bd38a613a67448a131a738aab29f8d28e08c82fd2f5f71053e37f1f4fd9266c7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324716668Z",
      "vulnerabilities": {
        "vulnerabilityID": "5a3bbe83-5916-4fdc-bff3-174fa67d251d",
        "line": "422",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/fingerprint/static/js/database_info.js",
        "code": "eval(data);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "491dcd611cf493d4caa0532e5ec0d6442f2860d5e032e997f2bdaf51ae47f980",
        "deprecatedHashes": [
          "2e139808139c10ef9efb698c115ea3fb4945ee2dcdac71a18327a1784e4ad1e0",
          "b7f48b189b40f5018f3031696694cfe270c03c75cc78e22361be367b11ebb46e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324776369Z",
      "vulnerabilities": {
        "vulnerabilityID": "3065ab70-b5b6-4116-8b00-fd422d93502f",
        "line": "111",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "eval(\"self.\" + functionCall);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "968baa81557ef22c0dc0840bd82917ee80c4919616603d6e20a8857034cd91b9",
        "deprecatedHashes": [
          "14567b70b7db5bc7e0e0d0e1bf7824afeae98e07dd7bcef195d95bb03ebd180d",
          "fa3930b16cd6744834b3e6d829f09d732c7ee3ed2c4443bd27d41b8483fc7502"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324777469Z",
      "vulnerabilities": {
        "vulnerabilityID": "688d2e2b-969b-4273-8809-446def17c9b8",
        "line": "204",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "eval(\"self.\" + functionCall);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "46065cc3b16c18116c9be6de18187f1fa105326143ec5f3e4de9507b53dec329",
        "deprecatedHashes": [
          "52053eb8ecccb31ce8dc096f63d8fba84d080c26d0a94859ad9521c3a0869746",
          "aec59f4746dab1f731974d7f0277e2636bfa613ec710517862b813f445c57f6a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324792569Z",
      "vulnerabilities": {
        "vulnerabilityID": "0a387c80-c66e-4a57-8644-988a349e3069",
        "line": "30",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/developer/static/js/emif.livepreview_global.js",
        "code": "eval(data);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "d397c98e8e9cb92c7eca113260a9c3b2fcd125ee710898bca08b449d6b746816",
        "deprecatedHashes": [
          "96f062221debc845ca87a12be7ce27b985ec4f7dce06d933e5c2df76f9d8a461",
          "23c2455f02e1df672ecd22c44f3cc34a1e153fa8bcf3daa8fa318f380cba8ad7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324825169Z",
      "vulnerabilities": {
        "vulnerabilityID": "b42f0a57-e995-441e-98cc-b3941cc3f899",
        "line": "124",
        "column": "8",
        "confidence": "MEDIUM",
        "file": "emif/developer/static/js/widget/widget.globalplug_shell.js",
        "code": "eval(\"this.show = \"+this.show+\";\");",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "186e805b39f2a4be596c6711a6fca7087956a170ef37ab9db922a6f1361789d7",
        "deprecatedHashes": [
          "468f43bbe23703828b0e404a7317f525e621e77467593c017aeaeebc49802c14",
          "878906c00d7c1edf57913a059f5809489977f6b1153aa43107e3322909212663"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324829069Z",
      "vulnerabilities": {
        "vulnerabilityID": "06097de9-f224-4797-b8f4-265b83c3fd9d",
        "line": "124",
        "column": "8",
        "confidence": "MEDIUM",
        "file": "emif/fingerprint/static/js/widgets/widget.plug_shell.js",
        "code": "eval(\"this.show = \"+this.show+\";\");",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "1c5a24a3d033bbce3cfab17b094d65dec1c440a256a59f5494410ecb8392a61c",
        "deprecatedHashes": [
          "fe66354e85bfd1d992cf9122f5ab00761b4e24927d2c3f0f29eeccc304aa4b65",
          "1612b3056cbb284bc6ddc68b9dbd72affb6c487e7bba25d57d30f54a1a794278"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32486947Z",
      "vulnerabilities": {
        "vulnerabilityID": "f30e2b12-39fb-42ed-b475-fb4c7d5cdb2f",
        "line": "187",
        "column": "18",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/questionset.js",
        "code": "var res = eval(checks);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "20dc545db4d0023898e1cd9ce092b83109feea481ad8c689fb082ec43f6c9f14",
        "deprecatedHashes": [
          "a639da8fc8119f4c9443e76072f8f45148bb0ddc722b75b51ab4acd4f711507f",
          "6558b0a4130d65080ff506112d70d7531fd1d9d631da21aeb38eb63fbaa5263c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32487047Z",
      "vulnerabilities": {
        "vulnerabilityID": "2afcf533-cf4c-48ec-bf36-253812c5cd64",
        "line": "217",
        "column": "18",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/questionset.js",
        "code": "var res = eval(checks);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "b8f8575eedf477885b789061be3d5f810363102ddce14147ad727b341216ed99",
        "deprecatedHashes": [
          "dd073c1b2bf3cae79c17eb6a8272a611fdb943a4c6a78b19efd3ac2a642bf970",
          "9331e63087b9fcca5cf247942e02d2f9f69e3bcb105d01772203c94037357450"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32492427Z",
      "vulnerabilities": {
        "vulnerabilityID": "b6460187-753a-4b52-9944-d773a86024bc",
        "line": "335",
        "column": "32",
        "confidence": "MEDIUM",
        "file": "emif/fingerprint/static/js/jquery.tabmanager.js",
        "code": "eval(tryme);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "ada104fda0932068d4ce409b2b04ce57dda3aaaadd9cd7f9f7d5427a01240e04",
        "deprecatedHashes": [
          "8b8a51496a2af13089df808491c1172f24f240f49cfb0b010596521eae6e3674",
          "78b02a4a4f6c9d0a2bb35cb23aea473743a06e9207ea10e95bec5a56ca395351"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32492527Z",
      "vulnerabilities": {
        "vulnerabilityID": "541516c7-0d12-43ad-a979-7ac360003a57",
        "line": "552",
        "column": "8",
        "confidence": "MEDIUM",
        "file": "emif/fingerprint/static/js/jquery.tabmanager.js",
        "code": "eval(tryme);",
        "details": "(1/1) * Possible vulnerability detected: No use eval\nThe eval function is extremely dangerous. Because if any user input is not handled correctly and passed to it, it will be possible to execute code remotely in the context of your application (RCE - Remote Code Executuion). For more information checkout the CWE-94 (https://cwe.mitre.org/data/definitions/94.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "CRITICAL",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-2",
        "vulnHash": "edf1511b2cf5989dd1fd935e53cc26e8fcbd90f7e20f2236aec55edbedb49096",
        "deprecatedHashes": [
          "1acc9e1a4ce96e505e1d5efcefdab627238d5edf4c29b542ac041ae1ffeebc82",
          "9586bcd8d3c0a82beb00e03a5eea77f1cbd086487b1c8c39ab9bc34af9e6597a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324054063Z",
      "vulnerabilities": {
        "vulnerabilityID": "25986f4c-0f33-4ecd-bd3a-e81f3350b0fd",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "docker/Dockerfile",
        "code": "root user",
        "details": "(1/1) * Possible vulnerability detected: MissConfiguration\n      Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.\n      Message: Specify at least 1 USER command in Dockerfile with non-root user as argument\n      Resolution: Add 'USER \u003cnon root user name\u003e' line to the Dockerfile\n      References: [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ https://avd.aquasec.com/appshield/ds002]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "",
        "vulnHash": "07ea9e88ffd2c0a02c840842d7f067a35237337e1a21162187ff42d5dca53aed",
        "deprecatedHashes": [
          "7348e31ee87219af45fb2cc0b9ae6bf7ca825849b01ef7bcde1692fcb7719130",
          "fdab24c7491caaae8adc5a684f124ba799bdb3e01a565a86db345b724aff738f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324061463Z",
      "vulnerabilities": {
        "vulnerabilityID": "c61c90c0-9010-469b-b6ed-fb5daf3f499a",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "docker/Dockerfile",
        "code": "Deprecated MAINTAINER used",
        "details": "(1/1) * Possible vulnerability detected: MissConfiguration\n      MAINTAINER has been deprecated since Docker 1.13.0.\n      Message: MAINTAINER should not be used: 'MAINTAINER Luis Bastiao \u003cluis.kop@gmail.com\u003e'\n      Resolution: Use LABEL instead of MAINTAINER\n      References: [https://docs.docker.com/engine/deprecated/#maintainer-in-dockerfile https://avd.aquasec.com/appshield/ds022]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "",
        "vulnHash": "67b384c64a28b868ba4ea9d19b13ec3405e51b65aaef5f0134fecee97784ae7f",
        "deprecatedHashes": [
          "9f9bbdb47b2c1034ecfad4817709a2dbd84f8f3f184b68ed02cfe20c63571cea",
          "84bc03ce336a6deab8847622419894b579165ff2cc5343ea71fbe5916982149a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324062763Z",
      "vulnerabilities": {
        "vulnerabilityID": "e350571c-53a9-4e2f-8359-516a0469764b",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "docker/nginx/Dockerfile",
        "code": "root user",
        "details": "(1/1) * Possible vulnerability detected: MissConfiguration\n      Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.\n      Message: Specify at least 1 USER command in Dockerfile with non-root user as argument\n      Resolution: Add 'USER \u003cnon root user name\u003e' line to the Dockerfile\n      References: [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ https://avd.aquasec.com/appshield/ds002]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "",
        "vulnHash": "7ac42f1266962f88299f5ed8152172fcdc75009b9593abe2e18d95f854dc66d7",
        "deprecatedHashes": [
          "e2dcd0a8aeb6cafda07db492b119aa8989642563ac4dfececd5d672b1cbdb46b",
          "73d018b2183f840d8997dd98278963a0c3bbd56c043264fbe6b5acaf6ed7db27"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324063763Z",
      "vulnerabilities": {
        "vulnerabilityID": "aa871661-00f9-40d4-a268-660b03fe52b7",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "solr/Dockerfile",
        "code": "root user",
        "details": "(1/1) * Possible vulnerability detected: MissConfiguration\n      Running containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.\n      Message: Specify at least 1 USER command in Dockerfile with non-root user as argument\n      Resolution: Add 'USER \u003cnon root user name\u003e' line to the Dockerfile\n      References: [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/ https://avd.aquasec.com/appshield/ds002]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "",
        "vulnHash": "ddad6d3d63af2c4c41936dfe381ae21a01a967520611e647fd6206f2287cbaa5",
        "deprecatedHashes": [
          "167bb9393801f06ed00be11893bab8c80459b0ce3142e041de0fa2687dd9fb16",
          "97d45f1026744f8e84e112fa510e9bc3d36636a242961a7a5d53da8f469f01c1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324064863Z",
      "vulnerabilities": {
        "vulnerabilityID": "129d06dd-29cd-4859-a4bc-2133876594e2",
        "line": "1480",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-0.19.2.tgz\",\n\tInstalled Version: \"0.19.2\"\n\tUpdate to Version: \"0.21.1\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: Axios NPM package 0.21.0 contains a Server-Side Request Forgery (SSRF) vulnerability where an attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-28168.\nCwe Links: (https://cwe.mitre.org/data/definitions/918.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-28168",
        "vulnHash": "0716428abfd3bee16632790723b09425ba9e2e9338156493831faa9e28c4738a",
        "deprecatedHashes": [
          "24aea53af94facce03de5e26cf3e135e46847a32fb2c97f5176646498ec0b513",
          "f460d135cf090b45dcee1736dbde23fd582bfb76c4404ecef020b453218720bb",
          "f4d8bfbd8912312f0e1c874293867286def9dc272efb8e8b532e8d6d12534de7",
          "501f08fec54b8138c1a58d831157cf320bb1a69b0fd7302ee5abf892ed4a584f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324065763Z",
      "vulnerabilities": {
        "vulnerabilityID": "1022a7f4-96eb-47d0-9b22-1b922bd548a4",
        "line": "1480",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "      \"resolved\": \"https://registry.npmjs.org/axios/-/axios-0.19.2.tgz\",\n\tInstalled Version: \"0.19.2\"\n\tUpdate to Version: \"0.21.2\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: axios is vulnerable to Inefficient Regular Expression Complexity\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-3749.\nCwe Links: (https://cwe.mitre.org/data/definitions/400.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-3749",
        "vulnHash": "d348babb9d2021f3849301b5b4714fa4564884a4a20e39f052823493efb45220",
        "deprecatedHashes": [
          "6032b9da18f935eb8fc682262ebba4eb6575fa578839302f3190b6204dccae57",
          "6fb8d0bfd191e5ceb7e9e9f074290fc64c1ded7ea87397be0e0dd4b1b2100b53",
          "da8b0de3d62aac67ee780b6c2425b9ee3127e0bddfa447e507e5c91f7161da54",
          "2e1838d031c67f8cd854c5c749bbd324df4f47f618e7b6e543912b4bab646328"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324066763Z",
      "vulnerabilities": {
        "vulnerabilityID": "28ee6fd4-8a7a-4b7f-8bc7-4f154775e3c7",
        "line": "1611",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "      \"resolved\": \"https://registry.npmjs.org/bootstrap-select/-/bootstrap-select-1.12.2.tgz\",\n\tInstalled Version: \"1.12.2\"\n\tUpdate to Version: \"1.13.6\" for fix this issue.",
        "details": "(1/2) * Possible vulnerability detected: Versions of `bootstrap-select` prior to 1.13.6 are vulnerable to Cross-Site Scripting (XSS).  The package does not escape `title` values on `\u003coption\u003e` tags. This may allow attackers to execute arbitrary JavaScript in a victim's browser.\n## RecommendationUpgrade to version 1.13.6 or later.\nPrimaryURL: https://github.com/advisories/GHSA-9r7h-6639-v5mw.\n         \n(2/2) * Possible vulnerability detected: bootstrap-select before 1.13.6 allows Cross-Site Scripting (XSS). It does not escape title values in OPTION elements. This may allow attackers to execute arbitrary JavaScript in a victim's browser.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2019-20921.\nCwe Links: (https://cwe.mitre.org/data/definitions/79.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "GHSA-9r7h-6639-v5mw",
        "vulnHash": "38634b2f9f072de37281a861a7d14a856777ea15d19c780e5e4bd72db9e0b873",
        "deprecatedHashes": [
          "dffde7aaee8b0fc4de5143301b67c9539f132aa5078bbbed70fab7ded4494103",
          "e1ac260c9b9c710cbbbe8deed76e260d00a40f47da9661040b6c0290fc302e72",
          "105186cb7d98591523a815f3aaf7a23532f67f8b36c23546ac99cd2519676106",
          "42db4e0018f0f5c5bd978bdf0aa6dab6aaf0f14c94b542e72fcca82848f65c8f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324068863Z",
      "vulnerabilities": {
        "vulnerabilityID": "999b991b-17be-492e-a896-888df6941db7",
        "line": "2184",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "      \"resolved\": \"https://registry.npmjs.org/datatables.net/-/datatables.net-1.10.19.tgz\",\n\tInstalled Version: \"1.10.19\"\n\tUpdate to Version: \"1.10.22\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: All versions of package datatables.net are vulnerable to Prototype Pollution due to an incomplete fix for https://snyk.io/vuln/SNYK-JS-DATATABLESNET-598806.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-28458.\nCwe Links: (https://cwe.mitre.org/data/definitions/20.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-28458",
        "vulnHash": "a136e7cbf62f1301694dae386ebeb4f9cc549e72d8fbf60ae0314d8a7b9f1e42",
        "deprecatedHashes": [
          "7d465d4f2377e2f9002e652ee1518549cc76ade79b650a55ac4422e52d09f302",
          "05ca67154cd98aff83aed439f381513db6eda8151182333fc0eb405fe98bc45e",
          "82f3538c99182c892e002916c5692d46a5d69ab91f05be8a7e99ea560b51efbf",
          "99b41015059cc20fef824dcb9106de15a1ecc486ea3cf66fa46d5445d73d99dd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324071163Z",
      "vulnerabilities": {
        "vulnerabilityID": "1558dfab-fa20-440c-a9d2-297f3acf4eb3",
        "line": "1483",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "        \"follow-redirects\": \"1.5.10\"\n\tInstalled Version: \"1.5.10\"\n\tUpdate to Version: \"1.14.7\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0155.\nCwe Links: (https://cwe.mitre.org/data/definitions/359.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2022-0155",
        "vulnHash": "56ff9f03f35c441766240ea66b860b4d44aff5b90d4865187e444ba94075837a",
        "deprecatedHashes": [
          "2ab5dfe693da0e171e8b5754a340c26da5c827e4a058475856a6ea71f0ee464b",
          "26e1d369dc3a2d62d233b8bd06551b0869196cffb948448746a7d1c0bcb397b1",
          "b1bcd12a5cd859be9a7e5434f2badcc065a97f42f3fe10bddaa624d97b9d7e14",
          "c4c408284cc1c5f207abfb3dc175ec528649e9a6f590ccc45166c91f81953be7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324075163Z",
      "vulnerabilities": {
        "vulnerabilityID": "bc0c7fb3-db9c-4b0c-b207-33d70bbcc366",
        "line": "4132",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "      \"resolved\": \"https://registry.npmjs.org/moment/-/moment-2.24.0.tgz\",\n\tInstalled Version: \"2.24.0\"\n\tUpdate to Version: \"2.29.2\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: Moment.js is a JavaScript date library for parsing, validating, manipulating, and formatting dates. A path traversal vulnerability impacts npm (server) users of Moment.js between versions 1.0.1 and 2.29.1, especially if a user-provided locale string is directly used to switch moment locale. This problem is patched in 2.29.2, and the patch can be applied to all affected versions. As a workaround, sanitize the user-provided locale name before passing it to Moment.js.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24785.\nCwe Links: (https://cwe.mitre.org/data/definitions/22.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2022-24785",
        "vulnHash": "9c865f7d60dcf1458016718a8ca7f413d6c07103dc1f25585d0f16087ab17a88",
        "deprecatedHashes": [
          "df6049fb11f3205a37352f1bae643dab8386514b0eb3935a8a4fa01d4174c598",
          "f40b46a17e07bedf02a58dea2892c2e3d1e1e0c9f1e4fd360ab15a2401b137d2",
          "5c6b0c1f9e9d29f1c3ec89d08154f3381e895f830c191ac7a53943aa881eba19",
          "ea5eebb97b824fa6db39bb6e9988b62d47036c82412b8136a8295479d4d817a2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324076263Z",
      "vulnerabilities": {
        "vulnerabilityID": "7981808e-c720-4c5e-a7c9-ead459a107c6",
        "line": "31",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "celery==3.1.26.post2\n\tInstalled Version: \"3.1.26.post2\"\n\tUpdate to Version: \"5.2.2\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: This affects the package celery before 5.2.2. It by default trusts the messages and metadata stored in backends (result stores). When reading task metadata from the backend, the data is deserialized. Given that an attacker can gain access to, or somehow manipulate the metadata within a celery backend, they could trigger a stored command injection vulnerability and potentially gain further access to the system.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23727.\nCwe Links: (https://cwe.mitre.org/data/definitions/77.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-23727",
        "vulnHash": "5b7bd094e3be0f6ea7a903009711ba6370fefb5478fef19ef4ecc732a2cf5051",
        "deprecatedHashes": [
          "9f7e4f69278d6643e5caebfebe6f91d26d2ffca4e1321d5ed2ff4a245a5deccd",
          "5c21bfed7d460c78bd8fea6617ea952d1ed9cce25d493e1542db6ccd5f3fbc45",
          "dda35018d2177d6fdd737c9623cd4f06f3f47af3ac1cdfd62a4865a097cbd32a",
          "f0b723d14ac876ac6b0cbdbbf37403cecb6ded3affd5f15d8bd80f89891762b9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324080563Z",
      "vulnerabilities": {
        "vulnerabilityID": "6ee0da65-f638-4175-a31d-728bd3dd11d2",
        "line": "181",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "numpy==1.16.6\n\tInstalled Version: \"1.16.6\"\n\tUpdate to Version: \"1.19.1\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: ** DISPUTED ** Null Pointer Dereference vulnerability exists in numpy.sort in NumPy \u0026lt and 1.19 in the PyArray_DescrNew function due to missing return-value validation, which allows attackers to conduct DoS attacks by repetitively creating sort arrays. NOTE: While correct that validation is missing, an error can only occur due to an exhaustion of memory. If the user can exhaust memory, they are already privileged. Further, it should be practically impossible to construct an attack which can target the memory exhaustion to occur at exactly this place.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41495.\nCwe Links: (https://cwe.mitre.org/data/definitions/476.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-41495",
        "vulnHash": "a3b9d161f4ecb9487aaec9ccfccccd18791a87804f8272851032389912fdf07f",
        "deprecatedHashes": [
          "56cdfe717050eb27c4347b94da109a190acda1e6553e502214c1e6f56e3ed979",
          "34a939d43ce956b55d02312f9892da008dd66ddd78177257fffcea1eaba0c737",
          "a51ffe5a8ee08d3b1cd075320987b6d0ce42640bb3209e637464955639042dd6",
          "03b53996509036afc195902f90dbe83ac33f0aca5a4caf15b81a1bb56bf9dfeb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324089063Z",
      "vulnerabilities": {
        "vulnerabilityID": "7207d680-5416-41a2-9ec5-6d614d90844d",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"7.1.0\" for fix this issue.",
        "details": "(1/4) * Possible vulnerability detected: In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-10379.\nCwe Links: (https://cwe.mitre.org/data/definitions/120.html)\n         \n(2/4) * Possible vulnerability detected: In libImaging/SgiRleDecode.c in Pillow through 7.0.0, a number of out-of-bounds reads exist in the parsing of SGI image files, a different issue than CVE-2020-5311.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-11538.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)\n         \n(3/4) * Possible vulnerability detected: Pillow before 7.1.0 has multiple out-of-bounds reads in libImaging/FliDecode.c.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-10177.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)\n         \n(4/4) * Possible vulnerability detected: In libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state-\u003eshuffle is instructed to read beyond state-\u003ebuffer.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-10378.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-10379",
        "vulnHash": "b466ff464a04ebb82af5b4aabd530c0dceaf5df43397ebc17e21004824527cda",
        "deprecatedHashes": [
          "7380168f6d66c6bdafaeaf40e7958c13fc96368b6ea7220fe3c51b4dcde1a7b7",
          "f8606e6e72cdc9154deac43856d3669471b39e83d9ad98b6bb8d6f91c7f5efde",
          "711806253855d0f4682d24b50f198cb9656d47a9cf8f491988ecd461f0562e53",
          "4db8b59bd30b55cd4c4a0da75c6c4496bf4884b682785906eafb1b2eabed09c6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324091463Z",
      "vulnerabilities": {
        "vulnerabilityID": "50026ba7-0f5e-453a-8548-0dee4955d665",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"8.1.0\" for fix this issue.",
        "details": "(1/3) * Possible vulnerability detected: In Pillow before 8.1.0, PcxDecode has a buffer over-read when decoding a crafted PCX file because the user-supplied stride value is trusted for buffer calculations.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-35653.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)\n         \n(2/3) * Possible vulnerability detected: In Pillow before 8.1.0, TiffDecode has a heap-based buffer overflow when decoding crafted YCbCr files because of certain interpretation conflicts with LibTIFF in RGBA mode.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-35654.\nCwe Links: (https://cwe.mitre.org/data/definitions/787.html)\n         \n(3/3) * Possible vulnerability detected: In Pillow before 8.1.0, SGIRleDecode has a 4-byte buffer over-read when decoding crafted SGI RLE image files because offsets and length tables are mishandled.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-35655.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-35653",
        "vulnHash": "1a4c0ddd12b8bb929686d3cf98aa8e3e29f463212084318c37dad49d02a517c8",
        "deprecatedHashes": [
          "43882fa581dd8d71fa1330caeba773c77a456e1ecf95b4168578adca5c963153",
          "65df8abc80a90367709c0e300656f571552654333d38cfb4a04cf6c7dd13e1bc",
          "53a374080174987ff197d2179bb11885295a6fde4be08a41818ff53e2ea0a43f",
          "bfe08eb681663172904cf8ef346adf6b04f8dbd7761ace77bb836d4d299399cd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324093563Z",
      "vulnerabilities": {
        "vulnerabilityID": "56e1021a-3e3a-4563-9348-5b863021d31e",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"8.3.2\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: The package pillow 5.2.0 and before 8.3.2 are vulnerable to Regular Expression Denial of Service (ReDoS) via the getrgb function.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23437.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-23437",
        "vulnHash": "171f751edd489366290d2f072481cc58bd4c5c6cc24d2a8bd918b6a01e7f3650",
        "deprecatedHashes": [
          "b7b4db8ea800174afb7cefe877ede0680f5e4ce23b23015ce820f132494845de",
          "c5606260aa32770fe0808873aad4b4db8b08ed03684b0eb407eda6e0ba664ab2",
          "bd2d3e48e12893649576ff5b5bc1f51db7f1970684760295da6a91d12456dacf",
          "edaad68d8ead1be55863debc2e13d0991f40706cb266dfd29f4ec76f2c7c57d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324121463Z",
      "vulnerabilities": {
        "vulnerabilityID": "66bd97af-a98f-4954-9901-8c1ca56dfd7d",
        "line": "216",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pysaml2==4.9.0\n\tInstalled Version: \"4.9.0\"\n\tUpdate to Version: \"5.0.0\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: PySAML2 before 5.0.0 does not check that the signature in a SAML document is enveloped and thus signature wrapping is effective, i.e., it is affected by XML Signature Wrapping (XSW). The signature information and the node/object that is signed can be in different places and thus the signature verification will succeed, but the wrong data will be used. This specifically affects the verification of assertion that have been signed.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-5390.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-5390",
        "vulnHash": "586984a1e3a1e8d5c0c58e2d604174059a4dd43fa134e09797bad2ccdf61e747",
        "deprecatedHashes": [
          "d924efcc9d1dc2ae74a88a6425245b84cbaf61b22456d769418b7b8654e85012",
          "55de4df01c5d39ba8580c1e29ade38547f172b5d87386ab82d8139928ea91f60",
          "c29a369d84cc9245e0409e64c6898f1ac3fbae01eda9213d21445e0a80f64fc6",
          "e1fa60bdae2e20b630d47f8b8804704a712edd0923c188f683ed1e5fe52164fb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324124663Z",
      "vulnerabilities": {
        "vulnerabilityID": "910866bc-ea51-43dc-9901-8a25972588aa",
        "line": "182",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/accounts/forms.py",
        "code": "181             while True:\n182                 username = sha_constructor(str(random.random())).hex",
        "details": "(1/2) * Possible vulnerability detected: Use of weak MD4, MD5, or SHA1 hash for security. Consider usedforsecurity=False\n         \n(2/2) * Possible vulnerability detected: Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B324",
        "vulnHash": "938f0ba964341c9ea7a7e195013f2161123c06019be70b8d72e896f470be5864",
        "deprecatedHashes": [
          "2dd536cd9404cdc8a76fa544f6cc1e21201854c53465ae26c0550c6a27631596",
          "ddebcb39787c4e1f8991719731adb04c8308f9a350fd385ab5d3a241db270026"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324145363Z",
      "vulnerabilities": {
        "vulnerabilityID": "97684ca4-4a41-4770-beff-9052efe8ac12",
        "line": "42",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/emif/utils.py",
        "code": "41 def generate_hash():\n42     hash = hashlib.md5()\n43     hash.update(\"\".join(chr(random.randint(0,",
        "details": "(1/1) * Possible vulnerability detected: Use of weak MD4, MD5, or SHA1 hash for security. Consider usedforsecurity=False",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B324",
        "vulnHash": "d9ab18df9422244df97a34ef3557ac73a3f7bd1a77a1110bdbf96bbe77523773",
        "deprecatedHashes": [
          "934ee0b38e5faa7789edacf458840fc60a5ed9419361965f9f1115eb67c18154",
          "585d6d4e0fa5faba74aeb009916b4b4f2895e2aa4261c2891987467b751f07d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324149763Z",
      "vulnerabilities": {
        "vulnerabilityID": "20f83a1b-f5a7-4e2c-b2bf-39451015dfbf",
        "line": "436",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/listings.py",
        "code": "435 \n436                 this_query_hash = hashlib.sha1(qserialization).hexdigest()\n437 \n",
        "details": "(1/1) * Possible vulnerability detected: Use of weak MD4, MD5, or SHA1 hash for security. Consider usedforsecurity=False",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B324",
        "vulnHash": "6ca554c5c24589d42b213fdb9b8d78407a8dcd6b551b8e6dd3a5d9a1e23e8e69",
        "deprecatedHashes": [
          "969dd2b2ec5fb636aaa1e0b0b0ae8e71a09e23932d405ff7aeef384663ade7a1",
          "0b31efaab8c03f59e3544273fd163fbdfcff6b162857b7aed92fb924b945e99c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324352465Z",
      "vulnerabilities": {
        "vulnerabilityID": "14e7d51b-3861-4a5b-b008-d6e515deb82a",
        "line": "63",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/testcases.py",
        "code": "62             self.__class__.__name__)\n63         subprocess.check_output(cmd, shell=True, cwd='/de",
        "details": "(1/1) * Possible vulnerability detected: subprocess call with shell=True identified, security issue.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B602",
        "vulnHash": "9848af2cb75c317712fdbb3a8aedd2cd55de278791354f6e00c1425c636efbcf",
        "deprecatedHashes": [
          "01a045717a4cb3b1c89c079df68acbfd9d65be809be919f1eb5d475ee9ed53f3",
          "4a9ef03b8f0aaaf3f51da659a1e6c5b0080e39de86ab7e836047c1a2a7f179e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324353565Z",
      "vulnerabilities": {
        "vulnerabilityID": "95b98662-28e9-4137-bcdc-223d69df2c45",
        "line": "68",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/testcases.py",
        "code": "67             self.__class__.__name__)\n68         subprocess.check_output(cmd, shell=True, cwd='/de",
        "details": "(1/1) * Possible vulnerability detected: subprocess call with shell=True identified, security issue.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B602",
        "vulnHash": "0b481a5140b6ec4ae555bbda4f4dda8436c0bd0632935837602a0bad8a4b2698",
        "deprecatedHashes": [
          "4d8fe6a88cea18d034db0b2c24da50bef0b84d9e55e01decf33f43dab337a3bc",
          "f9ece67e76481c46cf7b42d7ad45176a599504cc6d3239791a814d6d4349dd3e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324379865Z",
      "vulnerabilities": {
        "vulnerabilityID": "3721719e-480c-4c26-882c-95707e5da906",
        "line": "1478",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "axios",
        "details": "(1/2) * Possible vulnerability detected: axios is vulnerable to Inefficient Regular Expression Complexity\n         \n(2/2) * Possible vulnerability detected: Axios NPM package 0.21.0 contains a Server-Side Request Forgery (SSRF) vulnerability where an attacker is able to bypass a proxy by providing a URL that responds with a redirect to a restricted host or IP address.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1070315",
        "vulnHash": "1bde4b10da8b8f9098bb154cd5224e28827f2ac636de3cc5f914035b9ed2fb96",
        "deprecatedHashes": [
          "22c7e4a1aca1f504aef90cb9900f7ba23ceaa4af43b443736ab17a676edcb5a3",
          "c2eda993b8ac20316a3cf910fdd24de2c6e0a2006065f49c145a8ab0b391b5ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324381065Z",
      "vulnerabilities": {
        "vulnerabilityID": "93ce91c0-e300-4ee7-839e-508919c355d5",
        "line": "2724",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "follow-redirects",
        "details": "(1/2) * Possible vulnerability detected: follow-redirects is vulnerable to Exposure of Private Personal Information to an Unauthorized Actor\n         \n(2/2) * Possible vulnerability detected: Exposure of Sensitive Information to an Unauthorized Actor in NPM follow-redirects prior to 1.14.8.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1067459",
        "vulnHash": "4850d0817399da91d3dd01f45eace9caab7c66d8f2fd3ebd719e1bd7ea7dc60f",
        "deprecatedHashes": [
          "5d5652c229a35d9438f8e722a35d8c3ffe761f52837406ab61105e804890d257",
          "03b4ae3cc8aae5801ef5a4fc6e1e16e1658713dd4c867f090a3507c2872f116e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324385265Z",
      "vulnerabilities": {
        "vulnerabilityID": "dff22e34-62a3-4d36-b85d-8fc988ef5cd8",
        "line": "1609",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "bootstrap-select",
        "details": "(1/2) * Possible vulnerability detected: Versions of `bootstrap-select` prior to 1.13.6 are vulnerable to Cross-Site Scripting (XSS).  The package does not escape `title` values on `\u003coption\u003e` tags. This may allow attackers to execute arbitrary JavaScript in a victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 1.13.6 or later.\n         \n(2/2) * Possible vulnerability detected: bootstrap-select before 1.13.6 allows Cross-Site Scripting (XSS). It does not escape title values in OPTION elements. This may allow attackers to execute arbitrary JavaScript in a victim's browser.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1068361",
        "vulnHash": "5237f52dd93af87ecbe0bda7ee75165ff241394449bda7e6441fc01c837dc1d8",
        "deprecatedHashes": [
          "8a7b6090422b40fce60b0dd6a7b05d838cceedde18e403fa9d3e653c3624bf8e",
          "25e22fe5da12c1dfed9972c5fe9a3e76beea23b3c1cba6279647e10c52c35ead"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324386265Z",
      "vulnerabilities": {
        "vulnerabilityID": "51c28671-61a3-4cd2-84a0-e4d36fd95e35",
        "line": "3300",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "tar",
        "details": "(1/5) * Possible vulnerability detected: ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be outside of the extraction target directory is not extracted. This is, in part, accomplished by sanitizing absolute paths of entries within the archive, skipping archive entries that contain `..` path portions, and resolving the sanitized paths against the extraction target directory.\n\nThis logic was insufficient on Windows systems when extracting tar files that contained a path that was not an absolute path, but specified a drive letter different from the extraction target, such as `C:some\\path`.  If the drive letter does not match the extraction target, for example `D:\\extraction\\dir`, then the result of `path.resolve(extractionDirectory, entryPath)` would resolve against the current working directory on the `C:` drive, rather than the extraction target directory.\n\nAdditionally, a `..` portion of the path could occur immediately after the drive letter, such as `C:../foo`, and was not properly sanitized by the logic that checked for `..` within the normalized and split portions of the path.\n\nThis only affects users of `node-tar` on Windows systems.\n\n### Patches\n\n4.4.18 || 5.0.10 || 6.1.9\n\n### Workarounds\n\nThere is no reasonable way to work around this issue without performing the same path normalization procedures that node-tar now does.\n\nUsers are encouraged to upgrade to the latest patched versions of node-tar, rather than attempt to sanitize paths themselves.\n\n### Fix\n\nThe fixed versions strip path roots from all paths prior to being resolved against the extraction target folder, even if such paths are not \"absolute\".\n\nAdditionally, a path starting with a drive letter and then two dots, like `c:../`, would bypass the check for `..` path portions.  This is checked properly in the patched versions.\n\nFinally, a defense in depth check is added, such that if the `entry.absolute` is outside of the extraction taret, and we are not in preservePaths:true mode, a warning is raised on that entry, and it is skipped.  Currently, it is believed that this check is redundant, but it did catch some oversights in development.\n\n         \n(2/5) * Possible vulnerability detected: ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to prevent extraction of absolute file paths by turning absolute paths into relative paths when the `preservePaths` flag is not set to `true`. This is achieved by stripping the absolute path root from any absolute file paths contained in a tar file. For example `/home/user/.bashrc` would turn into `home/user/.bashrc`. \n\nThis logic was insufficient when file paths contained repeated path roots such as `////home/user/.bashrc`. `node-tar` would only strip a single path root from such paths. When given an absolute file path with repeating path roots, the resulting path (e.g. `///home/user/.bashrc`) would still resolve to an absolute path, thus allowing arbitrary file creation and overwrite. \n\n### Patches\n\n3.2.2 || 4.4.14 || 5.0.6 || 6.1.1\n\nNOTE: an adjacent issue [CVE-2021-32803](https://github.com/npm/node-tar/security/advisories/GHSA-r628-mhmh-qjhw) affects this release level. Please ensure you update to the latest patch levels that address CVE-2021-32803 as well if this adjacent issue affects your `node-tar` use case.\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `onentry` method which sanitizes the `entry.path` or a `filter` method which removes entries with absolute paths.\n\n```js\nconst path = require('path')\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  // either add this function...\n  onentry: (entry) =\u003e {\n    if (path.isAbsolute(entry.path)) {\n      entry.path = sanitizeAbsolutePathSomehow(entry.path)\n      entry.absolute = path.resolve(entry.path)\n    }\n  },\n\n  // or this one\n  filter: (file, entry) =\u003e {\n    if (path.isAbsolute(entry.path)) {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.\n         \n(3/5) * Possible vulnerability detected: ### Impact\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\nnode-tar aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained two directories and a symlink with names containing unicode values that normalized to the same value. Additionally, on Windows systems, long path portions would resolve to the same file system entities as their 8.3 \"short path\" counterparts. A specially crafted tar archive could thus include directories with two forms of the path that resolve to the same file system entity, followed by a symbolic link with a name in the first form, lastly followed by a file using the second form. It led to bypassing node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n6.1.9 || 5.0.10 || 4.4.18\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =\u003e {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n#### Fix\n\nThe problem is addressed in the following ways, when comparing paths in the directory cache and path reservation systems:\n\n1. The `String.normalize('NFKD')` method is used to first normalize all unicode to its maximally compatible and multi-code-point form.\n2. All slashes are normalized to `/` on Windows systems (on posix systems, `\\` is a valid filename character, and thus left intact).\n3. When a symbolic link is encountered on Windows systems, the entire directory cache is cleared.  Collisions related to use of 8.3 short names to replace directories with other (non-symlink) types of entries may make archives fail to extract properly, but will not result in arbitrary file writes.\n\n         \n(4/5) * Possible vulnerability detected: ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks. Additionally, in order to prevent unnecessary stat calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory, where the symlink and directory names in the archive entry used backslashes as a path separator on posix systems. The cache checking logic used both `\\` and `/` characters as path separators, however `\\` is a valid filename character on posix systems.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass node-tar symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nAdditionally, a similar confusion could arise on case-insensitive filesystems.  If a tar archive contained a directory at `FOO`, followed by a symbolic link named `foo`, then on case-insensitive file systems, the creation of the symbolic link would remove the directory from the filesystem, but _not_ from the internal directory cache, as it would not be treated as a cache hit.  A subsequent file entry within the `FOO` directory would then be placed in the target of the symbolic link, thinking that the directory had already been created. \n\nThese issues were addressed in releases 4.4.16, 5.0.8 and 6.1.7.\n\nThe v3 branch of `node-tar` has been deprecated and did not receive patches for these issues. If you are still using a v3 release we recommend you update to a more recent version of `node-tar`. If this is not possible, a workaround is available below.\n\n### Patches\n\n4.4.16 || 5.0.8 || 6.1.7\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom filter method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =\u003e {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patched versions, rather than attempt to sanitize tar input themselves.\n\n### Fix\n\nThe problem is addressed in the following ways:\n\n1. All paths are normalized to use `/` as a path separator, replacing `\\` with `/` on Windows systems, and leaving `\\` intact in the path on posix systems.  This is performed in depth, at every level of the program where paths are consumed.\n2. Directory cache pruning is performed case-insensitively.  This _may_ result in undue cache misses on case-sensitive file systems, but the performance impact is negligible.\n\n#### Caveat\n\nNote that this means that the `entry` objects exposed in various parts of tar's API will now always use `/` as a path separator, even on Windows systems.  This is not expected to cause problems, as `/` is a valid path separator on Windows systems, but _may_ result in issues if `entry.path` is compared against a path string coming from some other API such as `fs.realpath()` or `path.resolve()`.\n\nUsers are encouraged to always normalize paths using a well-tested method such as `path.resolve()` before comparing paths to one another.\n         \n(5/5) * Possible vulnerability detected: ### Impact\n\nArbitrary File Creation, Arbitrary File Overwrite, Arbitrary Code Execution\n\n`node-tar` aims to guarantee that any file whose location would be modified by a symbolic link is not extracted. This is, in part, achieved by ensuring that extracted directories are not symlinks.  Additionally, in order to prevent unnecessary `stat` calls to determine whether a given path is a directory, paths are cached when directories are created.\n\nThis logic was insufficient when extracting tar files that contained both a directory and a symlink with the same name as the directory. This order of operations resulted in the directory being created and added to the `node-tar` directory cache. When a directory is present in the directory cache, subsequent calls to mkdir for that directory are skipped. However, this is also where `node-tar` checks for symlinks occur.\n\nBy first creating a directory, and then replacing that directory with a symlink, it was thus possible to bypass `node-tar` symlink checks on directories, essentially allowing an untrusted tar file to symlink into an arbitrary location and subsequently extracting arbitrary files into that location, thus allowing arbitrary file creation and overwrite.\n\nThis issue was addressed in releases 3.2.3, 4.4.15, 5.0.7 and 6.1.2.\n\n### Patches\n\n3.2.3 || 4.4.15 || 5.0.7 || 6.1.2\n\n### Workarounds\n\nUsers may work around this vulnerability without upgrading by creating a custom `filter` method which prevents the extraction of symbolic links.\n\n```js\nconst tar = require('tar')\n\ntar.x({\n  file: 'archive.tgz',\n  filter: (file, entry) =\u003e {\n    if (entry.type === 'SymbolicLink') {\n      return false\n    } else {\n      return true\n    }\n  }\n})\n```\n\nUsers are encouraged to upgrade to the latest patch versions, rather than attempt to sanitize tar input themselves.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1070363",
        "vulnHash": "8146b6da960961fb5b35570daf0191d01354df70e69cd15264e2991a1a06dc43",
        "deprecatedHashes": [
          "4159b9b1675f45605072a17347d71f7b45c80e018c4b6e450f5b739b5d43e08a",
          "5c05fe80cde4afb80755ee2e5374755723611332a66f2ccf99235afdb6e5972e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324396866Z",
      "vulnerabilities": {
        "vulnerabilityID": "e38418fd-600e-403c-9094-b7220b961796",
        "line": "2993",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "ini",
        "details": "(1/1) * Possible vulnerability detected: ### Overview\nThe `ini` npm package before version 1.3.6 has a Prototype Pollution vulnerability.\n\nIf an attacker submits a malicious INI file to an application that parses it with `ini.parse`, they will pollute the prototype on the application. This can be exploited further depending on the context.\n\n### Patches\n\nThis has been patched in 1.3.6\n\n### Steps to reproduce\n\npayload.ini\n```\n[__proto__]\npolluted = \"polluted\"\n```\n\npoc.js:\n```\nvar fs = require('fs')\nvar ini = require('ini')\n\nvar parsed = ini.parse(fs.readFileSync('./payload.ini', 'utf-8'))\nconsole.log(parsed)\nconsole.log(parsed.__proto__)\nconsole.log(polluted)\n```\n\n```\n\u003e node poc.js\n{}\n{ polluted: 'polluted' }\n{ polluted: 'polluted' }\npolluted\n```",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1068298",
        "vulnHash": "8a58e8b3d358a519e4d8535a8453c93042cb10780578a0e39e8f800e203a485f",
        "deprecatedHashes": [
          "4c89d37338ba820042fc1a3ae591af3d36e627ab2ec831ba63b987e5d049d1a8",
          "d04a5bdf4a2e70e2cb42b8fbc16bd777ecb1649ad2b013d4f2911caa3720dbe2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324399966Z",
      "vulnerabilities": {
        "vulnerabilityID": "366f8a0b-218e-41be-8612-68bdc36f6bd2",
        "line": "4917",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "serialize-javascript",
        "details": "(1/2) * Possible vulnerability detected: serialize-javascript prior to 3.1.0 allows remote attackers to inject arbitrary code via the function \"deleteFunctions\" within \"index.js\". \n\nAn object such as `{\"foo\": /1\"/, \"bar\": \"a\\\"@__R-\u003cUID\u003e-0__@\"}` was serialized as `{\"foo\": /1\"/, \"bar\": \"a\\/1\"/}`, which allows an attacker to escape the `bar` key. This requires the attacker to control the values of both `foo` and `bar` and guess the value of `\u003cUID\u003e`. The UID has a keyspace of approximately 4 billion making it a realistic network attack.\n         \n(2/2) * Possible vulnerability detected: Versions of `serialize-javascript` prior to 2.1.1 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize serialized regular expressions. This vulnerability does not affect Node.js applications.\n\n\n## Recommendation\n\nUpgrade to version 2.1.1 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1069320",
        "vulnHash": "bb4f88baec23eb54db77517938b563b4c149fa86031e097257db146388f9539f",
        "deprecatedHashes": [
          "52f4d13b7962469d4b14558870ba56ba800a3ebfd2fef0a9979d7672857e6c49",
          "f232e96d003023d4ab63d708e19c4fb043cc46fba0d3cd8749750e52aecb4a2e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324406266Z",
      "vulnerabilities": {
        "vulnerabilityID": "41b27ecf-4b6d-451e-b9e1-614fb2a83f5c",
        "line": "1786",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "ansi-regex",
        "details": "(1/1) * Possible vulnerability detected: ansi-regex is vulnerable to Inefficient Regular Expression Complexity",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1070273",
        "vulnHash": "1c586c5e74cab9c29f6c5609908f0c56e936018f20c4ff47ab43cc0eba5147f2",
        "deprecatedHashes": [
          "99b06dfe391172d3ded68b67dd432464be7f1b1e8e00fceb8516a38e94e26135",
          "aad343c3c7b939c7fcfa99226f279853a961efec3b606554e9551e91ce3e3e3d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324411566Z",
      "vulnerabilities": {
        "vulnerabilityID": "779500b6-a7c9-43b4-b630-96850a904604",
        "line": "5154",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "ssri",
        "details": "(1/1) * Possible vulnerability detected: npm `ssri` 5.2.2-6.0.1 and 7.0.0-8.0.0, processes SRIs using a regular expression which is vulnerable to a denial of service. Malicious SRIs could take an extremely long time to process, leading to denial of service. This issue only affects consumers using the strict option.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1068080",
        "vulnHash": "8b38a4b8c083ee9f391ebfd1e8677c1870da0b239d0a39c6b30ba733205d58d0",
        "deprecatedHashes": [
          "e611fd89cbe2a93e2e987ffd65948cf0cf7096445c468fcfdb7548cb98396174",
          "28b44d4fb0b1daa49ca72a0c1859df3dfeac699f721bef0637fee9d5e6a58e81"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324414866Z",
      "vulnerabilities": {
        "vulnerabilityID": "ebf151be-2798-42c8-867e-819668875a18",
        "line": "3379",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "glob-parent",
        "details": "(1/1) * Possible vulnerability detected: This affects the package glob-parent before 5.1.2. The enclosure regex used to check for strings ending in enclosure containing path separator.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1067329",
        "vulnHash": "aa7ac94bddd3569be88a5e346e5e8153745267b3bcce98d0dda739d9a98be854",
        "deprecatedHashes": [
          "8b5fbfc9f9061e7d7a4febe2c8d483894e6bf90679ad4d37e7c370a4433e53f4",
          "bb7404e4ffd22681be4b03a81ceb595b82605dfa1758ac04eed8a04e8338116b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324419966Z",
      "vulnerabilities": {
        "vulnerabilityID": "d86501e5-36b0-41de-a201-3fe9e42d1b9c",
        "line": "3875",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "kind-of",
        "details": "(1/1) * Possible vulnerability detected: Versions of `kind-of` 6.x prior to 6.0.3 are vulnerable to a Validation Bypass. A maliciously crafted object can alter the result of the type check, allowing attackers to bypass the type checking validation. \n\n\n## Recommendation\n\nUpgrade to versions 6.0.3 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1069357",
        "vulnHash": "4a59f22bbbd5a3c1fc006407c29f9d03ffab7d682ad69ebeccc5b63d4ebc01d1",
        "deprecatedHashes": [
          "68e7db15bca4961963414a99d1eddc75e037c38699809a863cd80494d7c77fe6",
          "a529322752981505c603cac6004c5144417ae88cb7452fdf0fbe12023b2e9dc5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324422066Z",
      "vulnerabilities": {
        "vulnerabilityID": "f002725c-b20b-4bb6-a231-592c9f5f742c",
        "line": "1315",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "acorn",
        "details": "(1/1) * Possible vulnerability detected: Affected versions of acorn are vulnerable to Regular Expression Denial of Service.\nA regex in the form of /[x-\\ud800]/u causes the parser to enter an infinite loop.\nThe string is not valid UTF16 which usually results in it being sanitized before reaching the parser.\nIf an application processes untrusted input and passes it directly to acorn,\nattackers may leverage the vulnerability leading to Denial of Service.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1069428",
        "vulnHash": "902b286f89a7725c4867d3e8f22dceed4e793f0f7d41d270404ee86b1c5f7343",
        "deprecatedHashes": [
          "dc78a60cc24f962587b39f3da3a39cbc74048e4fd7a148cea2ef25c06571e83f",
          "3856e8d2d4155ddbfdeb6eba5853428c764e798c4a83ef33d57d586ecf28adc3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324423166Z",
      "vulnerabilities": {
        "vulnerabilityID": "069c80a2-0000-4607-9b1a-36961e8c32bc",
        "line": "5836",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "y18n",
        "details": "(1/1) * Possible vulnerability detected: ### Overview\n\nThe npm package `y18n` before versions 3.2.2, 4.0.1, and 5.0.5 is vulnerable to Prototype Pollution. \n\n### POC\n\n```\nconst y18n = require('y18n')();\n\ny18n.setLocale('__proto__');\ny18n.updateLocale({polluted: true});\n\nconsole.log(polluted); // true\n```\n\n### Recommendation\n\nUpgrade to version 3.2.2, 4.0.1, 5.0.5 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1070209",
        "vulnHash": "b7ae931932ddcaefaae34a260c8c2386cdf90c8628eb04a32f8409845dd6182f",
        "deprecatedHashes": [
          "014ad234b1a07272c089489a002187bbf923908c5a6a99742b9fa1a157c5dda1",
          "8bc69ed1abd079da093044832992aab62af46e0a9d07bba94be5b404bd4c2393"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324425366Z",
      "vulnerabilities": {
        "vulnerabilityID": "1eef5aa8-0709-4585-9111-c0b2fe3ee63e",
        "line": "4130",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "moment",
        "details": "(1/1) * Possible vulnerability detected: ### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https://github.com/moment/moment)\n",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1070447",
        "vulnHash": "99c5cf1f35fc160b2826166620f99c732c5227e9ab5cda1dd9ceb930ee91f369",
        "deprecatedHashes": [
          "d20abe8e1200b112d942d49af42693378ab28fc44a94980552fb57271b72e708",
          "513b3af82d1bfaf7ce3f84ea867b36b62cdf86c3c895b3c72a67714087e5c1d1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324426666Z",
      "vulnerabilities": {
        "vulnerabilityID": "5173abf6-99eb-4456-85ce-c8d935a5d68f",
        "line": "2182",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "datatables.net",
        "details": "(1/2) * Possible vulnerability detected: All versions of package datatables.net are vulnerable to Prototype Pollution due to an incomplete fix for https://snyk.io/vuln/SNYK-JS-DATATABLESNET-598806.\n         \n(2/2) * Possible vulnerability detected: This affects the package datatables.net before 1.11.3. If an array is passed to the HTML escape entities function it would not have its contents escaped.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1068292",
        "vulnHash": "8b816c19ca2384aa2307d23dd8bcb9c429ba28a9891d39284552a1d09b215948",
        "deprecatedHashes": [
          "6616f3d62789f2ec7f74d48668b1afc3a3fae75079b943940770864a7fa41ba8",
          "d3fe9a89075a825e1d74b95b2338ad9615f99ddf4faf385ed9ad2e7513d2ef60"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324428866Z",
      "vulnerabilities": {
        "vulnerabilityID": "1bc0a863-eb9f-44f6-aadb-970b0363d3c3",
        "line": "2366",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "elliptic",
        "details": "(1/2) * Possible vulnerability detected: The Elliptic package before version 6.5.3 for Node.js allows ECDSA signature malleability via variations in encoding, leading '\\0' bytes, or integer overflows. This could conceivably have a security-relevant impact if an application relied on a single canonical signature.\n         \n(2/2) * Possible vulnerability detected: The npm package `elliptic` before version 6.5.4 are vulnerable to Cryptographic Issues via the secp256k1 implementation in elliptic/ec/key.js. There is no check to confirm that the public key point passed into the derive function actually exists on the secp256k1 curve. This results in the potential for the private key used in this implementation to be revealed after a number of ECDH operations are performed.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1069331",
        "vulnHash": "4a9704c3323d334f5ce6dd57b1e6e0fa83ef442c179b2fe2837b3a2a2e7817e8",
        "deprecatedHashes": [
          "010c07dd0c661094d388b47c5726b914fec781b0436b3d61eccb0664db74e48b",
          "2fc5d15feb8e600a1fb1498f3629166517844f999deaf7de15e84570fc333bf9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324525267Z",
      "vulnerabilities": {
        "vulnerabilityID": "20b012cc-2180-4bd8-8bba-6639e85b7e2b",
        "line": "25",
        "column": "44",
        "confidence": "LOW",
        "file": "emif/compare/static/js/emif.results_comp.js",
        "code": "  if(match == false || unmatch  == false|| emptyrows == false || proximity == false)",
        "details": "(1/1) * Possible vulnerability detected: Detected a useless comparison operation `emptyrows == emptyrows` or `emptyrows != emptyrows`. This operation is always true. If testing for floating point NaN, use `math.isnan`, or `cmath.isnan` if the number is complex.",
        "securityTool": "Semgrep",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "javascript.lang.correctness.useless-eqeq.eqeq-is-bad",
        "vulnHash": "e6b4eba44eb565165b451252edc9e77dff68a3883bb3200cc68ad2c407811a23",
        "deprecatedHashes": [
          "fcdc1f70ac233cf123af499716e2d16b47bd0a10113adc45f082253e70853d8c",
          "63d87d58db23b02ec0c90d688ba1559d0abf97c3d4a0fcc0a51ca80bb072f4ae"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324526267Z",
      "vulnerabilities": {
        "vulnerabilityID": "e2ef5534-77e2-41ca-ae4f-b5736f367a8c",
        "line": "151",
        "column": "17",
        "confidence": "LOW",
        "file": "emif/emif/static/js/d3/lib/compat/compat.js",
        "code": "            if (n != n) { // shortcut for verifying if it's NaN",
        "details": "(1/1) * Possible vulnerability detected: Detected a useless comparison operation `n == n` or `n != n`. This operation is always true. If testing for floating point NaN, use `math.isnan`, or `cmath.isnan` if the number is complex.",
        "securityTool": "Semgrep",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "javascript.lang.correctness.useless-eqeq.eqeq-is-bad",
        "vulnHash": "1208c9ddd6add8807d9236a985cc9f50d9a419f6933ab3376e297eec5d36ba19",
        "deprecatedHashes": [
          "c3d1f0a079c42baba146e179caa1b4097673a48441787ea908f206b92e345a78",
          "8361459b80a975b55a49766211226d4233de6af4260c7273014f0e163108b791"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324529467Z",
      "vulnerabilities": {
        "vulnerabilityID": "78ba9b15-736f-4f70-9f63-003eb6c37efb",
        "line": "790",
        "column": "20",
        "confidence": "LOW",
        "file": "emif/fingerprint/services.py",
        "code": "            return ft_main.name",
        "details": "(1/1) * Possible vulnerability detected: Using 'ft_main.name' without '.flush()' or '.close()' may cause an error because the file may not exist when 'ft_main.name' is used. Use '.flush()' or close the file before using 'ft_main.name'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.correctness.tempfile.flush.tempfile-without-flush",
        "vulnHash": "76580c2530cabb86199cf26608a281c3a4481f701fd46bc654ba7fd2c853e56b",
        "deprecatedHashes": [
          "23c3d5a6c8157bc6f764a7e7e0bafa1511bbb7b1740a00d80ba648c74624e70e",
          "377f73c31d33bee202eec28cbe4fad869a7214b24b0ca854761876af9f908d52"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324530367Z",
      "vulnerabilities": {
        "vulnerabilityID": "2b21369f-8633-482f-b2aa-6e46140f346d",
        "line": "350",
        "column": "38",
        "confidence": "LOW",
        "file": "emif/questionnaire/views.py",
        "code": "        response = HttpResponse(open(fd.name, 'rb'), content_type=\"application/vnd.ms-excel\")",
        "details": "(1/1) * Possible vulnerability detected: Using 'fd.name' without '.flush()' or '.close()' may cause an error because the file may not exist when 'fd.name' is used. Use '.flush()' or close the file before using 'fd.name'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.correctness.tempfile.flush.tempfile-without-flush",
        "vulnHash": "9bc317a5322b5479d3936388911d4349d132844196a6b3d6c671c8847ccf703c",
        "deprecatedHashes": [
          "732d0c54c665f4dbe9baa68e8efd4893df3b0a0c3921e89ac0fb4948a21924f3",
          "cc27853ef88a16f97efa133013ef58a59c2060d4a493e4a3c5ac5432463180d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324535467Z",
      "vulnerabilities": {
        "vulnerabilityID": "8f3f6188-a25b-4a15-b6a9-1fb324778159",
        "line": "205",
        "column": "18",
        "confidence": "LOW",
        "file": "emif/datatable/views.py",
        "code": "        writer = csv.writer(response)",
        "details": "(1/1) * Possible vulnerability detected: Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.security.unquoted-csv-writer.unquoted-csv-writer",
        "vulnHash": "6e8f83a8c3625b8226c4839483c7cdc31ff1e523b5ce499853b24c955f83e053",
        "deprecatedHashes": [
          "6d215c799ad38b2001b2a257a69b4e0eb15d20f73af76ee1f073714fb223b972",
          "acb8a5198329b8675c5f0623b86c02762b8926970ecdcfcb4d902c1fa5becf80"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324536667Z",
      "vulnerabilities": {
        "vulnerabilityID": "a40e8f78-36cd-4b0f-a5ba-ce6426aab4da",
        "line": "711",
        "column": "22",
        "confidence": "LOW",
        "file": "emif/fingerprint/services.py",
        "code": "            writer = csv.writer(response, delimiter = '\\t')",
        "details": "(1/1) * Possible vulnerability detected: Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.security.unquoted-csv-writer.unquoted-csv-writer",
        "vulnHash": "6a8346164dce1acb9e040512ca3c97ce19405988260d6082461156e04111e268",
        "deprecatedHashes": [
          "645dd9976ab178b670dbc4825084cad2ae1851e6dcfe55bd869794b429e01210",
          "7a2f4257d4e30f81036c1717714036865c3da70d2aca2af90f69f6beb95f63c8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324537767Z",
      "vulnerabilities": {
        "vulnerabilityID": "a135f0de-bede-41c7-9562-7c1433043d88",
        "line": "128",
        "column": "27",
        "confidence": "LOW",
        "file": "emif/questionnaire/views.py",
        "code": "            self.writer = csv.writer(self.queue, dialect=dialect, **kwds)",
        "details": "(1/1) * Possible vulnerability detected: Found an unquoted CSV writer. This is susceptible to injection. Use 'quoting=csv.QUOTE_ALL'.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.security.unquoted-csv-writer.unquoted-csv-writer",
        "vulnHash": "a96cfdabf6d4b9f098ebb35210bf49190c0e67de2f747b8c8fccb3c0fedf13ae",
        "deprecatedHashes": [
          "8cc2bc29819849da27163a048cb3436edf5be6280f0082cabdf240ba43dc552d",
          "ebf4871f75c0868104eb05c9234dffdfed21acc9e058f82b797e55500af57d7c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324538767Z",
      "vulnerabilities": {
        "vulnerabilityID": "a4e53860-b7bd-4f7d-a9df-9a12e314e968",
        "line": "61",
        "column": "28",
        "confidence": "HIGH",
        "file": "dev/plugin-examples/fingerprint_discussion.js",
        "code": "bootbox.alert(\"Unable to add new comment, please try again.\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "88d227353c14f4a95bf6adf14e453962f3cc88756abf5dd7e967a4bda89c1075",
        "deprecatedHashes": [
          "a5a28913dbaf41b037c95b4d89568f21a847490f5f34ab3a7a120438c4515cb9",
          "a47a911cbddbdff8667a7ff5b12557a922b7eb6fc3609fe704879cc1276cab3f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324539867Z",
      "vulnerabilities": {
        "vulnerabilityID": "5d54ba3f-0da0-4a01-a702-3551587e91d2",
        "line": "64",
        "column": "24",
        "confidence": "HIGH",
        "file": "dev/plugin-examples/fingerprint_discussion.js",
        "code": "bootbox.alert(\"A comment must have more then 20 characters.\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "70b2439c0477f27c65e1fc203f5a820568b2325f3e83de3f464841869d355b16",
        "deprecatedHashes": [
          "5e0f7502bf7b24f19284fde7850fa98f6b812d21c68917b77af1c5f062a55c67",
          "f65afbe1fd1d6590da992806e8d528d3320a51a2f2d221cfa75fc6f39bea1bc9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324552767Z",
      "vulnerabilities": {
        "vulnerabilityID": "1da57677-89d3-49dc-9f0b-be9ce05c3a1a",
        "line": "15",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.create_community.js",
        "code": "bootbox.alert('The community name must be filled, and have between 4 and 70 characters.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "daa3f69dd8ba9c2aa6a63788fc3915b51ae8666c8a79f7ff7513565fbb23cc85",
        "deprecatedHashes": [
          "d7360b4a63b566b2938ddd05cfc24f0e538d00551198e742a58cdeddd42f0415",
          "0b9f29a9d72695062b285c77ed4056ff601217e0240cd48dcf98e27795c6e138"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324553767Z",
      "vulnerabilities": {
        "vulnerabilityID": "bb77c665-d6f7-4521-bb5c-b434be9b8527",
        "line": "19",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.create_community.js",
        "code": "bootbox.alert('The community description must be filled, and have between 30 and 300 characters.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "89d2c8f97dfe2586d2474a631a13fb98196bb2f9b5617e8a403cebfc987bc076",
        "deprecatedHashes": [
          "bb984f574aaf5ff3f2831f87555e59c4de9aa7ebea06978c366be6d8b37aa7d9",
          "65ecafcbc51cea11c5813773c4b04f233274c468691cedbdba7efbe11c01ccd4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324554767Z",
      "vulnerabilities": {
        "vulnerabilityID": "6e694808-8e74-4810-9598-6cf10ce2139c",
        "line": "22",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.create_community.js",
        "code": "bootbox.alert('The community motivation must be filled, and have between 30 and 300 characters.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "5df37f2aebf77ba86b03ab0d731bf7b201d1d6022951708f2a8be3795d879555",
        "deprecatedHashes": [
          "839ecef2c8ce658c8484c73a8623a16bbc0e93bf12ab34757e419a57d102be95",
          "38457fdbff5f4a43a6d77de333a9e8c8dfd879f74119c67e162235489f621614"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324555867Z",
      "vulnerabilities": {
        "vulnerabilityID": "7bb4a102-edaa-4724-9974-af1428d72eaf",
        "line": "29",
        "column": "28",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.create_community.js",
        "code": "bootbox.alert('The community slug '+slug+' is already in use, please choose another slug.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "0ff1315930109a426073e4bffdd03cf04804de81e82871307e30d39554ec090d",
        "deprecatedHashes": [
          "644bb96190d46aacf903755a4a2ac815c2346ef4fc534affdc034e4c633e8d2e",
          "0e97abb16d0d73929eeca914b5c53dfec59b527e86e6c17479e1105bd5f4474c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324566967Z",
      "vulnerabilities": {
        "vulnerabilityID": "ed92ad23-96ca-42c1-a00a-100a20b7d61e",
        "line": "43",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/notifications/static/js/emif.notifications.js",
        "code": "r = confirm(\"You are trying to delete a unread notification, are you sure?\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "a73d7f4938417a5471523a35ed600a196fa9511da4ea9ba37edc2ba533f4b36d",
        "deprecatedHashes": [
          "279ee78d3d342749a33a0e1c36123bcf93822d72704e997b941b7faadd761d75",
          "04ad4e2e3bdbc8ccf83bbcf6cb184a2326561d9ad5277d24b36642aa8c6a1155"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324575967Z",
      "vulnerabilities": {
        "vulnerabilityID": "0d1d0ab0-f1dc-4635-8b07-ea975f1797f7",
        "line": "24",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer.js",
        "code": "bootbox.confirm('Are you sure you want to delete \"'+name+'\" ?',function(result){",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "5ffc6c05f801e774d38a4938c50cf747cf70f6f250ac252aaa47aa6e265853b9",
        "deprecatedHashes": [
          "28c5141a5a9adc0eb6c098f76bf75bb029d651c87d37d5f26f1ec4a92690ef8e",
          "6acbe958c99a27629ffc933858c746658354f321fa41a608b23731e3ebca25b6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324578867Z",
      "vulnerabilities": {
        "vulnerabilityID": "6e5dff13-8fb2-49da-a03a-77d691c527dd",
        "line": "41",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_deps.js",
        "code": "bootbox.confirm('You must choose files to be uploaded first!');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "68473aa207cee8483e9a6b15850d743d4ebd81463a7ae46122d959a344aa8ea8",
        "deprecatedHashes": [
          "393da8f623bd84b7d7b67e8acdc2e961b19934ad02e953ae9943718e7db62b83",
          "997b9793514cb943e034b1714455f98c3b63f5f36e8ceed08310c9b8644778fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324579967Z",
      "vulnerabilities": {
        "vulnerabilityID": "3081f66d-f915-4b88-bdc3-789b3c5f7f35",
        "line": "53",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_deps.js",
        "code": "bootbox.confirm('Are you sure you want to delete \\''+filename+'\\'', function(result){",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "0d22bf7f76723f326ae2f7b160e933beaaa792bf8c8ca07dec39954b8b78df79",
        "deprecatedHashes": [
          "527905e8f2215fb31cdfecaf924f44a232bcecedf1c97b42854d56709b4a104e",
          "3b32691c561a84fe6834793e8542eba1c66d286d397e2a6e304395bf4037ea44"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324580967Z",
      "vulnerabilities": {
        "vulnerabilityID": "a9f3e078-074f-43be-8cc0-65e8f7a9261a",
        "line": "64",
        "column": "32",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_deps.js",
        "code": "bootbox.alert(\"Couldn't remove the dependency.\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "74e6e7c49fb1e6d3cdef5c7a70caa49a2fdf36e92855f259f2e870ef2ed12116",
        "deprecatedHashes": [
          "50f01f04452cd79817f0c04606f3f69b3f3a612580c85fddeae5d12e8b05c1aa",
          "d99ef87b3e76308d5f0a675b416377b346d15a34b751f4cb32c53110910a545a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324581967Z",
      "vulnerabilities": {
        "vulnerabilityID": "c42c7a1f-596f-48b6-bed1-ca4ff4e15906",
        "line": "69",
        "column": "28",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_deps.js",
        "code": "bootbox.alert(\"Couldn't remove the dependency.\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "1fdf541e22ae215438bbfd0c61309da17f79541f7bd43f218a002298fa22951d",
        "deprecatedHashes": [
          "bc948bf1b32a681274e5b16870ed36ad507c2a443fb6759aea71eacdf5819fee",
          "5b43d1e371efe18e0878ceb322e1491191a2f74728d5a695b627e1d76da5faed"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324583067Z",
      "vulnerabilities": {
        "vulnerabilityID": "25f37e55-e42a-4bc5-9117-1ffe654e679e",
        "line": "97",
        "column": "22",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_deps.js",
        "code": "if( log ) alert(log);",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "f6f8f36582da0116486ce772513b7a1cced771fafad615f4afa31abfe586e8e7",
        "deprecatedHashes": [
          "8bd30141eb4006e0760b7e56578e834b8f378df275ecc8e3971b21eeb9f37cba",
          "47a0136d3d74e1342a0fdc3b5642da2c47e31153f862e2b58e7e6d0f39b953bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324583967Z",
      "vulnerabilities": {
        "vulnerabilityID": "2d9c2c9c-eecc-45d1-98d8-e38fdc3b152e",
        "line": "35",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_version.js",
        "code": "bootbox.alert('You must specify a valid integer number for the version parameter');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "b74dc331bc71178d1f85979139b6c56813db82b870efdffc8f1e04b2946988dd",
        "deprecatedHashes": [
          "82fb4e6f30247a64e5a6e1465af937bcded2e61c469cd9e0e6b31e3dc9c049b0",
          "ba8ca3ded281d9958c708e2bcf7254e5d5dec90ba3c1b7dec6832eff93d10374"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324584967Z",
      "vulnerabilities": {
        "vulnerabilityID": "eef7ddfc-1bbe-491a-ba48-7cab53aec128",
        "line": "43",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_version.js",
        "code": "bootbox.alert('You must specify a valid URL, starting with http://');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "17bad6e9e3a6a26a46dd1c1f80cb3e7d19fb84d5ec4497343eea02eef34ae194",
        "deprecatedHashes": [
          "69ab9dc1a222ee4b008f3a48a9da30c8252cad58c342bee40dab71d6461e8f5c",
          "7b4824f33ba734f29cbfc6c128589577bc2eb79b840ad841d8a206b42f1cdb9e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324585967Z",
      "vulnerabilities": {
        "vulnerabilityID": "10d6bc15-e25e-4530-ab0a-ce9f82df3e4a",
        "line": "54",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_version.js",
        "code": "bootbox.confirm('\u003cdiv class=\"form\"\u003e\u003cdiv class=\"control-group\"\u003e\u003cdiv class=\"controls\"\u003e\\",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "6feaf096f2bdabd0bee7a6de636a0f8157a4423042206c4c6135f38ebc94e5aa",
        "deprecatedHashes": [
          "865d7e7508bc4665deefef59ef71ed8e94b8234a695350661ee9cae10bb88b3d",
          "5340f12410cebadf9c2daa73c2d7e1c406d43170d445622bd12367e5e9fe9ad0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324614367Z",
      "vulnerabilities": {
        "vulnerabilityID": "0a8eacb7-9eca-49bb-8b14-6fb1715be5b2",
        "line": "29",
        "column": "7",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "if (confirm(\"Are you sure you want to delete this folder and all its documents?\") == true) {",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "8a61816464064b2422f2f26fb540f02dbb6fceddd45788378e0f91e3fc4a6974",
        "deprecatedHashes": [
          "16fc54a051d54d16cc5fe523d2e9e35415721f9ebc90f22b9009c0d3fe4b3b8b",
          "05c866c48b22d352c75f6d60b06bb47a5e6ba930df6c4365da4d132bfd851a93"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324615367Z",
      "vulnerabilities": {
        "vulnerabilityID": "36bd7087-8c34-4d6f-a762-be7648dab998",
        "line": "38",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "alert('Folder deleted.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "78047aa4c0cf5c8fde71fb014181daae2674cf71a1605a4232b7c41514029014",
        "deprecatedHashes": [
          "6b6de2b45cd985781ecde98c71a65d7e0f8db14e0f74e2b873c0acf88def25a6",
          "bfe72ff172ac621ea8bad605d4c8c55a61be23e9cb1c7a751072b0c962ae5f35"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324616367Z",
      "vulnerabilities": {
        "vulnerabilityID": "09451090-f30a-444e-96e9-14c01cedaccb",
        "line": "42",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "bootbox.alert('It was impossible to delete the folder.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "9ce68f6ee7f31cbaa399cca52fce1e93e2060c74855ff95c978e76feb529517b",
        "deprecatedHashes": [
          "0e9cd851a1e168a4677a3d69c61f68f3e5ce2079ffea9b11a6a97e896b312ff6",
          "0a3c343e66eecb2a3b8ef5833edda7ea98c2ab7084d8c2f7432882656e5ded32"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324617367Z",
      "vulnerabilities": {
        "vulnerabilityID": "1e5e3756-cfd4-45dd-a2a1-a4da9020ea93",
        "line": "46",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "bootbox.alert( \"Error Deleting Folder.\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "d27fe09dfd02a24991360ca97f458f8e30142e08b0131853305b6e8c88e84c91",
        "deprecatedHashes": [
          "bfebe9efdd8a52c27e18cc1736f6ab7d5881cf0029dd17c440dab23189dfb617",
          "c656ebff21b51d0a0c996171adfa8e53e82932a6b3ebfa12c5dee4f001075222"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324618367Z",
      "vulnerabilities": {
        "vulnerabilityID": "a3703272-1ff4-4ff1-8624-5854f6750202",
        "line": "139",
        "column": "5",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "if (confirm(\"Are you sure you want to delete this document?\") == true) {",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "822ce8bf91a08e5606a8f37b2b6719c09c33310b7cfc6bb881351beb6a98b7d4",
        "deprecatedHashes": [
          "cf2a84ef7069dd7f644e16e1794019755537e4ed44cf58d6010e710d269f9b6f",
          "396518f97bacaa97418c43252711fa69b9c8c8675097d65d36c3012598a3478b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324619367Z",
      "vulnerabilities": {
        "vulnerabilityID": "b38f87a9-15cc-4cfb-874b-8a456fbde4c6",
        "line": "150",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "alert('Document deleted.');}",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "7299d38e526613167ec5818fc910f8eca569f4835df67d46dde4ebcf832e2d56",
        "deprecatedHashes": [
          "0a2f30a7840500317f6ad1dc58e0a1402d44aaa1ddf10800e84105882f0548c7",
          "a9d07ececcfefe51d8dd736b996ad8c15c451dd9be8eb0d8d43dcb95d0604080"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324620367Z",
      "vulnerabilities": {
        "vulnerabilityID": "e4a6df54-937f-4141-892f-02c35ccf60f4",
        "line": "155",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "bootbox.alert('It was impossible to delete the document.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "86713211becd69291270e31d6435c15dca59ea2c0ab4e64aab3d0714dc175ea2",
        "deprecatedHashes": [
          "68298813eeba3069e6a9ebe7c0a05283ab0feddd873cc3f10ee94d32af3c942a",
          "e1dbede341ceb9d2c9421b896267397046f0aa2e346c22f704bb61b7beaae693"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324621267Z",
      "vulnerabilities": {
        "vulnerabilityID": "9f642322-5f80-4006-b367-f0221d0cac11",
        "line": "159",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.community.documents.js",
        "code": "bootbox.alert( \"Error Deleting File\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "1bf1afbda8e16b6293770ed5cd41e33a01e70993e9f01b7ac247529af97a40a2",
        "deprecatedHashes": [
          "fb1401f856134d3c9bf4544faf007b6c3dcbe6fa23d237951ad3162cfb4adf96",
          "a4973b2a3fb9e56cc8e8e29825b18c4898ce1dd9949c1f4e7b2881122372a22a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324627267Z",
      "vulnerabilities": {
        "vulnerabilityID": "d6930741-a24f-4c36-a699-60e4809dfa9d",
        "line": "40",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/emif.comparison_populations.js",
        "code": "t('There are some databases without population characteristics, can\\'t compare them. Please check al",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "39d1a613e055569dbe531aadb7f4143e365775f603ce544f24b6f7b7e22cd9d5",
        "deprecatedHashes": [
          "aad0fd93c25ef243ecfeff569bff34aea28f2fb3a14c6b02ff1c39a0c521a758",
          "b815cd25e2f83baf04e34e69b1366e4dab3313077f23e52363d4e1585578efd9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324628367Z",
      "vulnerabilities": {
        "vulnerabilityID": "31206442-37eb-4810-91fc-50de23fa67f9",
        "line": "43",
        "column": "10",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/emif.comparison_populations.js",
        "code": "bootbox.alert('Failed validating database population characteristics.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "e8218bdcf321b271f0832f8f59c28b4e62d921aa1613176b793e1e80e2b22cc2",
        "deprecatedHashes": [
          "0903ee66c816144df75d43be9a01f3e4f63553e091581ca0b4e2eb6255d24351",
          "3bc2a85ce09866fbabf20292c78e8e927dd0b89160ec34f0fe726ab84bf467d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324631268Z",
      "vulnerabilities": {
        "vulnerabilityID": "94c7507e-b1ac-41ee-aaf5-f912649e3d33",
        "line": "12",
        "column": "13",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/emif.utils.js",
        "code": "element.addEventListener(\"click\", event =\u003e {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "1b2e96cfc0fd369008161c1a48cd5070cb78f80e3cf78a50a5cd9a17b14d7b61",
        "deprecatedHashes": [
          "a9a2fb3e05637d7b2912b7b2215b1b4e2b383d0b96d3a73ae933f6e545017963",
          "a296346dd30182750d909a6bc8d3427b04512e4b976256be0db5555b8f4416eb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324636368Z",
      "vulnerabilities": {
        "vulnerabilityID": "75afc7e7-31e3-4fd9-b581-20a0cffacc43",
        "line": "5",
        "column": "88",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.colvis.min.js",
        "code": "alert(\"Warning: ColVis must be initialised with the keyword 'new'\");\"undefined\"==typeof b\u0026\u0026(b={});d.",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "d83d403ec1a3045aee655d0505c1ad949520708bc9fa0c9cb8851e8bfdecf50b",
        "deprecatedHashes": [
          "92b83eb81a8ce05359c67e580bae44355e89f0bdffbab32c1fa4c0b55107df36",
          "b8c2b7806502b7cd9df8fd7fa3fde2e1557b9d51a38c76e45c543b1efbbcaf13"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324637768Z",
      "vulnerabilities": {
        "vulnerabilityID": "95ec0db6-f48c-4ad1-bae2-08fecdbd3b1a",
        "line": "23",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.colvis.min.js",
        "code": "alert(\"Warning: ColVis requires DataTables 1.7 or greater - www.datatables.net/download\");d.fn.dataT",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "894263cf346e90b5afbd3fd2004817c2e5db9cfec7a8f0386a0e8c2ab95d590f",
        "deprecatedHashes": [
          "3325c24319eca6358626dc008e0f6d278a005f1e1a2666bd6d17d01456b3e247",
          "cdb92e84abcdf0ea4999e3a16d7c41d1f48f69f15155b4c285dd83cc50cca6fb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324638868Z",
      "vulnerabilities": {
        "vulnerabilityID": "773a1aec-5c5a-4a4a-8793-de1c5b777cfc",
        "line": "133",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/fingerprint/static/js/publications.batch.js",
        "code": "nvalid list of PubMed identifications.\u003cbr /\u003eThe list must be composed of a series of PubMed identifi",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "bc3d273489c6eca2a1a3018a32a9dbd32735245eeb785d24c055906b6f3e71c5",
        "deprecatedHashes": [
          "c574641631cf1bdeb4f327ab8dbbe7995ba6d8984f60fc3313d2ab39c195e3cd",
          "ad639c49f0a2810f38326159d5b15bf30d79fda4718387bd9d249c6475206f05"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324642968Z",
      "vulnerabilities": {
        "vulnerabilityID": "9e3ec3e9-d239-4782-b567-f6de11c31774",
        "line": "108",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_qsets.js",
        "code": "bootbox.alert({",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "faae4aae84fad1cab7f615a07896dac7a316014eae9b50a9632fdb568370a37a",
        "deprecatedHashes": [
          "66d2321def4b025876fc75b83c8767a09cfc5568cbd4ffefd3a44d4fc1402768",
          "b5d80428bf9b3c7562eb503039657752b5f8ca30464bd1228798ae83f619479a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324643968Z",
      "vulnerabilities": {
        "vulnerabilityID": "f8d6069f-2f1e-4a61-9312-09cb02bfb83d",
        "line": "113",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_qsets.js",
        "code": "bootbox.alert({",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "908206e991d5d3f85a787f4099e86385f7748717e71cbdd3681a1d9000197de2",
        "deprecatedHashes": [
          "9d2fb01b4a9aebf56fb5666bbc2b80c0549c6c158b7231b1c95a16bd11225c62",
          "df86d65be84386c4cb0a82cfeba817632a1fbb16cb56340bcf88b262753317c2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324647768Z",
      "vulnerabilities": {
        "vulnerabilityID": "a0eaefe1-4586-44fe-9def-aa118a67f5e1",
        "line": "140",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_detail.js",
        "code": "bootbox.alert('Please confirm if the information filled is valid');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "059a30ece269f2e3ded5896aea61a3279b4beeb04d6b84de09da6a6f9ca6577f",
        "deprecatedHashes": [
          "76ecf777c834a102bd9e442dc28734c58bc1f81ce30c46f920a3cbaf7f3ae635",
          "47ab6b9f3affeb6e2c784ea8b71db45764dafd9d59cd9ee0ad6015f3eb2cfd6b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324648868Z",
      "vulnerabilities": {
        "vulnerabilityID": "a20de35f-5755-492d-816d-af6fb73f4c8b",
        "line": "176",
        "column": "25",
        "confidence": "HIGH",
        "file": "emif/developer/static/js/emif.developer_detail.js",
        "code": "if (log) alert(log);",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "8bbd403b4eed067c2095e9b456342a1f73be387dc1689720c362b87549d8991a",
        "deprecatedHashes": [
          "70588f6f8748e84581d3c119f15bff023f677dd4a89ffcdadb2ec23ad0075772",
          "c9c4533058cac728b4b60316e6692e5f99338e0796aa0f6e05473d49ae7fb536"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324659968Z",
      "vulnerabilities": {
        "vulnerabilityID": "2f8bdbab-9fd3-48cc-ab18-471321503708",
        "line": "51",
        "column": "32",
        "confidence": "HIGH",
        "file": "emif/fingerprint/static/js/emif.discussion.js",
        "code": "unable to be posted at this time.  We apologise for the inconvenience.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "8463b87e3a7bdb84878182544db090f9819793d27b09a153d24f345d6c9ce42a",
        "deprecatedHashes": [
          "fd7130a0fea2aae1060825263b71c1dcf824b56521c822db077c470b85e971b0",
          "65eb576820b26e4a3635215b2426b801e4066c193ea1efa5e43afb4bc95d318b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324665968Z",
      "vulnerabilities": {
        "vulnerabilityID": "e192e293-77c8-4a8b-a638-3e052e068021",
        "line": "48",
        "column": "24",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "t possible at the moment to favorite this community, if the problem persists, please contact the adm",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "040de409ba54ed0665d4143f2245e9d6389f77fed840a5692b589ae2c7f851ec",
        "deprecatedHashes": [
          "c5ae342da184ca73138b1de36600330f43a3c21ee415dafcf253d0bfaa55a5b1",
          "467016640f57fb0a033eff09605632347c25a3dccc65b278129d7f1d73bbc276"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324666968Z",
      "vulnerabilities": {
        "vulnerabilityID": "f22e5eb3-d72c-48cd-95f9-7a971121d0ef",
        "line": "50",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "s not possible at the moment to favorite this community, if the problem persists, please contact the",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "99854c05f21a0a75e2b293903b7fd4c92bd61e6c17c05db43ed15df32a358534",
        "deprecatedHashes": [
          "d738d08dda7b078f5e95fed60b4ee0b9d3ee8e6b9a70bb3692d8ddbe8f44abcc",
          "7415580b9ea68dfd2483e0cfdc6c0663eb89843e6ce5adc8e02a540eb09311ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324667968Z",
      "vulnerabilities": {
        "vulnerabilityID": "f5706eec-f9e7-44e3-adaf-623b1f908045",
        "line": "59",
        "column": "24",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "t possible at the moment to unfavorite this community, if the problem persists, please contact the a",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "3e0f9aeab41b4ecd9051571ca3c4de0f17f791d865d23e7b8d9b9b656233ed34",
        "deprecatedHashes": [
          "40d08c912c4cfbbe25e23bed48d61b72e1c9c87443f1b6958b1de54494e330e1",
          "c509668225e63eadc5be7472933d36c9aead4db57bf87831d19d4a496426a433"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324669068Z",
      "vulnerabilities": {
        "vulnerabilityID": "f1257dc1-e2ce-43ce-8133-c7ca947d71d3",
        "line": "61",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "s not possible at the moment to unfavorite this community, if the problem persists, please contact t",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "27fa2e284c3e43b7953085b08dcd5cfdb885b1e31dbe4786abdd1447341d16d6",
        "deprecatedHashes": [
          "5a9d45d46e84cf4c7b096ad23c897588d70197095a4bb561ce32ba4cd3b0c841",
          "8796fa08d03a21d3566f866733655c74f40798d086b41045c157caf6aa73bd40"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324670268Z",
      "vulnerabilities": {
        "vulnerabilityID": "007696e8-e384-4945-9a28-12f4cd448c5c",
        "line": "79",
        "column": "36",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "t the moment to favorite this community, if the problem persists, please contact the administrator.'",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "755fedc799fc96210cab038d810cb4aad6d2a56ca543efb66323c8c721e29f9f",
        "deprecatedHashes": [
          "0a0c1d4bc8a5d746d72859a450a3fc98d17e2af82375f1582ce88bebaa44a7cd",
          "707e0c8efe576638a763f1459089729c72219a4428e57d2b8b22982abc680350"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324671268Z",
      "vulnerabilities": {
        "vulnerabilityID": "39191d68-491b-42f1-aa42-26492f281c99",
        "line": "81",
        "column": "32",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "le at the moment to favorite this community, if the problem persists, please contact the administrat",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "4ec9d6a0cd5b093d69670714cf2b90e9e566e6c23024467fe295e5db83e71977",
        "deprecatedHashes": [
          "a6710e73f2c988440797d3de0870a8d4b013ffa38a18d068c2118a30941e2d80",
          "a84eb022cc0a67f3bb62a8e2375a2d1c991b87fadcc20387fc0cb281d8480d7c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324672268Z",
      "vulnerabilities": {
        "vulnerabilityID": "a82af535-69c8-42d3-a71f-7eb5d7ed20ed",
        "line": "113",
        "column": "36",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "t the moment to unfavorite this community, if the problem persists, please contact the administrator",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "20f4bad244fc71ebf4912a8ef8c91fe6395f3ac334fb1e13f98c50b7278fe1c4",
        "deprecatedHashes": [
          "9bd8d26ef4fe165dbd2715122383f31f4210a1b002222f8708a05667615c3f28",
          "132b2d3abbfc78056a5df2f3e07f7dcd435139284583e355532a2bb735f94f64"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324673268Z",
      "vulnerabilities": {
        "vulnerabilityID": "17401833-e3da-4b34-b712-fd4cc896109e",
        "line": "115",
        "column": "32",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "le at the moment to unfavorite this community, if the problem persists, please contact the administr",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "a03c811119d433c6e6747530c3b7c33104012921094d6b458a68e8341d503888",
        "deprecatedHashes": [
          "cc6f846893b79c127244bfaa8799568344949504794339552e2a81aacceb7786",
          "63a254755375a1991d8ef172fbb03546ffa15252b5b7f396b0c80b6079c64c22"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324674268Z",
      "vulnerabilities": {
        "vulnerabilityID": "d33c4e66-e0a2-491b-b5d1-2ab9907be5cd",
        "line": "150",
        "column": "36",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "t the moment to leave this community, if the problem persists, please contact the administrator.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "1596374bfa68c528a8609d744c398f188801a2e39ceedf6d0c4a514934cab816",
        "deprecatedHashes": [
          "3e08f4d3f0802bd3478b7918ae621ce66c0c337e8ae8e83d4403031a7a6a9c85",
          "34055d97a3842e83ce5751180aeb09316f67f3b149b514f97acb77dad646c2b3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324675168Z",
      "vulnerabilities": {
        "vulnerabilityID": "98a6d042-a52b-470f-98b5-2ce195ef7781",
        "line": "152",
        "column": "32",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.splash_community.js",
        "code": "le at the moment to leave this community, if the problem persists, please contact the administrator.",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "c79788d72b979db86e94e5ba624a76f594b3fcc314d03ac0528b594c2f9e7a9b",
        "deprecatedHashes": [
          "9eeb9dd71aa1521c5c6413281f05c3594e86a96cd6a48708e027602657d9b0eb",
          "7e989c90ae18b5b900c098782593226ddf73095244b3c20437dd63e09eb9c779"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324677468Z",
      "vulnerabilities": {
        "vulnerabilityID": "97a80edd-e3a2-489a-a14d-9a7e2d3b8d4c",
        "line": "73",
        "column": "24",
        "confidence": "MEDIUM",
        "file": "emif/community/static/js/emif.manage_community_description.js",
        "code": "self.vanillaIcon.addEventListener('click', function() {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "47def50e76dc5c2963c794561895f25f541737d053f340f77103bdd4e4555fa5",
        "deprecatedHashes": [
          "218edd521715b3b67d156f64d0e8a9c6913fc0d094dfbdce41222c9a647c5bd8",
          "9d4a9e40471d2166baee67b24638cebd08fce2da4177507125e4d6a08dd623f2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324679568Z",
      "vulnerabilities": {
        "vulnerabilityID": "7779c629-2376-447d-a9ba-d2a760f9fc31",
        "line": "163",
        "column": "21",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_description.js",
        "code": "// alert('done!');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "2d0ac3ab656010de6f0955cb51fcbd15e7a94a5302a38f2b422e9ea4bd2bb809",
        "deprecatedHashes": [
          "b46fcc2c7e6c03fdade11e95a0facd4402473a187e1edaa21f4f06472ad9f76a",
          "ec4ee949aebcdebe14bababf6798f4ebf8d4c5b37419314fd9b1d235b074324e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324681468Z",
      "vulnerabilities": {
        "vulnerabilityID": "4710af84-4fec-454d-b1a3-590487a1f1e2",
        "line": "112",
        "column": "8",
        "confidence": "HIGH",
        "file": "emif/studies/static/js/emif.studies.js",
        "code": "if (confirm(\"Are you sure you want to reject this request?\") == true) {",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "0dd8a4607db8c8146b106a3c269b11ff679698051d20cb031f4b3e9e7e8e5ee6",
        "deprecatedHashes": [
          "1ced1f9db8c3011f5c9c093fac77d3b3d0e7648c331d4c9541a7bbc659d6290b",
          "00124bd6f06930f6bcea9264f210135d82d3ab880c53e23356cedc8504a139d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324682468Z",
      "vulnerabilities": {
        "vulnerabilityID": "fe66b1ce-8892-455a-892e-762cbe32b136",
        "line": "134",
        "column": "8",
        "confidence": "HIGH",
        "file": "emif/studies/static/js/emif.studies.js",
        "code": "if (confirm(\"Are you sure you want to reject this request?\") == true) {",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "835a101bfa3e6d02f1d86413ade21ef1be266bc36281f94a742dbb009c6c2d15",
        "deprecatedHashes": [
          "971ba4e79431f07eaf429590f13ddd352f27ae71ad778c112403b807c3fc53a6",
          "a789c8cd25d8abee9ba2e4fa35090e17e09b32d0731a31b3322a16b35fa8b5a8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324683468Z",
      "vulnerabilities": {
        "vulnerabilityID": "11cfc6c9-bc0b-4ca2-909e-71d45f161dbe",
        "line": "155",
        "column": "8",
        "confidence": "HIGH",
        "file": "emif/studies/static/js/emif.studies.js",
        "code": "if (confirm(\"Are you sure you want to delete this request?\") == true)",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "937eb821c48b74676f91b0fc97aee3127706d3e392b9ce1f1d1560a59b227e9a",
        "deprecatedHashes": [
          "8450c34dd301da639d8fc315c25c640c4e1d48134724ab79878fbcf4327f5d0e",
          "11b1eabccf10102a773b2c54db6556e32cd9bddf126934659494ff15d6b7ce62"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324693368Z",
      "vulnerabilities": {
        "vulnerabilityID": "c9cd0e22-31bb-484f-96d7-780784eb62a5",
        "line": "145",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/emif.results.js",
        "code": "e select at least two databases, using the checkbox on the right side of the table.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "a3ebce38c84b2e9d9f084827dd99c72340aa7bdf559ba51b854bf5541d62105c",
        "deprecatedHashes": [
          "04232d3872e438c9f062bc7034c8499f93426f9358788f38fd11d0999f545524",
          "6162232575e8531c464de3127c83e96c5bf86dd5d1f32eb19653f83f57922431"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324694468Z",
      "vulnerabilities": {
        "vulnerabilityID": "5442f2e8-72f7-473e-8684-b136bb480b62",
        "line": "263",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/emif.results.js",
        "code": "ould not save the advanced query. If the problem persists, please contact the administrator.')",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "9eef8414a1ddf4766f4dc667fa01ecda7b326e5620eb826d23084a0c4add4941",
        "deprecatedHashes": [
          "1f0b2c7892ba3c92ffd47a5ff2957fabcb4715b8afb3b490f74b312ce828f83b",
          "515d3bb15c8004ed7d22deda76decd5043ff232740af4b38241722fc2f18aed2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324695468Z",
      "vulnerabilities": {
        "vulnerabilityID": "d451ba62-f956-4c9b-a0d1-3c9b353bd6ed",
        "line": "312",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/emif.results.js",
        "code": "bootbox.confirm(",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "d983da9fc69e23adfafe08bd236c218457154f4c8c09184b485b8d2deb2c7ab8",
        "deprecatedHashes": [
          "f8c3e1472d852aa445f9606ef0b693be6889100c879460356363924bd885b4ca",
          "c20636c8ea226462b94535ddfbc01730a88c47e5687d5ba19b893d3eb0c3bc4b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324696568Z",
      "vulnerabilities": {
        "vulnerabilityID": "0221cbac-f299-474b-ab2c-17fccb088826",
        "line": "340",
        "column": "10",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/emif.results.js",
        "code": "bootbox.confirm({",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "866821a9921a178c5d0ebce57db848781d96d3b45f0db58e86c966335c8f8ab7",
        "deprecatedHashes": [
          "952f40215adfecc9e5823f56e233db2370a822b7d04ce52cf6144080d3e1eeac",
          "e9da8f200f568939c2615c4f7bb913fb5aa91f452a0a4a26abf290fe36b35a8d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324702668Z",
      "vulnerabilities": {
        "vulnerabilityID": "64746387-f101-48b7-b79c-67afc8c657bf",
        "line": "6",
        "column": "48",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/paginator-sorter.js",
        "code": "lert(\"5 secondes passed from the last event keyup.\"); }, 5000);",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "d1bfac9a74e4e4e0459453b2573dba0dd05b9bd5e693161b103c9745d78e9b8b",
        "deprecatedHashes": [
          "75006f1c49b592416eaf42d4d616538aa00d11bf05ab26943a024d482ce957ab",
          "75b70d277486c8bd7040c9db20a4559dc360aeb08b477db182e297c4ade53bb3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324729968Z",
      "vulnerabilities": {
        "vulnerabilityID": "15f49c1c-e41c-4af3-81bc-58d8507540c3",
        "line": "99",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/fingerprint/static/js/fingerprint_edit.js",
        "code": " not change draft status, service failed, please contact the system administrator.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "e23d5c156a76b72b239a794cb459b0fe0f59bcfe8e649cf49fe3c262bb148f5f",
        "deprecatedHashes": [
          "0edfee85ed763f5131c166a901e61f988915ea0bbf1401336bcb9b7a38fa0ef5",
          "7b4e9f712ab8adad346dcdcad597624d3dc6f786ad4e8cd896ec8c16c1cc8d99"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324756169Z",
      "vulnerabilities": {
        "vulnerabilityID": "fb8d565a-d898-46d6-a693-a163a575c938",
        "line": "48",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.layout.cloud.js",
        "code": "d.x = (size[0] * (Math.random() + .5)) \u003e\u003e 1;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "271a626c1b86a884daec6ad482f3eba219a44821d33df26c1426c4e9494f0e72",
        "deprecatedHashes": [
          "0d4fa814e95208f7a54f40798e12ada17f1ee2e26340375706d39999729d4d2b",
          "1be61871e29c78ac17cbb9aca2b728aa9c6b2d8fb4bb47ec339f782a7aac4fb1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324757269Z",
      "vulnerabilities": {
        "vulnerabilityID": "1ac4ae3a-722f-4e00-8335-59fc7efec7da",
        "line": "49",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.layout.cloud.js",
        "code": "d.y = (size[1] * (Math.random() + .5)) \u003e\u003e 1;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "36e4d6bb1e9500c074e419b42f905a45ed46a1b82e33b16855d838e34d881403",
        "deprecatedHashes": [
          "5ddd93255ad0c451217eb5db290ac84b50375cce85cf438d5afdf01a644e26a9",
          "7359479bd513e626a3f733e8695a69b8b438a5a7cc230bee467eb9a52050da16"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324758269Z",
      "vulnerabilities": {
        "vulnerabilityID": "cead62a4-394b-4d6c-baec-47bb28e9a5a1",
        "line": "88",
        "column": "15",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.layout.cloud.js",
        "code": "dt = Math.random() \u003c .5 ? 1 : -1,",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "f617840113db3c622ee9af1c5f4a7b13080878e66b2620daba1e8c7dcbaa0659",
        "deprecatedHashes": [
          "b43743119920a7a2cc10687f431b17e570053395428007b2ed74ffee2f8d7641",
          "0a3dc85f160f300908f8d2e0e2cd3055cbcbb885750dbbc55f4a142511c59264"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324759369Z",
      "vulnerabilities": {
        "vulnerabilityID": "7b81a080-3ed1-4ea5-8413-3c0891dc8b89",
        "line": "212",
        "column": "15",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.layout.cloud.js",
        "code": "return (~~(Math.random() * 6) - 3) * 30;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "8a1b94a8d55eb78233f8ac8286bb90ffa706eac16ccc85be9cd795322541527d",
        "deprecatedHashes": [
          "77839b2e22808a42da2a01cd1ea9c5ab4ec572bb8f2b92497f165ffc8fafb19e",
          "423597d5c2a6db94b185e94cebcbc3659f661c509b3dc5d6e9af4d42b3d5f663"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324760369Z",
      "vulnerabilities": {
        "vulnerabilityID": "eb9d4505-1fe6-4b58-8196-81b4946187a4",
        "line": "43",
        "column": "281",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/modules/jquery/dataTables.tableTools.min.js",
        "code": ".addEventListener(\"mouseOver\",function(){b.fnMouseover!==null\u0026\u0026b.fnMouseover.call(c,a,b,d)});d.addEv",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "ac8ba0bbb9ebdac12a3703779b3a6cf8e2c5c67ccfbca808cef684ac80183b31",
        "deprecatedHashes": [
          "19290173bc73e9f7cf7bfac29b967bb266909f1bb614472d1fed1c42284362b8",
          "7843dda7c2ddc369555c8e82131f1353676ed8fe66bbf33c7fb4059cc0df2594"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324761369Z",
      "vulnerabilities": {
        "vulnerabilityID": "5328186e-3ddd-4484-b160-0bf1e8d08853",
        "line": "20",
        "column": "265",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/dataTables.tableTools.min.js",
        "code": "alert(\"Warning: TableTools must be initialised with the keyword 'new'\");this.s={that:this,dt:e.fn.da",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "73c9319aa2b855553591f9115634b1cb54c9f3b8e4674dcf4dc7ec40d9da8c7f",
        "deprecatedHashes": [
          "f4606e86295db1ed5e61bb6a1cd3ab574b6ed5d45bf9b1befd246bb3ba86b7e9",
          "a5b77f410045f673ba3875413824f523bab434af28912dcbd83a31de790918ca"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324762369Z",
      "vulnerabilities": {
        "vulnerabilityID": "4eb3a2c9-c06e-47a9-adf0-9508b256d955",
        "line": "29",
        "column": "144",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/dataTables.tableTools.min.js",
        "code": "alert(\"TableTools: Warning - unknown button type: \"+a[d]);continue}c=e.extend({},TableTools.BUTTONS[",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "83ed4563ea4766ff2e70bc7eb474471c1ee238e7e1cfae42d15385a736ccf55c",
        "deprecatedHashes": [
          "cf6120e08ecf4cf692cf8570a0cc06990dbda8535a0021f18b6c69bf08e5e58c",
          "fb560e4cd92ae0a85fd144424181b25f59cfe9d9ece5342f1455bf2650861341"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324763369Z",
      "vulnerabilities": {
        "vulnerabilityID": "32798039-1230-4bd9-b866-cf5f536d735f",
        "line": "64",
        "column": "54",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/dataTables.tableTools.min.js",
        "code": "alert(\"Error detected when sending table data to server\")}})},fnAjaxComplete:function(){alert(\"Ajax ",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "887ac30b829fec324e0315104a7f52fb52917b99296b5364d3c122ca7f167429",
        "deprecatedHashes": [
          "32abe2c49fd5bc4f50d911886c9437e5b0e36c6188aee5f6cbaa73452cba88b0",
          "76c8ee49d2d65588044cd78fabdb69295db70b49b77b952dd57db9afe1552999"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324764369Z",
      "vulnerabilities": {
        "vulnerabilityID": "d18ad6b9-040b-4a8f-a9d5-42f2887234ae",
        "line": "67",
        "column": "495",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/dataTables.tableTools.min.js",
        "code": "alert(\"Warning: TableTools requires DataTables 1.9.0 or newer - www.datatables.net/download\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "4faec92633e7d5a38fd6905dcfd8c8607137814d17cbd6d831bbe9acd340ee47",
        "deprecatedHashes": [
          "c814da005740b42293a7a28ee9e7002138b10a815ebd1b2ef5e574753f87bd8c",
          "8f712326c55909d1f0ff29d5619846aba82067b9777dda33c9c6c78a3dc0a81c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324765369Z",
      "vulnerabilities": {
        "vulnerabilityID": "fb045bbb-33db-4c0f-8541-4fc2ce980bbd",
        "line": "68",
        "column": "406",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/dataTables.tableTools.min.js",
        "code": "alert(\"Warning: TableTools 2 requires DataTables 1.9.0 or newer - www.datatables.net/download\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "5508f07f66744cefddd275115df737adcecce3b6659a42bcc567e637a6910daf",
        "deprecatedHashes": [
          "7b8bc5f8f4a0d143e0dad283bafdaf4daac629d98659ebfdbc1568496bd159ce",
          "9b9dade08e7055cb0c6af2eb341b9f8ebd8ac8dad951aa989b02ed05e471580d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324766469Z",
      "vulnerabilities": {
        "vulnerabilityID": "5edfb017-f533-47b8-acd0-d2f221d913cc",
        "line": "21",
        "column": "21",
        "confidence": "MEDIUM",
        "file": "tests/units_js/accounts/1_create_user.js",
        "code": "var r = (d + Math.random()*16)%16 | 0;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "9a28adece5f1ffe1f1ae39883f1c6470789377860cbbefebf693d4842cd22e6f",
        "deprecatedHashes": [
          "4fea4371c41875f3ad484ac46a777782f681914bc0eb6c85bb98d6a05bd425f3",
          "f4e0fe4c4bbade861db2c2bceb89bfddb9c19fb6a3c7e2f60857cfb420ef9f54"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324767469Z",
      "vulnerabilities": {
        "vulnerabilityID": "6ee4f44d-9cb7-4f58-9af3-ef93265f7a61",
        "line": "83",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/databases_datatable.js",
        "code": " is no question selected. Please select at least one to see the datatable view.\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "58cd33f9c65f313bbed0fe4f35a630e24631765d8133d5eb9fd9cab7c098a374",
        "deprecatedHashes": [
          "df2a2424b1b6693c804fcd6295660936e700b5ba949d57fe1e592c24491df6ef",
          "2cb545a57a053b12f7506c0fb0d5db52fd5e2b416400ec7abbf57cd70b512ff4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324768469Z",
      "vulnerabilities": {
        "vulnerabilityID": "32fc6d6f-a58c-4741-9228-c3c9a1e7edd7",
        "line": "87",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/databases_datatable.js",
        "code": " is no database selected. Please select at least one to see the datatable view.\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "1ba76b0fc12a256ee2db1a640d11ada28d77ba61f5dbd7b0281aeffdfc7a205f",
        "deprecatedHashes": [
          "b66c7f564497619423bfd7c5a81d21a1bb27f57cea5e0afa38d96ed6d925392d",
          "177c2c17c8f46942536b9b7e3d5d8145c094e2cad92b8f36fe5dfb69ee6c60d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324770469Z",
      "vulnerabilities": {
        "vulnerabilityID": "0f92c125-97c1-4123-b0e1-97d3761524a9",
        "line": "2",
        "column": "6",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/charts_d3.js",
        "code": "//    alert(\"coiso\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "1b0fcd3b18d854f285d7a0414010602c67bb26306d59e5bef5b275c6ef60b197",
        "deprecatedHashes": [
          "4c6d5f1783269a45c1f3ea246f03dcdc39832dc65672c49cc4ccf9fd31fe5b92",
          "f4c2927cc262dd58395ce39f13dec23277dd646727783f1d6579632c943e386e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324771369Z",
      "vulnerabilities": {
        "vulnerabilityID": "f5175fb4-1dfd-46d6-93fb-f99c7f2b9935",
        "line": "219",
        "column": "37",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/charts_d3.js",
        "code": "//        .on(\"click\", function(d) { alert(d.text) })",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "b1b3f1fa107e8d707e4c8ae170ee0249c1576f4b2ab4c22db8ca4755eac50442",
        "deprecatedHashes": [
          "bd621d810e91fcfebc45b0e2fcf6fbe7114edc56875f764f668c1735eb8626d4",
          "69026ecec83c840c9120f4541e44ddfd1fefa29d4a2531ebafdf45b4df11d3ea"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324772369Z",
      "vulnerabilities": {
        "vulnerabilityID": "48297ede-610d-4932-8093-0c86be5de10f",
        "line": "178",
        "column": "22",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/charts_d3.js",
        "code": "return ~~(Math.random() * (d.score));",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "96f6b7a922890fa9848e81d50b17605eb38f162efeec6b0268213f04055dc5b4",
        "deprecatedHashes": [
          "55eb7b19f348581d0bf44c3cf81e48ac3ba24a537f3b386f027a35b483b69758",
          "73466d9acbc52fef5d98af9388e9a4ff8571a6ff54601a1c975d2e74375e7650"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324778469Z",
      "vulnerabilities": {
        "vulnerabilityID": "f80f6580-cca8-44fb-b4bf-3ac913520a99",
        "line": "142",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert({",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "0cff6ff44aff1e848cc6479d3e631fbc51413b1a5fc9aa7c6cdcf422cf31e1ac",
        "deprecatedHashes": [
          "9926b7fb7e8d19bcfd184c558bbdc0e0f4614901486d4c638936bc7d2a71d003",
          "03c43f92e99f3870c001ef7c3023fe36d880469f4462c72c803a01a6e74d6503"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324779669Z",
      "vulnerabilities": {
        "vulnerabilityID": "ea82a8b8-f32a-4532-af97-db5b09bb583e",
        "line": "147",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert({",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "b6778411ae947f87d2bb9329e62deff136faada47d54d6dfb94c4e380e69d91f",
        "deprecatedHashes": [
          "c775eafc71d010b24faeac3c3294fda7e03f3732788f7a4e7c4ac7f3d2730bbb",
          "5430e58f9d2dfdb20f01245ff8c23fb05d70bd35a7adcd958f83052333605755"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324780569Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b61942c-6800-4e11-b861-d28594d8c3c5",
        "line": "244",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert({",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "db07b1b75b44d78ef8bf6a65a83dfea35ccde48ef42d77c61c2d04b788094700",
        "deprecatedHashes": [
          "e9074d71d797d373254ebe7c5dcf901d04ab28b767ecfbb39326bca9dd7b6b95",
          "c995b3bbd63357cede490165d16d235fb60546f7e8fac674ca4901e18a038a80"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324781569Z",
      "vulnerabilities": {
        "vulnerabilityID": "0a9cc252-5245-4bc9-b8c2-16176d3e2184",
        "line": "249",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert({",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "4b039c38b7180ad2d0fb83e3b9bec259c11cf2be5b1c0094e169e118bbd76524",
        "deprecatedHashes": [
          "04718907ebb9994aadd44b781b6bcf02531e39c8636aa103c602e2daf429ab09",
          "11b33a6024ad792e96918ec928d65bda59cc3a7d91e9c65b886cdf0fb36cd2eb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324782569Z",
      "vulnerabilities": {
        "vulnerabilityID": "1a2bfbbf-d76b-41a2-a16e-2a6cb558d270",
        "line": "419",
        "column": "28",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert('Error adding user please try again later.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "89d6ecbeee8f014e42fe7036ffc5ddb7ecde5d3b149fbf25350af7ac96133513",
        "deprecatedHashes": [
          "4e917b2fa473603dba546ed02f73c9f33b1cce378eab36bf159fa8e94dfd503c",
          "c70ef0e45061a9754e164a9b1298ec9d79075586c9e3c2ab45eafb062bcb568a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324783669Z",
      "vulnerabilities": {
        "vulnerabilityID": "d50c4bde-32ef-453d-8a23-5eb88b1316ee",
        "line": "424",
        "column": "24",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert('Error adding user please try again later.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "8f20eed0c37f8f0fdbb8ea56aaa6b1ec3cb95f052288b3936a5f9ab05bafe202",
        "deprecatedHashes": [
          "b3dfd3adf3c900d65079965c3d47cc886655e6c9413744a6bbe06981a98be161",
          "78d0cf35521273af157e8e3bbf55519d46555d4c041cc5dfbf65a42e4465b6cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324784569Z",
      "vulnerabilities": {
        "vulnerabilityID": "c0bf4979-da41-4a6f-a840-ffbeb8a6890a",
        "line": "439",
        "column": "28",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert('Error removing user please try again later.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "e21eff4d4a3beaaa689a2a11b00cc9b76a93f6cc615eedebf3c1b83b09992144",
        "deprecatedHashes": [
          "a8aa3257e46b797e7b57582a62dd4de755955fb003f78161803cb94aedaa41a3",
          "a8b7b5b2d6984cfd971df8ea93e136ce53203c11809a3775932e8e0050b49639"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324785569Z",
      "vulnerabilities": {
        "vulnerabilityID": "5a497f33-e230-4ac3-b250-97b241ec0b40",
        "line": "444",
        "column": "24",
        "confidence": "HIGH",
        "file": "emif/community/static/js/emif.manage_community_groups.js",
        "code": "bootbox.alert('Error removing user please try again later.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "21a1dfaf4c78d04c9b359e56d790f0993837cfb6027993ac30081c067759f042",
        "deprecatedHashes": [
          "7bfe8610a53d07e872a0be187b9fe88667d65ba9aaf2d16d364ff8742815b2fb",
          "ce58664f718bf49548b42c7cbde40bcf20fdfe63ef7cf7baa3b513b662a4bb74"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324786469Z",
      "vulnerabilities": {
        "vulnerabilityID": "ab541777-b599-40c9-8151-2a5b3b037b87",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/CustomElements.min.js",
        "code": "",
        "details": "(1/4) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.\n         \n(2/4) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.\n         \n(3/4) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.\n         \n(4/4) * Possible vulnerability detected: No Log Sensitive Information in console\nThe App logs information. Sensitive information should never be logged. For more information checkout the CWE-532 (https://cwe.mitre.org/data/definitions/532.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "c2b97120ae7501dfb47c3fc5811e55dd47b7bf9ec0f8e76626b94e1019f04668",
        "deprecatedHashes": [
          "41e4fa6b75fab724f8cc8ec5c222baa049cc00b07ac3170742e9166d1d81ef97",
          "4a0814a987f4e6bb37552356877ff0f2927f087f3c5323a8ab049b03c248ef14"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324787569Z",
      "vulnerabilities": {
        "vulnerabilityID": "423c33d5-e719-4993-b22b-8a1bd7915e6d",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/CustomElements.min.js",
        "code": "",
        "details": "(1/2) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.\n         \n(2/2) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "c2b97120ae7501dfb47c3fc5811e55dd47b7bf9ec0f8e76626b94e1019f04668",
        "deprecatedHashes": [
          "41e4fa6b75fab724f8cc8ec5c222baa049cc00b07ac3170742e9166d1d81ef97",
          "4a0814a987f4e6bb37552356877ff0f2927f087f3c5323a8ab049b03c248ef14"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324794569Z",
      "vulnerabilities": {
        "vulnerabilityID": "89982b1b-9678-4cb7-a0a8-11e7d7c5b22d",
        "line": "164",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.documents.js",
        "code": "alert('Document deleted.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "b0e5e134f13afde93c08bbb5826a6e515953e8a1ff462a13ace5e1f374a1cc68",
        "deprecatedHashes": [
          "d43bbef34be079a31393d6bbf9c46e3a2e1fbb008dcbfc2c8a327b6a55c6239e",
          "4fe99e33c35356a1a39e8879c6195ac5881aae41c9c2f6eb93ad5c99be504784"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324795569Z",
      "vulnerabilities": {
        "vulnerabilityID": "03b5ffd3-8156-4d04-9300-d702be4c108f",
        "line": "168",
        "column": "20",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.documents.js",
        "code": "bootbox.alert('It was impossible to delete the document.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "7341a4f2dc7399c40085ef73c09d15e1fc83d6ce56372c9c66612fa65af56701",
        "deprecatedHashes": [
          "e183b008253c932dc0f08118a1f5952fab64c102041960567bf68db1c41f650d",
          "3ca7ab11af6e475dab305d8b8887bf50edbbfa628db603a0018a546e04de7147"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324796469Z",
      "vulnerabilities": {
        "vulnerabilityID": "0cdc93e5-3d86-43a4-b891-4928baf04d5f",
        "line": "172",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/docs_manager/static/js/emif.documents.js",
        "code": "bootbox.alert( \"Error Deleting File\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "2803104a0896ed6c70b67229d56ba49dff8cf4db414b9a9d1fc701b5a3f06ff5",
        "deprecatedHashes": [
          "b51044a3177517bab7351a48f0ee88417377f3aaea636da92a1751d469e0dc55",
          "0c0a74277bcc65574cb601661343736bab8be616092ecf2dc79992abdfe8da40"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324803669Z",
      "vulnerabilities": {
        "vulnerabilityID": "6369e7ae-98b8-4ffe-9c82-e1fb12019a85",
        "line": "68",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/MutationObserver.js",
        "code": "window.postMessage(sentinel, \"*\");",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "19f6ac3ef6f90b184378b1e0aa56a9215c9bf3b240b18f6a3f7722a48e571dbd",
        "deprecatedHashes": [
          "80dd4c4e8a6a750106fbf93072913ebd183671968b1542c8ae8765ee7f7bbd60",
          "4fd07a65adc9a6e981a5e38da79043142f4d2f8c0d5927bfc116a34d04050db3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324804669Z",
      "vulnerabilities": {
        "vulnerabilityID": "e75209e4-fc6f-4fc4-a5da-db7079dab322",
        "line": "57",
        "column": "10",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/MutationObserver.js",
        "code": "window.addEventListener(\"message\", function(e) {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "57b610ce6c3bd763755f118caf9cea0321587df17c9677f02f531b0ba8ba42da",
        "deprecatedHashes": [
          "9229425301fcca8b18ee4deb3f98c13e3e9af1226240c1749b3ff3e32844584f",
          "b5ad8268977242ca03c5a8e6739515c3ad957b12580ddd2b5be507b86516bd47"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324805669Z",
      "vulnerabilities": {
        "vulnerabilityID": "4c8b7e64-12ae-43ff-aab5-ab036019b45b",
        "line": "16",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/MutationObserver.js",
        "code": "this.name = \"__st\" + (Math.random() * 1e9 \u003e\u003e\u003e 0) + (counter++ + \"__\");",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "996970e327c8b5571e8aab260036af8256f1fd77da82d83286bc4198554dfaf6",
        "deprecatedHashes": [
          "936297d51825172e404ecdb4e1039913d916432dc33de8da035e25fa817e6888",
          "a5ba83e8185ed2778b3f3116b49c2abdfb558c319f3d75ffcd87a18045dfb7cc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324806669Z",
      "vulnerabilities": {
        "vulnerabilityID": "eaf7e759-1e1c-4ea7-b9de-c9f50ca96a55",
        "line": "56",
        "column": "26",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/MutationObserver.js",
        "code": "var sentinel = String(Math.random());",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "7e1223e103bdbe99e94622965e638d2270122083ad7d72c320cdf8ae61890769",
        "deprecatedHashes": [
          "67ab8857d8e4d7862bb51a990b144aafe6c45120d5421ada040709de0a516a2b",
          "8c7f1a35d9edb65301ccdc49c2f86ee076a37b6f4b4a8b29dea8692b7f5765cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324807769Z",
      "vulnerabilities": {
        "vulnerabilityID": "5d2936a9-590e-4228-bfe9-d0767a4ad505",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/MutationObserver.min.js",
        "code": "",
        "details": "(1/2) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.\n         \n(2/2) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "0bffcbbc064e2c272cfd02b433b61a5d634c6224695bbc904eab6bc24367158d",
        "deprecatedHashes": [
          "dfbfe5758af84d0e5c1fec6c7d0ef5bf2bcd3bad400880c54fb6bc3c83b61412",
          "7327d10ac5c23b988a424dd40ff536d2e3f3b7684b4071b921be3fd07f66b74b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324808869Z",
      "vulnerabilities": {
        "vulnerabilityID": "fd55dd8b-0351-43ba-bbb9-ff93ecca04f2",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/MutationObserver.min.js",
        "code": "",
        "details": "(1/2) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.\n         \n(2/2) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "0bffcbbc064e2c272cfd02b433b61a5d634c6224695bbc904eab6bc24367158d",
        "deprecatedHashes": [
          "dfbfe5758af84d0e5c1fec6c7d0ef5bf2bcd3bad400880c54fb6bc3c83b61412",
          "7327d10ac5c23b988a424dd40ff536d2e3f3b7684b4071b921be3fd07f66b74b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324821069Z",
      "vulnerabilities": {
        "vulnerabilityID": "3d0b2299-e2b7-42b1-aebd-e7cd3149eedc",
        "line": "5",
        "column": "6550",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/sammy-0.7.5.min.js",
        "code": "Math.random()*1e3,10);this.context_prototype=function(){Sammy.EventContext.apply(this,arguments)};th",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "f468c8f0b100195c7ed87e83bb85272466f4bfb3324e2957c5887b5bb495de74",
        "deprecatedHashes": [
          "64edb6e0c84483fb6ff7965959761c703ba5f5a35d60c6c065ef1f54665973f7",
          "bad5f5f8698dbdb066a54bb0c9527941430187582f95958fc08dac30ece34029"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324833169Z",
      "vulnerabilities": {
        "vulnerabilityID": "dd729338-2846-48b8-a7bc-ec09816dfdad",
        "line": "85",
        "column": "48",
        "confidence": "HIGH",
        "file": "emif/compare/static/js/emif.results_comp.js",
        "code": "lert(\"5 secondes passed from the last event keyup.\"); }, 5000);",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "c0a7c6b2981cc0af8b6387aa8fd37c2c11ef50d5c7b892c458aab7ea8ac5dfb7",
        "deprecatedHashes": [
          "d8c9e3e61a80c561edf1ed1f7f9c6e02127e6825b7c013e48ab659deaf0e82d1",
          "75513a9e3df0700bfc2213ca5f2eea085d34659c89aa98ee8aaf16b570a451c1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324847469Z",
      "vulnerabilities": {
        "vulnerabilityID": "78232654-117f-4673-988b-5ad26cd54674",
        "line": "151",
        "column": "36",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/main.js",
        "code": "ences for new questionnary types, please try again. If the problem persists contact the administrato",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "f1331231ce300c1c226bb0db69312abfca233f22fe1821cdd6796c543fb3630c",
        "deprecatedHashes": [
          "cc1914dabd0a07956112731406a95f4be09850070a5c49ac49bb22a897e178b3",
          "041287ee4a8c12a0ec408f8aaf9b81eff793c65dfeff0ae5ea38734eb6eb7358"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324848469Z",
      "vulnerabilities": {
        "vulnerabilityID": "14d3bd59-f5a5-42f8-ab56-377f88e41d09",
        "line": "280",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/main.js",
        "code": "r = confirm(\"You are trying to delete a unread notification, are you sure?\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "4251cc58c8b5c435a6b7fdbc44e4617041b077067ea1c7eef8afcbe363fc9649",
        "deprecatedHashes": [
          "acdadc74b46d0cbe84186a6371ac2b005dafcab53f18af127ff76e53b913517e",
          "618f7db3917447cb7e4b44d51ec96bafcbc620a2fff302a1591c249d6d3b273a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324849469Z",
      "vulnerabilities": {
        "vulnerabilityID": "96159006-4bbe-4f07-9171-4086a22e01ae",
        "line": "346",
        "column": "36",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/main.js",
        "code": "bootbox.alert('A request for this answer was sent to the owner of the database.');",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "ec034cca8ab77435dcd029692c16791d92a1002ce917b001aa9db98f100334af",
        "deprecatedHashes": [
          "23033463f46560f787d857eec641cc577f93d4c58b8aca02b8e7af5380044263",
          "9d030cf9f1c070f2b4c03a81f6501a19995cb501fd9a61bdedd50256bba11981"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324850469Z",
      "vulnerabilities": {
        "vulnerabilityID": "e50f27c4-23d8-4bf7-8009-dd39e42bf07c",
        "line": "348",
        "column": "36",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/main.js",
        "code": "equesting this answer. please try again. If the problem persists contact the database owner.\")",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "0dc390b08e59372aace204c252d437519af8043ad4dfb72d3ce6b4ec6f6d3251",
        "deprecatedHashes": [
          "2175e2587c8f2ee2318454ff7ddaf6ab4eece90013bb3809abb36571e7289032",
          "fedb00ddcaa382a45c245e0b0ff3f2f684857cb4051bb33d1a43c77af20d47a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32490507Z",
      "vulnerabilities": {
        "vulnerabilityID": "c143b75d-d726-4952-94d1-058b716e3321",
        "line": "14",
        "column": "128",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/knockout-3.1.0.js",
        "code": ".addEventListener(c,d,!1)},ha:function(b,c){if(!b||!b.nodeType)throw Error(\"element must be a DOM no",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "f401193aa7c7bfbb2f4a456140e48928941847a9a51468ef5f97c5abf3f72ed5",
        "deprecatedHashes": [
          "9d61a8114beb1b3a322182a285fc46fdae0cf9c47663ec50ca68c021c9fedecb",
          "db3418f7fbb3b39d8cdf328a889befb07da280190b0bf5df5340be2ee6fe6c1f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32490607Z",
      "vulnerabilities": {
        "vulnerabilityID": "7a4c6868-0233-47e2-b362-6423d947e450",
        "line": "27",
        "column": "151",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/knockout-3.1.0.js",
        "code": "Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "d70b4e195b36f5bd67694557e02f4bbb42c8789fcec87564419b7ee856ce0266",
        "deprecatedHashes": [
          "584a04daadf1db4b472e35219940ae15db46286d651739620d668028505ea5a8",
          "76a6481e0027bf9d2502b90eeb3e016b7e8759541fa44b955d19e28b1064e5d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32490707Z",
      "vulnerabilities": {
        "vulnerabilityID": "5753df46-a8a9-4e21-b6ed-1305def9c01a",
        "line": "27",
        "column": "210",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/knockout-3.1.0.js",
        "code": "Math.random())|0).toString(16).substring(1);c[b]=a;return\"\\x3c!--[ko_memo:\"+b+\"]--\\x3e\"},Hb:function",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "e4607a0bc3ab3c12a20d976a738ca46819649862631b80861dc7ef38702a90ce",
        "deprecatedHashes": [
          "ea8c5830969d0ad59d1a3fee61b075505b03ac9a23133c34a0cefef52cb24194",
          "149f1198a3ad0f220e0903fef1ff566e152ebcfde7e39e946804a3e305ea7853"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32490907Z",
      "vulnerabilities": {
        "vulnerabilityID": "caecebc7-1304-4e00-964d-9f44c69925d0",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.min.js",
        "code": "",
        "details": "(1/3) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.\n         \n(2/3) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.\n         \n(3/3) * Possible vulnerability detected: No Log Sensitive Information in console\nThe App logs information. Sensitive information should never be logged. For more information checkout the CWE-532 (https://cwe.mitre.org/data/definitions/532.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "01dbb5cf627670c262296327726020a7ba9b58cd1e8056204313940a50d8c8aa",
        "deprecatedHashes": [
          "e5ef81002a87961e0c200a31326178fc899cdd8c9f949fc7f341f322e33a7ec7",
          "43891705dc56eae82839b034f80abba42f9760d7e38e7be221caf4f2d08eb586"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32491007Z",
      "vulnerabilities": {
        "vulnerabilityID": "f70e7727-5a16-4581-be0c-0986e9413f27",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.min.js",
        "code": "",
        "details": "(1/2) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.\n         \n(2/2) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "01dbb5cf627670c262296327726020a7ba9b58cd1e8056204313940a50d8c8aa",
        "deprecatedHashes": [
          "e5ef81002a87961e0c200a31326178fc899cdd8c9f949fc7f341f322e33a7ec7",
          "43891705dc56eae82839b034f80abba42f9760d7e38e7be221caf4f2d08eb586"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32491317Z",
      "vulnerabilities": {
        "vulnerabilityID": "f41223a5-7121-40c7-9b16-fa71dbc8440f",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.min.js",
        "code": "",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "01dbb5cf627670c262296327726020a7ba9b58cd1e8056204313940a50d8c8aa",
        "deprecatedHashes": [
          "5d82a5d51b37a9b21737a297196907f5796ce89b7c2d2502b27fe7cc3dcf827f",
          "7bee1d3e97e8b17ea7f2dc591ae43484b182753d9ebb9c1822ae9ba97345ff03"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32491617Z",
      "vulnerabilities": {
        "vulnerabilityID": "2f903ca2-c951-4da4-8d71-765379570ea8",
        "line": "68",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/CustomElements.js",
        "code": "window.postMessage(sentinel, \"*\");",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "71510686c7a8fab181db923034046ee078906b3bf01bb3fc7bd796d9cef23c59",
        "deprecatedHashes": [
          "8c394f26203a1394b1cc425114a4add6cfba29a1357b6874f4236956291bfe77",
          "7ebddcf79188c0374d7838bc2ad91d1b890abe93a3e58914017c27ee4a0c16b2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32491717Z",
      "vulnerabilities": {
        "vulnerabilityID": "ba45dd93-323c-4b5c-b265-4b5a9ae461e4",
        "line": "57",
        "column": "10",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/CustomElements.js",
        "code": "window.addEventListener(\"message\", function(e) {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "2eed85e2c4343eb2ae7ecbe13491fd357eed4db00c5ab083cf9d941a3e3c5318",
        "deprecatedHashes": [
          "43490fcaf7173c898fb041e9f251b98565eebf5ed1b81f439892a7189c1754bc",
          "6d65e81d214daee244c07cbe7e634500dd10f6bf10ffa3096d26a0a92412567f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32491807Z",
      "vulnerabilities": {
        "vulnerabilityID": "152c661b-cabc-449c-bc05-cd350e483bb5",
        "line": "16",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/CustomElements.js",
        "code": "this.name = \"__st\" + (Math.random() * 1e9 \u003e\u003e\u003e 0) + (counter++ + \"__\");",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "fd551090a5ddca065cc775782001d84ac4c96297d4886f06ac4c2c585f108763",
        "deprecatedHashes": [
          "f619dd3219c1f74e6002a7ed3eaa971edea4f24c5b1353c0799d1bc55a565835",
          "8fa43a9f9be5e533b4ed7d2fc37471c444a48695d010d529d99671ca9004e7a9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32491917Z",
      "vulnerabilities": {
        "vulnerabilityID": "a6065dbb-b277-4394-80af-21f5f4a59a0a",
        "line": "56",
        "column": "26",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/CustomElements.js",
        "code": "var sentinel = String(Math.random());",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "a46fd5c0db68a48938961ab6efd71a549a433ef1900b833205111099caa3059d",
        "deprecatedHashes": [
          "cf6d0bb0088ebf69a6812732b9062e9bc510d9262c4065a92cc76c8c4ef08bd4",
          "981f6e301bfe3eeb76813e66a26ea70577b5e3bf29e10aa95d849946cbe8e8c5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32492827Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b1d11d3-79d0-472f-88bc-79655fc4b616",
        "line": "451",
        "column": "24",
        "confidence": "HIGH",
        "file": "emif/fingerprint/static/js/jquery.tabmanager.js",
        "code": "bootbox.confirm(\"Are you sure you want to remove this tab ?\", function(confirmation){",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "455972f5bd1bbb1a158111072248e7453facd28ca6aa9ac5413152a986b5a3f0",
        "deprecatedHashes": [
          "be5547f34fbb3c790456d5f6347292aa174796d050549149850f3f3586100805",
          "cb9d7fd00a00da3cf098abf228bdaa13f0fcdcbe1a9f547a5edf521aaf2d8108"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32492927Z",
      "vulnerabilities": {
        "vulnerabilityID": "9b133e8f-ba7c-4bf4-84df-aee580250a7e",
        "line": "456",
        "column": "35",
        "confidence": "HIGH",
        "file": "emif/fingerprint/static/js/jquery.tabmanager.js",
        "code": "var confirmation = confirm(\"Are you sure you want to remove this tab ?\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "1ee4ee158aaf308fea43668e8832b78dc28291771e804f3a34f7cb46d6ab46c7",
        "deprecatedHashes": [
          "63aeee2331a7f2a1b1d5a95d0ea9fcb1008a31067a6223134ac3f351a67fedbb",
          "2f4d4f0a0b0f69fb5dbd4a2a464e8100928f9967ed21b4c9e51bc7730ebc478b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32495127Z",
      "vulnerabilities": {
        "vulnerabilityID": "dbd6cf3a-426b-4434-a05c-7792215e5f74",
        "line": "68",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.js",
        "code": "window.postMessage(sentinel, \"*\");",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "dd84d1f79139d3397e86712d10ea39ecad2004e78064a2320bf2deb60b4f8f20",
        "deprecatedHashes": [
          "3724fe8a4bc1796a4713f0c5e6a6974ba36546141b832d7dd6bbff94bcfce3bf",
          "5257b0b025307ea4dd3b592e45d8b258698ee6682dc69dd351a126bfaaccf3d1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32495217Z",
      "vulnerabilities": {
        "vulnerabilityID": "3dcb60e2-d202-48d1-9ecf-65c532e3c790",
        "line": "57",
        "column": "10",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.js",
        "code": "window.addEventListener(\"message\", function(e) {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "8fa8f917cb35853a0106370c8a2950f822157db2d4ef104d7000b89d2e91b909",
        "deprecatedHashes": [
          "47b2dba88da2e9c765d014e36c3faaf885367a719c52daca1f48cc192581b48c",
          "2debf3fd044a06489086562025c424d7ee162c60c90a1d0df66a53590d5211b7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32495317Z",
      "vulnerabilities": {
        "vulnerabilityID": "51984360-0ce9-452e-ab9e-cdf9bb1fc9f2",
        "line": "16",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.js",
        "code": "this.name = \"__st\" + (Math.random() * 1e9 \u003e\u003e\u003e 0) + (counter++ + \"__\");",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "55dda5bae891beced5b6e4d7fb943a9dde7763f406537c33c820122657da07f1",
        "deprecatedHashes": [
          "d455dbd8f09e06ef572ab93d1ce26858619fbe94a20fe309ab9a048169b0c3d2",
          "a71e30e51863a9c0797e68b551309be1f1ec8bef5114a190db951bfb3cd8e182"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32495427Z",
      "vulnerabilities": {
        "vulnerabilityID": "149dbc4b-6387-48dd-997c-87fc6a12b9b7",
        "line": "56",
        "column": "26",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.js",
        "code": "var sentinel = String(Math.random());",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "25e22f8552752a7e80b9f04614440a175633cc65a270389b482b5a800138e429",
        "deprecatedHashes": [
          "21afec599c987cae7df001a203648f229b9524d16ed920d897d4a464d58609dc",
          "ee659c4600a8671fead2c88587ee15da28d06c14c163c4de7cbbe0662a0aae66"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32495527Z",
      "vulnerabilities": {
        "vulnerabilityID": "f871ae14-e406-4523-9334-8e136f0d31a6",
        "line": "542",
        "column": "21",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/HTMLImports.js",
        "code": "url += \"?\" + Math.random();",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "41ef609a67ce4e5419f12d0d8cb8ba5afe892cb78786830f9c5fa6845b87a455",
        "deprecatedHashes": [
          "2e9e4ed3e35cf4702b0236883d91f784b6bc2516822f93193bd214e1f2e82dc0",
          "7695b46c87f4cc1a3c2c74c6b59e91b2656fbeef198228777788a8e53b3833e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32496827Z",
      "vulnerabilities": {
        "vulnerabilityID": "78c17576-6a49-47ac-890e-5c40d1572c5f",
        "line": "11",
        "column": "10753",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.min.js",
        "code": ".postMessage(w,\"*\")}}var g=!1,b=[],y=0;a.prototype={observe:function(e,t){if(e=n(e),!t.childList\u0026\u0026!t",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "680e28ba21a242e07fd53b2e24db7ebdedfa4e6bf382e7d7da14c6298aaf174f",
        "deprecatedHashes": [
          "2c526c5ba78235ad32be997298a26e2bd56e67d9e3a699002232af971bc70357",
          "72d7f0428d044fbd00fb3f85c91d50a5727e9107720f2774b0237b03f4cdbdcc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32496917Z",
      "vulnerabilities": {
        "vulnerabilityID": "a6384104-ed67-437d-ab19-96a6c3006cbf",
        "line": "11",
        "column": "10624",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.min.js",
        "code": ".addEventListener(\"message\",function(e){if(e.data===w){var t=_;_=[],t.forEach(function(e){e()})}}),m",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "a8170418f427247c25ea64123709a0af2a68d996ee452c58a40f17ff6a62fbd1",
        "deprecatedHashes": [
          "fccccd7d4e594cead56cd5fe0047b81c9eac25e7922c858d23e0f72f2e6a5c63",
          "d1e1c599fcbaa3fb8159282979be1a01b70693645269e1587c8d7b87c215f654"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32497037Z",
      "vulnerabilities": {
        "vulnerabilityID": "3dec39e5-0002-4a41-a7b8-ec768d9f2e67",
        "line": "11",
        "column": "8603",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.min.js",
        "code": "Math.random()\u003e\u003e\u003e0)+(t++ +\"__\")};n.prototype={set:function(t,n){var r=t[this.name];return r\u0026\u0026r[0]===t",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "d26ee41cc2cff96269e6a53d79dbcc7770e8d6f990b5c9a84ff34b7e2ff55fc6",
        "deprecatedHashes": [
          "815f5d767e0864693cd93e4bec082bcfd0f65040842253a5d1697590cd659a93",
          "de296657e905afabc3a1e847192ef0f1bc4229ba0c6c12f8ddfc3d2d0bc44b9c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32497127Z",
      "vulnerabilities": {
        "vulnerabilityID": "a7931d97-3b75-45a5-a815-c8b3ec26abdc",
        "line": "11",
        "column": "10603",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.min.js",
        "code": "Math.random());window.addEventListener(\"message\",function(e){if(e.data===w){var t=_;_=[],t.forEach(f",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "7ca6de46ecf4baa8d88a8f32cc86fee6d014ee9823d7604efd1df453631b505b",
        "deprecatedHashes": [
          "a6725827eee5a7ccd5b249d65234a6d1f59727779edc11aac440ea0c5072daac",
          "a4136f564fe34dd26b6a9de74d55c682dce9b89460a5cdec55201cf292e8bccd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32497227Z",
      "vulnerabilities": {
        "vulnerabilityID": "4fb5cc76-4048-429b-84d8-aadb76c595f5",
        "line": "11",
        "column": "17013",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.min.js",
        "code": "Math.random()),i.open(\"GET\",n,t.async),i.addEventListener(\"readystatechange\",function(e){if(4===i.re",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "ec75203a75b0f9295a1891f554dabc95e86205fb4a75fb35049586c219e19ce2",
        "deprecatedHashes": [
          "e1e7b6e7de1bab3464be98547ed61634537749c0332578e4c05b61b426fd5542",
          "56a7f8c9f17627df583556681c37ea2584781c0d67d4df37712ade7c5198ad6f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32497617Z",
      "vulnerabilities": {
        "vulnerabilityID": "6bb94959-bfa5-497f-9ac1-69c3c977668d",
        "line": "23",
        "column": "26",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/lib/sizzle/sizzle.js",
        "code": "expando = ( \"sizcache\" + Math.random() ).replace( \".\", \"\" ),",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "444cfae08fe6af6957f5cdc82aa6ed37b91c1136adcd81a31a86d6feaf326549",
        "deprecatedHashes": [
          "584c7efcc745541ab416cc7a8a5bce3be1da495685ac7d17549284940d486a3e",
          "20e1228094f09d01509874920488bc5cd34048c38e3907f1bbdc6f51b9260401"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32497917Z",
      "vulnerabilities": {
        "vulnerabilityID": "9565d3ee-c0f6-41aa-b031-cdf11eae167f",
        "line": "67",
        "column": "2",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.fixedColumns.js",
        "code": "alert( \"FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "99ab598058d53f2d465f3a3824fa234157cd465168a4b1131f41871d3cca3a3c",
        "deprecatedHashes": [
          "006e21f915826d82194a445387e43bdb24a60aa8b076933caa8d388bd06b8e53",
          "5e51ec9554e9fa5c200e1dbf5d3ee0dbb13d77ff5e7a82cf5a15ae3330b302f4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32498007Z",
      "vulnerabilities": {
        "vulnerabilityID": "5e9346a3-b0e6-40e1-b66a-ab28aa7619f0",
        "line": "442",
        "column": "3",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.fixedColumns.js",
        "code": "alert( \"FixedColumns \"+FixedColumns.VERSION+\" required DataTables 1.8.0 or later. \"+",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "db260db99286ecb613a383d82eb726cd8fab811e1fc390fb0bca92a8b9af8109",
        "deprecatedHashes": [
          "f043a45493c3a9cc081a8d0342191fe726df98431592089cbf354397fb5c42b9",
          "0fd461b8f837d2d0bebc642d0540ea1727258828bf03fea32dc8e0bcacb55438"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32498107Z",
      "vulnerabilities": {
        "vulnerabilityID": "1a5984a0-51d4-4da4-b9fa-c0db9f99c557",
        "line": "1316",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.fixedColumns.js",
        "code": "*\t            alert( \"FixedColumns redraw\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "8b48a056b4e92580639354aecfbc3cc1b77b64abc98f968456da48892ecd9be4",
        "deprecatedHashes": [
          "202affd66558aaf1f8c02bb0628c1b6aee24d6c7a06a3fb709af4828044d4548",
          "0ca721196b2146a0654713272c6393d2f7416146e7b75f7d7567481fd5a9e492"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32498197Z",
      "vulnerabilities": {
        "vulnerabilityID": "5bbb85ce-a76a-4930-abc7-561e109d5b1f",
        "line": "11",
        "column": "16274",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/ShadowDOM.min.js",
        "code": ".addEventListener(t,i,!1),r[e]={value:n,wrapped:i}}}}var W,I=e.forwardMethodsToWrapper,A=e.getTreeSc",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "36653830d4304e25041999818e6ca628cae69e26afaf23ebfa1edb79d88bce17",
        "deprecatedHashes": [
          "740bab14dc0635ef2ddebff3811cc8af7a7dd0155dfe402900b394ce0048359f",
          "f19208189a53f535375bca9dad83fc582a4086e0ec5122d9b3e4ea1a7c35db5b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32498297Z",
      "vulnerabilities": {
        "vulnerabilityID": "9bd01c56-b16f-4626-8ac9-a4da4b41d64d",
        "line": "11",
        "column": "121",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/ShadowDOM.min.js",
        "code": "Math.random()\u003e\u003e\u003e0)+(t++ +\"__\")};n.prototype={set:function(t,n){var r=t[this.name];return r\u0026\u0026r[0]===t",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "1acc199d2dc7f0ff28755ad2a0540b5ddf8532f40c4cbbab47fd80d106e0f294",
        "deprecatedHashes": [
          "01091ba9b1cef77251912ffa52d2330e6bb78646cbdbecbe056c794772eae7dd",
          "a6899eae48426a7c5ccf4be01b106c3156f6bce4e5626b3e90e0dbd8217e7f2a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32498597Z",
      "vulnerabilities": {
        "vulnerabilityID": "e65168aa-0477-4b6d-b377-73297781f885",
        "line": "144",
        "column": "52",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/bootstrap.js",
        "code": "if (!data) $this.data('bs.alert', (data = new Alert(this)))",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "15561028bd07ab0c5e2f3c528e3d6f99286f0e944ac71afa44d23ac9dd3fdc49",
        "deprecatedHashes": [
          "db787d2b561efb7762a9d7175bf97367302bb8635abcf1408a438675537dd765",
          "079c7b8494d20b6cf21503014e8909478034d50a8958c43e50ffd9b4d6a68c28"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324986971Z",
      "vulnerabilities": {
        "vulnerabilityID": "8689ab9b-545d-4600-aa78-888f61dfbb62",
        "line": "636",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.js",
        "code": "window.postMessage(sentinel, \"*\");",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "1e98c50000751e4928b6dc6558ed24cf0d2118b831938c4f82cdc8137cc00c2e",
        "deprecatedHashes": [
          "62deac6a7a195d817e2e0d47ec70ea557eed3d4e56b3c362af1c525736bc241d",
          "24545f9dfaa5f45cee4dedf6a8511926031b4af843599a97f203861154e6f260"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324987971Z",
      "vulnerabilities": {
        "vulnerabilityID": "88761105-7740-44c3-b5d3-063fcdd17ba6",
        "line": "625",
        "column": "10",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.js",
        "code": "window.addEventListener(\"message\", function(e) {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "795ecfe27fb5a2eca1bca9102323f0dee586a6f3d20ef409edcf9ba294777274",
        "deprecatedHashes": [
          "e0d125259394fc05bc9491e0f5dfb32f37c7509aed26381da0c3363eed716206",
          "ae0a3781d1e9d5b5bc6fd0a027a60b1c772722d9e65eaaf06edada6fcf00bd37"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324988971Z",
      "vulnerabilities": {
        "vulnerabilityID": "0da64e3f-e5b9-4f74-a89d-642d99604e97",
        "line": "2290",
        "column": "10",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.js",
        "code": "window.addEventListener(\"DOMContentLoaded\", function() {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "cf72aee0f10073a646cdcb410faaeac732442c11663df7b03abd185e3609e217",
        "deprecatedHashes": [
          "8802efc204f2c2c069efbb6aed9622bfb6114df714a794b5ece47e4e908d61de",
          "92740e2d41db729a550d7ede6c37ffe4c4865b00215a772cce7cf8730d9f28e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324989971Z",
      "vulnerabilities": {
        "vulnerabilityID": "838b8840-b449-401a-abca-742c15b65f07",
        "line": "584",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.js",
        "code": "this.name = \"__st\" + (Math.random() * 1e9 \u003e\u003e\u003e 0) + (counter++ + \"__\");",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "31fa510c11f6d2387ab2d92e189fd7ba4cc2663143f6910477a198be508cfb0a",
        "deprecatedHashes": [
          "563bb3542cd482022a7a2775d1772f2b00f346a6a665507fb4136f0051b47616",
          "a937dbf934aec89bd12f65b3a6bad1f9b6de101ffdbf2398be13b57249742e3f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324990871Z",
      "vulnerabilities": {
        "vulnerabilityID": "4534afbb-fa9f-4fb3-bef2-80f867580c92",
        "line": "624",
        "column": "26",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.js",
        "code": "var sentinel = String(Math.random());",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "cbab27c54607c1b4094d61684689b3f7280bb302b2474aac7b4f373b7a32d299",
        "deprecatedHashes": [
          "fadda18794b2e61dc60f579fd528a60a29640da554a892cba1bc53aff9aaef4a",
          "8cce5b7b12994702697917b62391e57f49085b9ef14c79a25c4da9d310435082"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324991871Z",
      "vulnerabilities": {
        "vulnerabilityID": "babd8087-55fc-47a2-a0d6-2fc8bbce1846",
        "line": "1110",
        "column": "21",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.js",
        "code": "url += \"?\" + Math.random();",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "2fa00cfe9f3e28dd0a0f59973b4579d3daf6de4de7d452ec11e93f08369e2b47",
        "deprecatedHashes": [
          "5439467e82847bcea9629929ae7228918f5e589eed35f43dfa6d32668ef7d7fd",
          "653ef783ed57259c4f1daf940d6cae0feba34b63523ca708e10d9d19bf99c0d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325001971Z",
      "vulnerabilities": {
        "vulnerabilityID": "a1759fb3-0fa6-4d56-a512-bc2630e0df31",
        "line": "4",
        "column": "7154",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/jquery-1.10.2.js",
        "code": ".addEventListener(\"DOMContentLoaded\",q,!1),e.addEventListener(\"load\",q,!1);else{a.attachEvent(\"onrea",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "97dfdc8b4059c0e54ef73b373d586cda55011dee767063d9b2aceed08b1b6c35",
        "deprecatedHashes": [
          "a62bef29c47698b316232ac04377592266f83455c0f728e04349bce7f25d496c",
          "f0540dca5309b199ffdc920d29a44a2ad7e8a9c48c2c041530a2806ee1e8c187"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325002971Z",
      "vulnerabilities": {
        "vulnerabilityID": "5135f5e5-c13b-4d92-b064-487a654659e1",
        "line": "5",
        "column": "19787",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/jquery-1.10.2.js",
        "code": ".addEventListener(e,r,!0)},teardown:function(){0===--n\u0026\u0026a.removeEventListener(e,r,!0)}}}),x.fn.exten",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "56ae00cd99964a2e820d82529bf58cfe10252220e8c9ff3e68edd3c07ba5aa9a",
        "deprecatedHashes": [
          "fad2cc766d812a720e7800be50d92c3fcce3681b074339242ee58a0c8ea7a855",
          "34829817f60fe1c04e1885148cdd5a139bf56eb6a25a83f731a55e9a0e280629"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325003971Z",
      "vulnerabilities": {
        "vulnerabilityID": "2862c222-c361-4dd4-a1e1-2041c5d23ef9",
        "line": "4",
        "column": "2983",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/jquery-1.10.2.js",
        "code": "Math.random()).replace(/\\D/g,\"\"),noConflict:function(t){return e.$===x\u0026\u0026(e.$=u),t\u0026\u0026e.jQuery===x\u0026\u0026(e.",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "3a87fcbe125c92cd952dfeab8be8bd1bca6703729fe8aa4bb9a301ce526c8f27",
        "deprecatedHashes": [
          "a47f4c381697369c9ca9099d0b5f94a3debcd24839f4350d2a6366ed6b77ed5a",
          "70ff1b9f7446e188406ef58856dbba900474be2fa2748076e02892ea5ebac95a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325005071Z",
      "vulnerabilities": {
        "vulnerabilityID": "74ddc87a-b766-4bad-a689-c1e5f82e1066",
        "line": "4",
        "column": "23680",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/jquery-1.10.2.js",
        "code": "Math.random()||.1;for(w\u0026\u0026(u=l!==f\u0026\u0026l,i=n);null!=(h=N[b]);b++){if(a\u0026\u0026h){g=0;while(m=e[g++])if(m(h,l,c",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "165d0c50b3a469e28c4fbebd43d0b23b157297eca6cb9b5e339d1aeb461d0134",
        "deprecatedHashes": [
          "b27f435cbad9872e31412523b5aba388817f37e503cc87dc2f822e33f23be8da",
          "4a97932988a68888fa849e86213568fa09d1705bbd36a909f2e3599ffdb12229"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325006971Z",
      "vulnerabilities": {
        "vulnerabilityID": "e97f18f4-3b11-43e5-9638-b5209ec1fed2",
        "line": "2",
        "column": "9977",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/jquery.min.js",
        "code": ".addEventListener(\"DOMContentLoaded\",B,!1),a.addEventListener(\"load\",e.ready,!1);else if(c.attachEve",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "f4c87d3936edbe7feacd943e020216756b8afb8c713b32750b8fee16a1717ccb",
        "deprecatedHashes": [
          "7d6c1145ddf23d53b893a9ca6fce1643e07bfde80b74758dbd2319857f37a247",
          "853b28270e3e669c77d9cf5b2ec6d44703b2b3b1c14f1dee3f4866f57402a033"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325007971Z",
      "vulnerabilities": {
        "vulnerabilityID": "84b15756-6874-4ad5-8a89-c1bd9eb86071",
        "line": "3",
        "column": "9124",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/jquery.min.js",
        "code": ".addEventListener(a,e,!0)},teardown:function(){--d===0\u0026\u0026c.removeEventListener(a,e,!0)}}}),f.fn.exten",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "d2fc298b1dab16b1cfb5c9a37463aecf5ccd8489d23fc4cd96666353c444fb43",
        "deprecatedHashes": [
          "7e1e214129fed61f7a9be3dcc0decee3bb28d713718ee0f31b4e06524fd030f7",
          "6389ed2e4ef9e162f876b7b84a0cd9ff58d98bf1f18cd301ed575ca23d6145af"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325008971Z",
      "vulnerabilities": {
        "vulnerabilityID": "56fa3537-e7c2-4243-b075-dedab59bec14",
        "line": "2",
        "column": "21083",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/jquery.min.js",
        "code": "Math.random()).replace(/\\D/g,\"\"),noData:{embed:!0,object:\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "eaf73097ab4550db042359a5d58980b0e6b1569235595574acfdd9b051af0b2f",
        "deprecatedHashes": [
          "bdd603008fd7befa5dbc28650f5e8b03221c6fb3dcd56f41b153d83ea9645b7e",
          "7a8f8144443d8c3edc066047d60383c36817b24938336786a7460ee8b9f63877"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325010071Z",
      "vulnerabilities": {
        "vulnerabilityID": "4ea8533d-f0e6-4da0-b5e1-7165f258b656",
        "line": "3",
        "column": "12086",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/jquery.min.js",
        "code": "Math.random()+\"\").replace(\".\",\"\"),e=0,g=Object.prototype.toString,h=!1,i=!0,j=/\\\\/g,k=/\\r\\n/g,l=/\\W/",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "6b9c2509f01afbbdae5a3021b1158bcaf4f942c5816627dcd7e42bd763e7072b",
        "deprecatedHashes": [
          "6039a4d8498004628cb37ec6ff978530fde39ffb7373a4e4bafd677a2c056548",
          "83669e9cecbc277469eed6b2b4324e8554b310dbf3056db912a3910673a5fdaf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325012071Z",
      "vulnerabilities": {
        "vulnerabilityID": "c7985c53-406a-4029-83a8-8b1ec5e0e710",
        "line": "1952",
        "column": "7",
        "confidence": "MEDIUM",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "flash.addEventListener('mouseOver', function(client) {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "1df855b30de33d90c242c30013f0ac07a9fe79583a87d9e37873bf7ee4f90e25",
        "deprecatedHashes": [
          "47d7cca2e0a27781028f22b9d2fbc04f609e48c593c79eb1d7b519c380f48e80",
          "613c5cfeaaec1cc7bdef8fa0e5321f8eca321f3e0cc3a2d957927af15aff876b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325012971Z",
      "vulnerabilities": {
        "vulnerabilityID": "2dcc03e2-5a91-4b3e-9e74-a65082462f12",
        "line": "465",
        "column": "2",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "alert( \"Warning: TableTools must be initialised with the keyword 'new'\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "7596f633d5339e0dc00a3f155aac14241a302641d93038ccad53c6ffbbb2c780",
        "deprecatedHashes": [
          "53cc8fa3d272c488cddf4067c82570059436256aa666e9d5efec94b1aa892f38",
          "1409e1ac35884d094c2049dc03c3aac6a34bab2ca6d2e83c906fe6dc166423d2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325013971Z",
      "vulnerabilities": {
        "vulnerabilityID": "20cdaf7e-09a0-463a-891f-746d6ee98ba5",
        "line": "1240",
        "column": "5",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "alert( \"TableTools: Warning - unknown button type: \"+buttonSet[i] );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "e063360d7bc09cf1afc923afe0dc2a4a940e95d44722d2242fffe7445c351059",
        "deprecatedHashes": [
          "8912eb18aabcf7c2379c03a4cd7480b6a427605b2f9c4f0b177e6ff8b067751a",
          "75d5fe15901cc44d07e047e61c61c804f2c612b0e307dcfa7eec344a2f5c8b17"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325014971Z",
      "vulnerabilities": {
        "vulnerabilityID": "4494e548-6861-471f-b20b-61c3a01ec669",
        "line": "1249",
        "column": "5",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "alert( \"TableTools: Warning - unknown button type: \"+buttonSet[i].sExtends );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "7bd19d77038a680fa56848f3ee8a496feea08cbc36924dbe1dc7a2fe9eee9955",
        "deprecatedHashes": [
          "3a3d7ba5576c7e2bc8d6995919bf56c539af636238cfc3e574c1ee00a859c277",
          "90269bef816acccf0338fd1045ee159f859c48528cd542e0d04ff738ec057627"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325015971Z",
      "vulnerabilities": {
        "vulnerabilityID": "a80439cc-899b-487a-9575-6251741587c8",
        "line": "2983",
        "column": "5",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "alert( \"Error detected when sending table data to server\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "ef04f210a9fea85be4b00673c5a377ad68a3fe5961cd67610b2c7a03979d4578",
        "deprecatedHashes": [
          "ec66caef9e558c4738a928a1df616daeecad074f25708c0e9118f7075fb0ad3d",
          "f9b11f29bfa20c00de05cf97948b34c5e589808f2876660fcc401013a036f188"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325016971Z",
      "vulnerabilities": {
        "vulnerabilityID": "b466ab3a-fc95-4735-9bfb-2d7beec6c34e",
        "line": "2988",
        "column": "3",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "alert( 'Ajax complete' );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "af45e495d1d46eb7891bb5dabc0cd52f2682660aecc8914c230d78f65d87ab0a",
        "deprecatedHashes": [
          "13de6c8cbeb9b652d07a91ed4a48b3669aacc0571bdf8827aa7d417a10339c49",
          "2bbf0bb8f4b6be497f852d1dbe76aa093098ab87725e35c6205f724e2caaac96"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325018071Z",
      "vulnerabilities": {
        "vulnerabilityID": "6be4556c-05e2-4338-81ea-a14d9ebf1c4d",
        "line": "3161",
        "column": "1",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "alert( \"Warning: TableTools requires DataTables 1.9.0 or newer - www.datatables.net/download\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "f1ddf7a6a1222034878d632e7bec5339e52819493fcb76bfddadfa3dd956543a",
        "deprecatedHashes": [
          "d02c8f9b602ba28c9b0691f32d89029715d0fad95d41604d690927d7977ca39e",
          "2507acf24fd28fe6e95449117adfd67c9caa43d9d8f62248d873b371b04b33d7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325019071Z",
      "vulnerabilities": {
        "vulnerabilityID": "b5cb7ec0-7980-4250-bec1-a70319b761f4",
        "line": "3191",
        "column": "1",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/dataTables.tableTools.js",
        "code": "alert( \"Warning: TableTools 2 requires DataTables 1.9.0 or newer - www.datatables.net/download\");",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "5b186b677bc2c12108495464ec59091b6fe49e40c6e487478ad410070fd06f55",
        "deprecatedHashes": [
          "bcdd3489dc1effce68b0c114c5972231d97810f649dd21884c9c4d3812966adb",
          "b3e9e1053ff5ad938e59021d61368d1d74fe09cce46f185ac31c3a58ba22c99e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325021171Z",
      "vulnerabilities": {
        "vulnerabilityID": "82848443-7d2e-4250-867a-f07eafb1d751",
        "line": "14",
        "column": "25658",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": ".postMessage(g,\"*\")}}var b=!1,y=[],E=0;a.prototype={observe:function(e,t){if(e=n(e),!t.childList\u0026\u0026!t",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "f7e82dd998de00b12c338729259cf033fd42be9d0dc2af19edd7007f36a78fd3",
        "deprecatedHashes": [
          "06fcef3d3f8129203680cc0279a056cbef000e19cfa42f9d5c13b4daa6ae4554",
          "8bacf6747af5d3595d6252f8ed500850581d38aa3bd8a9a569d6117ba7bf5c5d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325022171Z",
      "vulnerabilities": {
        "vulnerabilityID": "bd180182-fe14-4808-ba16-39c9e2017477",
        "line": "11",
        "column": "17049",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": ".addEventListener(t,i,!1),r[e]={value:n,wrapped:i}}}}var P,k=e.forwardMethodsToWrapper,A=e.getTreeSc",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "5a7f7998b1ca0d47b29ff38c6dca6f0670221e0cddc19c8ad06416d52122da60",
        "deprecatedHashes": [
          "926fc06ad21475dce1bde7eb30e43485734275ca89f3b0d248401b8b08675d0a",
          "af878c3cee02f6241208e3ebac77c28d205a11b010eb3910bdd6a210054b8227"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325023171Z",
      "vulnerabilities": {
        "vulnerabilityID": "b1735f78-6ba3-44f2-a413-d5dc21ba0c96",
        "line": "14",
        "column": "14849",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": ".addEventListener(\"DOMContentLoaded\",function(){e.urlResolver;if(window.HTMLImports\u0026\u0026!HTMLImports.us",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "21efc10f446a3d238c631e0cf40a3cc15fd1cd20aef45442976b13b7a7d01442",
        "deprecatedHashes": [
          "9de9acd0c21a35f492fe0626374bfdc76f7478724b281c4d242b976c4a79a2c7",
          "786694c73f3b97b515d9aadb55c221c59fa6e586909f8a7a5fcd579b1e09a8a1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325024071Z",
      "vulnerabilities": {
        "vulnerabilityID": "4d6f49db-65a0-488d-9486-ce9f8964c763",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": "",
        "details": "(1/3) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.\n         \n(2/3) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.\n         \n(3/3) * Possible vulnerability detected: No Log Sensitive Information in console\nThe App logs information. Sensitive information should never be logged. For more information checkout the CWE-532 (https://cwe.mitre.org/data/definitions/532.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "3372dfb85e70b819cc52991e47486efe8ea4c4936340eb5e98dd862665dd956a",
        "deprecatedHashes": [
          "0550bcb47a84ee5ed64b3b6095fad2f3eff70319ee38262a33833a777822a434",
          "dddae2af4a12de88c8c5605134f02c557e20934a677b275163ceab5d0f506ae8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325025071Z",
      "vulnerabilities": {
        "vulnerabilityID": "d2ab69c8-7df4-4f48-ad06-d8ecf4cc8f13",
        "line": "11",
        "column": "896",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": "Math.random()\u003e\u003e\u003e0)+(t++ +\"__\")};n.prototype={set:function(t,n){var r=t[this.name];return r\u0026\u0026r[0]===t",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "ce1098f511d3bae8aa3c3da9b87f281def23de54f40a5349d214a6c3a6189039",
        "deprecatedHashes": [
          "0524c18cae8c3be15d8e8e6bae23e6c2e2bdd2609bc5a8f93482fed14c6ce775",
          "974ba1720ff14fa51c0348c39cd13dd82a5549771d34f832628a63d272a93627"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325026171Z",
      "vulnerabilities": {
        "vulnerabilityID": "fc29c885-3181-4644-bfd3-bf13f64493d1",
        "line": "14",
        "column": "25508",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": "Math.random());window.addEventListener(\"message\",function(e){if(e.data===g){var t=v;v=[],t.forEach(f",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "ebbd3f2685fa13bbd7c8902f629fc386c2b2846d34c80e0f5321faabb6a3c831",
        "deprecatedHashes": [
          "b9f8b2eaca072e370cc999bf7596dc753c2762e0168dbc5220053d046d1f20f6",
          "439041ac93aa4ea03207f74082b33f5dd6e10652d7ed2fa69d1fc1c0da186719"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325027171Z",
      "vulnerabilities": {
        "vulnerabilityID": "9670d7be-6375-4c50-84fb-30e358a6247e",
        "line": "14",
        "column": "31918",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": "Math.random()),i.open(\"GET\",n,t.async),i.addEventListener(\"readystatechange\",function(e){",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "1915fcee04b19bb8fb60cd79887ef1737d407763f802b9e686c66c067fef9d1d",
        "deprecatedHashes": [
          "2fc81f7a005bd546ab3adeb7edc7fa7a09d051e0ee767a1eefedfa63ee2477c9",
          "858fbecf66422af8d3157b5d5f01a9cfbdab155acf743ddb0d888f4cb2a7c3a2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325034371Z",
      "vulnerabilities": {
        "vulnerabilityID": "b5b6d91a-4f87-4b55-b2ee-27f5035b62da",
        "line": "1",
        "column": "4456",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": ".addEventListener(n,this[o]=u,u.$=e),u._=t}function i(){var t,e=new RegExp(\"^__on([^.]+)\"+Go.requote",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "8db2403dfa86a3e39e22550d264802a20b8df9e258dbc75023606438bc63bfeb",
        "deprecatedHashes": [
          "bf7e00cf5574a5df6d0178aaeb97afa58b09dd69173e16373ee822d90ef082d6",
          "f3eeea8e1b91237014f05d461048d87d0f8e673a9b94faaa82f549aa91ea1ec2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325035371Z",
      "vulnerabilities": {
        "vulnerabilityID": "d6d2db4c-f438-44b7-9113-cc8363d40def",
        "line": "2",
        "column": "14955",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "Math.random()-.5,n.point.y+=Math.random()-.5);var s=t*e[n.point.index];n.charge+=n.pointCharge=s,r+=",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "fd3c52474eb44c529d2029eff15d4faef6463eb54fc4b41c0660853d407c6a37",
        "deprecatedHashes": [
          "fffd4c530f3a6046fb5439204bc0a567a643711b7604fade98cd92e2b2f2c27f",
          "1d45f3b9674c4e93e379cfb980e8eb03917cdf6004b79f399b570c34f4ba43b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325036271Z",
      "vulnerabilities": {
        "vulnerabilityID": "54003e75-e942-46a5-ae57-3fe2361615c9",
        "line": "2",
        "column": "14983",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "Math.random()-.5);var s=t*e[n.point.index];n.charge+=n.pointCharge=s,r+=s*n.point.x,u+=s*n.point.y}n",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "ebe5dcec4d9149e4db219386161c80d94daf093443491b181976e2b67dbcd29c",
        "deprecatedHashes": [
          "958567546c9198d7ef51f0e5bda89a133eb1020663dbc6521501662244097143",
          "1fb649088bed15ed4b0b081363091a8f49eb7c3c59e2cd901e4af584f95e8284"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325037271Z",
      "vulnerabilities": {
        "vulnerabilityID": "df6579d2-1fc9-4b1b-8c0c-52ecdc80b937",
        "line": "3",
        "column": "3465",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "Math.random()*r--,t=n[r],n[r]=n[e],n[e]=t;return n},Go.permute=function(n,t){for(var e=t.length,r=ne",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "87d6cdce3cf5913e80bbf51011a496d3d2efd7c0992e51e24946aad274d371a7",
        "deprecatedHashes": [
          "9e838f06ad6b8b7825542b60437cd33a7d7ecc363a0133ecd63beae411e29817",
          "0f4f9c9b27cd8179c45fd388c770dee81d7b71fe8d3da2a47463da8cbbe1393a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325038271Z",
      "vulnerabilities": {
        "vulnerabilityID": "7c02fad7-1796-45b0-a170-7a79643dfbbd",
        "line": "4",
        "column": "19306",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "Math.random()*r}var t,e,r,c=m.length,l=y.length,p=s[0],v=s[1];for(t=0;c\u003et;++t)(r=m[t]).index=t,r.wei",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "88a371ad32bf589a81794e9df5b1304d9f3212034a397fe473122bba8d772adc",
        "deprecatedHashes": [
          "19f45632f3f7c4da5ee0434a2daf11472b8d53d8da5b2c045fe423fe80b6b405",
          "08dc21b4a1611d37617a831ae99c223c5bad00de6e42faf271c47d4387c0c7c6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325039171Z",
      "vulnerabilities": {
        "vulnerabilityID": "4aec7fe6-1137-4d15-902c-e165a6b57c5d",
        "line": "4",
        "column": "29941",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "Math.random()-1,r=2*Math.random()-1,u=e*e+r*r;while(!u||u\u003e1);return n+t*e*Math.sqrt(-2*Math.log(u)/u",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "d4e569af9f26ae6290a583186fa7f2396f1ce82177b66456e0cbc9c5080c21c1",
        "deprecatedHashes": [
          "21fdfb6a89189e0e967cdcb7c0c38d473b1661d5cfa99aaa859472dba23a1396",
          "b6ef1bcc481cec5593458a9fc8a3a8460176b293d113a222cce5d14d0983b6b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325040171Z",
      "vulnerabilities": {
        "vulnerabilityID": "62eb6016-ee65-4c66-aead-241716ff0e9a",
        "line": "4",
        "column": "29961",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "Math.random()-1,u=e*e+r*r;while(!u||u\u003e1);return n+t*e*Math.sqrt(-2*Math.log(u)/u)}},logNormal:functi",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "07f4c5ffaacb80918b045632d473c7905b5ee646dfa581463ca2599cfd7b5002",
        "deprecatedHashes": [
          "510beabd421ba7322cd398eca21a0efe8a4f8d106dde5872622ff750b5b2b36c",
          "156c0474f7bfd20990b7bc1acedd0b1861d7d7f8910ea1a356f556293143f37b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325041171Z",
      "vulnerabilities": {
        "vulnerabilityID": "ec36d219-d0a9-4ed0-98fd-d68f0f6824a3",
        "line": "4",
        "column": "30297",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "Math.random();return t}}},Go.scale={};var vs={floor:Nt,ceil:Nt};Go.scale.linear=function(){return Zi",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "21cd513490b98606811711d7b67f3bd208788aa16326422ee293f3d86e6b4db7",
        "deprecatedHashes": [
          "de402456e65356baf02c8372b5cf72ce8fd11c50c2d34eee852d688872e35277",
          "3d996e6d73823b5edd9f69a9af1337446762c0fd6287876bf828c27577b93c1c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325045171Z",
      "vulnerabilities": {
        "vulnerabilityID": "f2c5cb08-d8c4-4b73-b3c4-2513dd0ace10",
        "line": "1",
        "column": "4121",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": ".addEventListener(n,this[o]=u,u.$=e),u._=t}function i(){var t,e=new RegExp(\"^__on([^.]+)\"+Xo.requote",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "08cdff79112a4a92ccd17311de90f37e58efabc86d4549b1a1cd6e02932e4919",
        "deprecatedHashes": [
          "f587d7a0159ba80fa9c38f2e9addaa3f5356b31f3804f3143f62e810502e441c",
          "f57068a1c66df30281738bc7660bb1c37ded2c5e316ca23e6e120e3fd3859755"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325046171Z",
      "vulnerabilities": {
        "vulnerabilityID": "460a190b-33b7-48cd-b0aa-794bb7599a33",
        "line": "2",
        "column": "14951",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "Math.random()-.5,n.point.y+=Math.random()-.5);var s=t*e[n.point.index];n.charge+=n.pointCharge=s,r+=",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "904a2f2b7c0730e2dfd4b9ed86cb2811d5dd9ee99ac5b7dbcd91bbf06ad23716",
        "deprecatedHashes": [
          "9d1fc9a8e3e92112419241fe51cb1b0115e97bead06eb5e505ef6ca65bcfc669",
          "fb0d36ebcd2f84fc6c0d372c8d81394bd56e8e7a18a4ea5ca70e5c12a26f38d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325047171Z",
      "vulnerabilities": {
        "vulnerabilityID": "a22b3d07-35e0-43ab-b393-fb886f81f796",
        "line": "2",
        "column": "14979",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "Math.random()-.5);var s=t*e[n.point.index];n.charge+=n.pointCharge=s,r+=s*n.point.x,u+=s*n.point.y}n",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "4ea0e2330be84427dc1e400a7745764c7b19d8b413c10c2fc3a301204c72249b",
        "deprecatedHashes": [
          "e038a13e150f7d5e71be35352729d163d074e97fbe1f3bfe8bd6b8891742cd9f",
          "057c3b00438897b3903936c05b8468ce9d4578a9b47036b72d73828610ac7c35"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325048171Z",
      "vulnerabilities": {
        "vulnerabilityID": "27f6fc9e-49f4-4b66-ac16-823681155524",
        "line": "3",
        "column": "3616",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "Math.random()*r--,t=n[r],n[r]=n[e],n[e]=t;return n},Xo.permute=function(n,t){for(var e=t.length,r=ne",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "7b848c1958117c100b32bc757843f5f9960b49c5d81655d434a83725e062f5a8",
        "deprecatedHashes": [
          "f1f6e2827b73ca34da837b6f88a1708e23874d5043e068b584ced8e2d4659c5c",
          "8c4f837dc6f42885a62e9bc786d9411665f294b57e2bd2b1ae6b6b214f2807fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325049071Z",
      "vulnerabilities": {
        "vulnerabilityID": "bc513a82-0665-420d-a472-85ff7829319e",
        "line": "4",
        "column": "19513",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "Math.random()*r}var t,e,r,c=m.length,l=y.length,p=s[0],v=s[1];for(t=0;c\u003et;++t)(r=m[t]).index=t,r.wei",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "2e0b89b08ae50788c02d5eb3f705b272a7c3bbcdf727eef2a6a6d0f4046119d0",
        "deprecatedHashes": [
          "dd538b9ec3f18c25b8fc1055d879381c5d7b5af5469d2a9f608d7f19874e6718",
          "2d57092f04ce157aea5a140fd0f1cf47d7d9f188f2974cbf7d7e611d48b6ab6f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325050171Z",
      "vulnerabilities": {
        "vulnerabilityID": "97f20739-4dc4-4bb1-a62a-a07e7d17ba44",
        "line": "4",
        "column": "30148",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "Math.random()-1,r=2*Math.random()-1,u=e*e+r*r;while(!u||u\u003e1);return n+t*e*Math.sqrt(-2*Math.log(u)/u",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "92e1e8d38ceba9e98bba1f4d13be0007b163edbc5ae4b6cd5665f153e1cbe3ac",
        "deprecatedHashes": [
          "03da35de99ececd958ceb28ffaaf9838e9255aafec838595e4729026981d76dd",
          "514889ebda75a7ed4602f7df18695724539417f5d65de6b1cacceabaf284785c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325051171Z",
      "vulnerabilities": {
        "vulnerabilityID": "bf78f19c-3e0e-4b66-b89c-75b510774398",
        "line": "4",
        "column": "30168",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "Math.random()-1,u=e*e+r*r;while(!u||u\u003e1);return n+t*e*Math.sqrt(-2*Math.log(u)/u)}},logNormal:functi",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "4dad5efe007f1a07f194b3cc82b7c4d15470756569359af29aab1febad0455da",
        "deprecatedHashes": [
          "5fbb7bdde9bf25cc784d4bc1a2ebcf0738538b0f7c6c95f8061421b7078eda8f",
          "61b431a6740da688988d2f5d0fb0b6efeeb01815e0b79db480f79ce92fee44de"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325052171Z",
      "vulnerabilities": {
        "vulnerabilityID": "631cf6d3-f700-43e0-8de5-638e86bc6b3d",
        "line": "4",
        "column": "30504",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "Math.random();return t}}},Xo.scale={};var ls={floor:bt,ceil:bt};Xo.scale.linear=function(){return Hi",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "fdb388b4c7d52c0cfc195aec4ea538d08a5ed1c80c5db5fa1e5f4cd7fbed14c0",
        "deprecatedHashes": [
          "8c6c54a6fec777e1031affe7509e70c04852c9ce84a00d700a5f1335d26c4794",
          "25d1701e0ac961a1ada3dd5b8e1c13dcd71b1f3413f2db44e4972ba185e342a2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325056271Z",
      "vulnerabilities": {
        "vulnerabilityID": "03bcbb00-4dbd-42d3-a324-484fd6f2f5f2",
        "line": "774",
        "column": "6",
        "confidence": "HIGH",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/ShadowDOM.js",
        "code": "debugger;",
        "details": "(1/1) * Possible vulnerability detected: Debugger statements should not be used\nThe debugger statement can be placed anywhere in procedures to suspend execution. Using the debugger statement is similar to setting a breakpoint in the code. By definition such statement must absolutely be removed from the source code to prevent any unexpected behavior or added vulnerability to attacks in production. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-15",
        "vulnHash": "7fd1be8c967c497a86ca2bac6013ab7883e4dbbd8e492a389cd700341431b774",
        "deprecatedHashes": [
          "3cfb4fb8c5ce2e54b85d6bb1e0ccad1128bc8ffc499d4193597146d1aa6feb98",
          "a1f9c2a42329fd3903c17b4011bba085e2ff503e676a19c1ee9c50e89b022c10"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325057271Z",
      "vulnerabilities": {
        "vulnerabilityID": "0ca84e1a-91c8-4fad-a772-c8e1a7afd24a",
        "line": "16",
        "column": "28",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/ShadowDOM.js",
        "code": "this.name = \"__st\" + (Math.random() * 1e9 \u003e\u003e\u003e 0) + (counter++ + \"__\");",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "9f3f50824025eb0d1812017cce0f5d4561cc8a67ec08dd2b50da250449810c0a",
        "deprecatedHashes": [
          "8838c87792fc3fc821cdc81c62c3212b120cabe9e8105dccfc79eb5ec18c05c1",
          "a64a3f0d0e6be2c5c407da69c210fa686b8caad44355194a1823d57be18e5828"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325060371Z",
      "vulnerabilities": {
        "vulnerabilityID": "79f711af-916c-450b-a702-b330dbc6a4ee",
        "line": "2",
        "column": "3443",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": ".addEventListener(i,a,!1),function(){return t.removeEventListener(i,a,!1),!0}}:k.doc.attachEvent?fun",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "a58108375d44eafe3717212934277c92eeeec154c7876dc63fa2d827eef5bf6c",
        "deprecatedHashes": [
          "21589123bc47fed564999627ad36981dab5448684e15169ed8f68652114c9ae6",
          "86cc2f66bb9520c5068bcdd8ed670a08b5884dae523a2338f5f7fc1f7d1cdad4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325061371Z",
      "vulnerabilities": {
        "vulnerabilityID": "220f005f-5dbf-4a58-a65b-a26d2461a1eb",
        "line": "7",
        "column": "19935",
        "confidence": "HIGH",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "alert(\"oh shit\"),t},Yn.prototype.addEventListener=function(t,e){var n=this;if(e._callback||(e._callb",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "5a4a7530ebfd44c5478d38d65f452c2dd9da249304b97a72c655b325d815ad9a",
        "deprecatedHashes": [
          "9d2a8c4706ba8304c1fdaefdca857841dce9598012fbbde8b00a0a94207416cb",
          "d0feb6963cb64d0479d4cc44c50885b1022d089133eb10a751590ce319514e67"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325062271Z",
      "vulnerabilities": {
        "vulnerabilityID": "c5240293-3fdc-4efc-aadd-4579b5a49a5f",
        "line": "3",
        "column": "28109",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random()).replace(\".\",\"\"),C=t.document,E=C.documentElement,T=0,B=[].slice,L=[].push,P=function(",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "834acf452b071747c02826926e7292df7c7daac8b615ad5281e86947113e762a",
        "deprecatedHashes": [
          "c7bc286a04cf3589094afc11a2b0798e6869e05c01caf48186e2284760354502",
          "da525ef6c9efa906439e440559a54ae9a88c1e1fdba8f019c852206a5695d5a2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325063271Z",
      "vulnerabilities": {
        "vulnerabilityID": "58230d33-e4f9-49b8-978e-7922bbcf123e",
        "line": "5",
        "column": "8889",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random()-.5,t.point.y+=Math.random()-.5);var l=e*n[t.point.index];t.charge+=t.pointCharge=l,r+=",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "dc30630e21d00cd3d513389a2865d0b578cf623aa19b0bacf9cb48a80945374d",
        "deprecatedHashes": [
          "17c128594596d547a0fb0173a0a9968ff149606ba64c9e6cc3b81797cdd1d8d7",
          "6a4b625f05c83401537a3d3edcc44f33dd61999093f6a68e56c0aa34b4ac8333"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325064271Z",
      "vulnerabilities": {
        "vulnerabilityID": "650340ee-f39a-44a4-9ca0-df8124009299",
        "line": "5",
        "column": "8917",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random()-.5);var l=e*n[t.point.index];t.charge+=t.pointCharge=l,r+=l*t.point.x,i+=l*t.point.y}t",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "8d4afc3a04093c538cbda033a9f4b87f131a0973c0a98533caa352f6f1163e70",
        "deprecatedHashes": [
          "7b3fd974a4a3a9be7921c0699e8ecbc56619ce0e90fd219e60e35229c7aee1a9",
          "80f19883a18570ddf96262473722ba5e5f29307ce44b7a32d72b2e2a0034013f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325065271Z",
      "vulnerabilities": {
        "vulnerabilityID": "c8a022d3-83b0-4cc1-b4ad-0d00dddfc230",
        "line": "6",
        "column": "6159",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random()-1,r=2*Math.random()-1,i=n*n+r*r;while(!i||i\u003e1);return t+e*n*Math.sqrt(-2*Math.log(i)/i",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "7102736378d0a06d9bb96f4530373c7498cea1265cc9c798f505b2e4d2a1c55c",
        "deprecatedHashes": [
          "cc7e0599c4be34cc46b0c6b106cee94700984af3f06333aa4abed44a40521dc0",
          "85afeee1ec24d97a3524d1e81fba72483ddeca0922feea8ab4b660a4a3e2fcff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325066271Z",
      "vulnerabilities": {
        "vulnerabilityID": "28d01a52-a907-4225-9217-bc096eaedc31",
        "line": "6",
        "column": "6179",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random()-1,i=n*n+r*r;while(!i||i\u003e1);return t+e*n*Math.sqrt(-2*Math.log(i)/i)}},logNormal:functi",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "d8f691c4fb37be36861ae93d4dc658eb3dbc222608a115befa2778268bde9331",
        "deprecatedHashes": [
          "4241c603da6afcc238c1e811e725bb6de3fed3865406921dd2f9cc0da3cefc06",
          "0f911bef08c8fc47caebac8d68a51ddc21d325680a3c006ad59f2e3b11e8622a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325067271Z",
      "vulnerabilities": {
        "vulnerabilityID": "c5f1b13f-8f85-47d6-add8-383fb5d5a41a",
        "line": "6",
        "column": "6435",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random();return e/t}}},ja.sum=function(t,e){var n,r=0,i=t.length,a=-1;if(1===arguments.length)f",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "56ddb2bf9dfbb5eaf5596812969dac9c3d53b43c3233023e66e4a2bdf6bc5616",
        "deprecatedHashes": [
          "836e6b48ef80e122c70daaac77366d966b8c3cf791803dfd2aefc8813441f61d",
          "4c9c3a9f38eb551ef5b31d0ef10afa2665fa4acb47e97df0f54cb3a0f53d1b90"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325068371Z",
      "vulnerabilities": {
        "vulnerabilityID": "d938fadc-1295-4766-8570-90e806806afc",
        "line": "6",
        "column": "6790",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random()*r--,e=t[r],t[r]=t[n],t[n]=e;return t},ja.transpose=function(t){return ja.zip.apply(ja,",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "76551437d601bd4eb7b1864ee027ebfb873cdff76076bd8e2c49d8c822128cfa",
        "deprecatedHashes": [
          "dacf349be80d794087775fd6af2a6207702bbcd7ef74e7fb5e22a149854842ae",
          "66259133f0f5a55a536586297a7bb1d3cf66605f42a5dd4797639f01f4bfc3a1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325069371Z",
      "vulnerabilities": {
        "vulnerabilityID": "2203c400-7a2a-41d2-99e5-a443fe64f347",
        "line": "7",
        "column": "28647",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "Math.random()*r}function e(){if(!o){for(o=[],r=0;f\u003er;++r)o[r]=[];for(r=0;g\u003er;++r){var t=y[r];o[t.sou",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "38d01274a4c4d049a0c6e33ea2e058f30206a66c98467c3aacb63bd5ad96dafb",
        "deprecatedHashes": [
          "885bc065c6f311252be2303d2f97580f710580af825fbf2e56f60c21c3f65b3c",
          "3dfc531b73488cbf731e5ea9332136effe6dee1200cbc24ac09195e97351d189"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325082471Z",
      "vulnerabilities": {
        "vulnerabilityID": "520c7c71-e57b-4719-a371-02319862ecfa",
        "line": "5405",
        "column": "12",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.js",
        "code": "window.postMessage(sentinel, \"*\");",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "c3c20d5c851a4fc384b53ac40c8a7ca4388ce3023b64d699cd3d625cffd4a1f7",
        "deprecatedHashes": [
          "d986bf2ef6dbc903032d7425d6e2ce7e0b8ef2036076f6ec514cdb57e7bd5149",
          "19657cd74dd34ca2e46bf3afaa87af74ec9af592e4cbec83f49e1170c14ce924"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325083471Z",
      "vulnerabilities": {
        "vulnerabilityID": "17910521-e0cd-4586-bb69-5b14c854c752",
        "line": "4798",
        "column": "14",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.js",
        "code": "document.addEventListener(\"DOMContentLoaded\", function() {",
        "details": "(1/1) * Possible vulnerability detected: Origins should be verified during cross-origin communications\nBrowsers allow message exchanges between Window objects of different origins. Because any window can send / receive messages from other window it is important to verify the sender's / receiver's identity: When sending message with postMessage method, the identity's receiver should be defined (the wildcard keyword (*) should not be used).\nWhen receiving message with message event, the sender's identity should be verified using the origin and possibly source properties. For more information checkout the OWASP A2:2017 (https://owasp.org/www-project-top-ten/2017/A2_2017-Broken_Authentication) and (https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-11",
        "vulnHash": "8862ccd896e03ea4b04c5473a9e8df7aed2061e0aa24ca1d04df27f381a9f20a",
        "deprecatedHashes": [
          "fac6316c601a1ffe10cbdd5f27f3dec162e124986dc6c71a1a7615967f2c1a2c",
          "587d53fc7e58c181d9539bad323c2cfdf6ff2418169e148a65d2a5d4439da53d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325084471Z",
      "vulnerabilities": {
        "vulnerabilityID": "5e03deb2-0b76-463f-a4c1-917e9c1f563b",
        "line": "815",
        "column": "8",
        "confidence": "HIGH",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.js",
        "code": "debugger;",
        "details": "(1/1) * Possible vulnerability detected: Debugger statements should not be used\nThe debugger statement can be placed anywhere in procedures to suspend execution. Using the debugger statement is similar to setting a breakpoint in the code. By definition such statement must absolutely be removed from the source code to prevent any unexpected behavior or added vulnerability to attacks in production. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-15",
        "vulnHash": "e194b39708687f7bf294b4f3ae845be4e99758463755ff9d48374337810a8184",
        "deprecatedHashes": [
          "438f62210e96302140205768fad44f5780ceb1a9ef5e70237cb99c93236449ae",
          "3944967b6ecc68382e2b0d963ac09bd147f6ff88eeec8d3bdbe27b03b7798088"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325085371Z",
      "vulnerabilities": {
        "vulnerabilityID": "5e5e3bad-0cf5-4e4b-9d8b-6916a329f3f8",
        "line": "63",
        "column": "30",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.js",
        "code": "this.name = \"__st\" + (Math.random() * 1e9 \u003e\u003e\u003e 0) + (counter++ + \"__\");",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "d71c60004df15481f4de475826e791d29a0176a94ea1da356f7f7ab744cb1644",
        "deprecatedHashes": [
          "d116668ca5095b9c5cda33f5a0092d156df62f52b0ea98944581d90b58a09262",
          "497f412a77c81de6706a528ab949846522c9789acc5e79554ca5bf4dd6ec0210"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325086371Z",
      "vulnerabilities": {
        "vulnerabilityID": "95294694-efbd-4bb4-a4ab-1764acac78fd",
        "line": "5393",
        "column": "26",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.js",
        "code": "var sentinel = String(Math.random());",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "7fce6e5b5650ed392b426a4948c8d864360cdf13aa1345a3f53ace46863f0293",
        "deprecatedHashes": [
          "420ea7c54a6e10ca2fe8cb64e611103756b614a24accbe40c16ca397591f3335",
          "18663f5bba132732e4ccc163aadf0b0a4047d6f5b6fe6ad2993e6318440c2506"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325087371Z",
      "vulnerabilities": {
        "vulnerabilityID": "f2810537-c508-4ae9-b134-c69a7d1c97e8",
        "line": "5879",
        "column": "21",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.js",
        "code": "url += \"?\" + Math.random();",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "5c1725b10a311466c7c347e0deb3cb8380e075f6348541f519f22bbe83bd158e",
        "deprecatedHashes": [
          "9fea2724243db2149c0422e63c26eac3f9ff225ea291cef9dea481b8770748c3",
          "be625fde86ffde44053d1265b986a6c0a476e5adad0350d1dcd4e49cca6bf720"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325103671Z",
      "vulnerabilities": {
        "vulnerabilityID": "0cbd42fb-c6dc-42fa-96eb-1da0f7c7be7f",
        "line": "140",
        "column": "10",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.js",
        "code": "i = Math.random() * m-- | 0;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "22fbf7b8e6022a863e53b0fcb06592c7efd45ac7d257b47f5fccdf5c64fb84d8",
        "deprecatedHashes": [
          "1a85980dc47d2eade919b7f72836d9c03986f9868a320ec0f1d42110d0465123",
          "fd3d9188798d3c3f5ac37a73b9f6a818bec463642b6bde4d2422879dd26c3607"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325104671Z",
      "vulnerabilities": {
        "vulnerabilityID": "ec675850-fb59-45de-847d-32aae06aa428",
        "line": "6298",
        "column": "15",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.js",
        "code": "return Math.random() * size;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "d5d9333c566dc115071ef745c4c9dd0c3afb26c7a0b30f9ec40e25897929007b",
        "deprecatedHashes": [
          "4ca23dc761ffa4bd3ea260623a1e072e295e8dfe7ce53121f6c80b49b7aa358e",
          "a479cd8007bd01ef9eec45c6fa45fd0d20d723e84042eae8f08e3aad8449111c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325105672Z",
      "vulnerabilities": {
        "vulnerabilityID": "7dcd4c89-ffa4-4ce5-a8e4-577d2d903d22",
        "line": "6348",
        "column": "24",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.js",
        "code": "quad.point.x += Math.random() - .5;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "8485a229bec03bc9b9254fb8fe8c54b1540f230a87b84f2ced1d1074563ee7b3",
        "deprecatedHashes": [
          "7f8f8a0f527400fb6e45f44fc90028e30f7d5c50ee2dae6a1961e0a16d884b49",
          "89dcfa00ca466f040a415f78948991c3a98870f31f59fc913ac53bb2f02b4916"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325106672Z",
      "vulnerabilities": {
        "vulnerabilityID": "e2264829-8860-4450-a93a-9e12cf03cde7",
        "line": "6349",
        "column": "24",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.js",
        "code": "quad.point.y += Math.random() - .5;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "30dc1fc5a1718bc31f1c0525541c15a73d815c30746ef779e4ae21930b339464",
        "deprecatedHashes": [
          "90d5cd6b6e6d64dd1add63387e9e52ff47b32de789e54a6616a0dd72965dd3fa",
          "1323fb6ce874b4ffd84e4a7d16b32747886251c32f3297c83ddfdcbf63800429"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325107572Z",
      "vulnerabilities": {
        "vulnerabilityID": "f3e29087-3804-4828-b56d-5679bdec29c6",
        "line": "7315",
        "column": "14",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.js",
        "code": "x = Math.random() * 2 - 1;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "eee83ff849b273ff08848279c3f889498b86e7ffe9ea68aa2e59cf285049daad",
        "deprecatedHashes": [
          "5a8ea91d5e2f500290ff8a967b3095fab685c9706ec2a204bc080a739c6835d9",
          "644b4bce6b9e25f31a2d3db9224d1d1aac15f63fdc96fef9566f88957fe8e311"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325108572Z",
      "vulnerabilities": {
        "vulnerabilityID": "87565ac4-97ea-41b8-bec3-5c0c2b72ed08",
        "line": "7316",
        "column": "14",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.js",
        "code": "y = Math.random() * 2 - 1;",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "dd2ff65977def98a982f253e88477f02dc6c4161869385b17e4b7b18f970ff05",
        "deprecatedHashes": [
          "bc24a8da5b3b29b05e2b09326c39c19df501870bc0cb3d2078fb100d06dca1c5",
          "a65d291e929a22ee21032dc32021b271c77c15f33660bd7bf39736dead3637b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325109572Z",
      "vulnerabilities": {
        "vulnerabilityID": "b1d24517-d7b9-436e-a1eb-a995916ef6e2",
        "line": "7336",
        "column": "48",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.js",
        "code": "for (var s = 0, j = 0; j \u003c m; j++) s += Math.random();",
        "details": "(1/1) * Possible vulnerability detected: No use weak random number generator\nWhen software generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information. As the Math.random() function relies on a weak pseudorandom number generator, this function should not be used for security-critical applications or for protecting sensitive data. In such context, a cryptographically strong pseudorandom number generator (CSPRNG) should be used instead. For more information checkout the CWE-338 (https://cwe.mitre.org/data/definitions/338.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-6",
        "vulnHash": "7e48b172af9dd7429ab5be4dbaf09c46b9de90bb4837b0d50ea715da129f7eaf",
        "deprecatedHashes": [
          "165784a3acb214de9d296f4429d564f111fffadfd4e243c1fae2eb9757194c72",
          "acb17ebf0093b53824e8c1e194e5a35e8edbc1a62f75f19659fb3e0e1502baaa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325113472Z",
      "vulnerabilities": {
        "vulnerabilityID": "1b24903b-9051-4297-9c1e-9e6b037f8622",
        "line": "5029",
        "column": "4",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "alert( msg );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "87cdc74f1cde864badbe2d40e84ee1dc7ffb44265b90e05cfbdfc4cde9c0be7e",
        "deprecatedHashes": [
          "9c35ef5d1b8650f5313b764c5b5a54db980f184b2bbe48162bab79293fdbc61c",
          "8ee3853ab52536e9038747f93fc15911d875b483048f9dbb2c7521e81ef64610"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325114372Z",
      "vulnerabilities": {
        "vulnerabilityID": "adb891c3-5b18-43bb-8abe-2f7288193596",
        "line": "5343",
        "column": "10",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*      alert( \"First cell is: \"+data[0] );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "c40b9192eef7f0f34977481d5724930ee5924a7e9d5652e1109c18e9f36027d9",
        "deprecatedHashes": [
          "7a4287c114f475d22887dbb868895dd05edeadd57278a0ff5556bb50dbc08097",
          "770cfe7d3715362463c970da6c92a488f81c6a4fd209e44732cc143313df1024"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325115372Z",
      "vulnerabilities": {
        "vulnerabilityID": "606011b4-0358-42c6-9c09-d42467693114",
        "line": "5355",
        "column": "10",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*      alert( data.length+\" rows matched the search\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "7ad50b1baadef6c7dee07445fee87f7ee4d5ce437b6aa17657eb240bd8adfac3",
        "deprecatedHashes": [
          "7021692ace2b41835fbb0549c6c9e9c04bde0b19ce17db9938f81f686c27233a",
          "6cbb67bb37707500b89556bc139a52f35ff18c320b304b6bd99fd4114df98d50"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325116372Z",
      "vulnerabilities": {
        "vulnerabilityID": "97db1a2c-5c6a-476b-a0e9-a10beebad0c9",
        "line": "5677",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*        alert( 'The cell clicked on had the value of '+sData );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "d9483da77a5c913a9c6b5732209162c12c8a1d943bd82fa5daeeda5765f14f59",
        "deprecatedHashes": [
          "e300aad6edbcc11fac16d3d8ac7c8bf73f8838ed88d3142274fb128345c5b7e2",
          "e6d1ab747d729df5522bf0c9d6c45b2e1b23994bd5ff3d3ce36bfe2ecb4408d6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325117472Z",
      "vulnerabilities": {
        "vulnerabilityID": "90603cba-4d64-4f57-86e5-94f221256bcc",
        "line": "5908",
        "column": "10",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*      alert( oSettings._iDisplayStart );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "2c707de9249f769edc2f71fa08e05abbd8aadf44cc2a75876e040c60d2b3f70e",
        "deprecatedHashes": [
          "383b6fc9d5c1ac4b15c98c55d0c42e5a0074647e8950e185255a8a5ba0deac07",
          "9106e9bc18c066a6c83bc0aec06262dfb9173a903911b078e1f71a7acc660ac6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325118372Z",
      "vulnerabilities": {
        "vulnerabilityID": "10279dbb-54f3-43ef-bfb5-bf00b5eb09dc",
        "line": "6018",
        "column": "10",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*      alert( oTable.fnVersionCheck( '1.9.0' ) );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "c1439800fffcbaf671082cc6fb7f969e027e5bfb1aca4910ce791cae22948590",
        "deprecatedHashes": [
          "02170a140f90579ec8b2f386ee41a4f1a2c37198ba48ffe3fc125351d03f5ceb",
          "afc07a1128267856547122ed1e3d981ef7ada8019e933b1e772264e69195c28f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325119372Z",
      "vulnerabilities": {
        "vulnerabilityID": "920117cd-7473-48d6-a18c-f68c4261c777",
        "line": "8783",
        "column": "7",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "0e491b0e5273a7a392e368f7cc06581b828c4a25ee8e9bc98695646b24ccff73",
        "deprecatedHashes": [
          "3a38728c9a370af82a5075d3b67c81b0a1b774df8c5c25d4b2a3d5e2f9e7fd25",
          "50273ac90f62bd615d03f1ae11c7e3f736c5cfb3a822051a6ec04c72099ad963"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325120372Z",
      "vulnerabilities": {
        "vulnerabilityID": "7110255b-1c7d-41f1-b0e2-efebef7a929d",
        "line": "10304",
        "column": "14",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*          alert( 'DataTables has redrawn the table' );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "8597cdde695be3e3f6ae5f93b091c658233d1a91c2d8b5bc39a8572d69a6923c",
        "deprecatedHashes": [
          "5f66668f167e3fe21a27f01f7036fb4372812968752989577606df87580e369f",
          "34119dc2e8a5fa94b5254ced319f0efb8ac6977534f0147a90f6b6328fc6b519"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325121372Z",
      "vulnerabilities": {
        "vulnerabilityID": "a97da3f4-1ee6-40c7-b5ae-788680e38c4a",
        "line": "10451",
        "column": "14",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*          alert( 'DataTables has finished its initialisation.' );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "09bc89328c0c28cc68217577657a53bc11d58351f69879ae06d5d02a1818c64d",
        "deprecatedHashes": [
          "7abd0bb3b54e4e82ee102f0f2ea810233ce730bbb6d455420ce6d21a6e80dd52",
          "bd1cdbfb4363676d96e1d412fe49d955744d41366b733a20e42f8b099106bda4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325122272Z",
      "vulnerabilities": {
        "vulnerabilityID": "bbac95e9-e38f-43ba-8649-a24a7e392bf4",
        "line": "10667",
        "column": "14",
        "confidence": "HIGH",
        "file": "emif/population_characteristics/static/js/jquery.dataTables.js",
        "code": "*          alert( 'Saved filter was: '+data.oSearch.sSearch );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "72da9151cbd993f04864904ed1857152462613c9024f79d4c81d436112c7467f",
        "deprecatedHashes": [
          "2fe42d0eeea4db05ce70590af03a54429e25d7e112c5f9057c23964815ff6fa4",
          "8a3054caa744efbcd743c26a4011913e4a1694dab3e54ecc9d2fae81f805bb2c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325124172Z",
      "vulnerabilities": {
        "vulnerabilityID": "08454dfa-4242-414d-8851-69ea174f4458",
        "line": "5228",
        "column": "6",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "alert(msg);",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "abdd0419670863b903d8b14717f6af335a73cc6c429460a258a3f569814ea14c",
        "deprecatedHashes": [
          "5fc6a7760f35f93f0fbe7f8148d8612ef5072ba4e71363fac84a6dad9e666174",
          "9a72a4dd8b18a0d8e4a9065e49531f2ca9639d151d38352fd9278d5247c3050c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325125172Z",
      "vulnerabilities": {
        "vulnerabilityID": "c93ba5fb-a0ce-4ef0-8130-d84974b16db6",
        "line": "5565",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*      alert( \"First cell is: \"+data[0] );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "fb1e8088d85c5d754312f626a8211d877f571cf35ca8e9ffa2cda340440307c7",
        "deprecatedHashes": [
          "43aba44acbe60db24493a08f26e80f7ce6e7241e327c5d6668445243c407e230",
          "fbf5848a9215d5c8060b8476ef73ab3f6a6d29c1a40796f05aa9ca3416cd55d0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325126172Z",
      "vulnerabilities": {
        "vulnerabilityID": "90604b81-59be-4bfb-9624-4ae3c50247f4",
        "line": "5577",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*      alert( data.length+\" rows matched the search\" );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "1dd9e01ecc1052240b4ce2f18dad829c7cbb84d6104bbacbf7272b2d73bc6c16",
        "deprecatedHashes": [
          "dea0414f7865ead11f1a728543b9f405a12f498b6ccb51fec9631119afb84186",
          "b84f96004722ac17d93f6a216b1554f648c9fa2be64a54b2513ad72b1f9cbc96"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325127172Z",
      "vulnerabilities": {
        "vulnerabilityID": "a672a8f5-0525-4510-b956-46b4c8038515",
        "line": "5907",
        "column": "14",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*        alert( 'The cell clicked on had the value of '+sData );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "7c2fd740417aade330a7285aa76523fd709400e62ca42a26b4bb6298999cda29",
        "deprecatedHashes": [
          "a179502d886e59d08f03e070e81c4a766bc62d245c1a11c3c54627e0c693fc12",
          "5b550ad8c92dcd63afab9b218bbe384f119e90a709b503011faf2440dc499634"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325128172Z",
      "vulnerabilities": {
        "vulnerabilityID": "6c741697-e437-4f89-86af-b955a3325bec",
        "line": "6143",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*      alert( oSettings._iDisplayStart );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "340a7e9f94018aca8f39cd79455d7d1d0eba3868239413113d3452854ebb9cc4",
        "deprecatedHashes": [
          "0fec4b990d01d9c46f207dc462aeaead91aa3d33fec06efa0cf24d7a55887718",
          "7220cbc7d9400f2cc67a0369f4d3b0d4f856123d9c7ec54a700e5fe1460a799b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325129172Z",
      "vulnerabilities": {
        "vulnerabilityID": "8da6b8b0-d534-4d3f-a8e2-8d3660f41ede",
        "line": "6257",
        "column": "12",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*      alert( oTable.fnVersionCheck( '1.9.0' ) );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "e6a1781dfc91585f18a3faca0138c85f64bf09e3675111518d7f433a01e87b17",
        "deprecatedHashes": [
          "ceba41e38346f30224f9437e892449a40aac6c47791651b141e2d88cf0a2e7d2",
          "2eec2be574d7d45f27d704b468d82a5d0b1a9819e731fc9fecb728759822b57b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325130072Z",
      "vulnerabilities": {
        "vulnerabilityID": "13142dc9-04c2-4a97-b9cc-69371384b275",
        "line": "9196",
        "column": "9",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "9119f0681a1a654aceb8bdd97b5db6d005458b32bd2ef84c2b2a9d2e7fbed7aa",
        "deprecatedHashes": [
          "7821b9f40b0504afda5eb963cfbd440fae1cfbd911286b95c3e48195ad1466eb",
          "4bcbe85abb0395ca161b912e9bdd294bbd27317eab9bf1d8dcd048f62804fa55"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325131472Z",
      "vulnerabilities": {
        "vulnerabilityID": "75342ed5-5833-4eee-93a1-56bdbb6c30e0",
        "line": "10714",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*          alert( 'DataTables has redrawn the table' );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "51673ee4cf250e488e42340631764e6bebba7371c44964f4cb9eb3dad0575c43",
        "deprecatedHashes": [
          "9680d48ed37c60e0788dcdf6221ff5ef0d58040023677a2f93811380620b735a",
          "ab6a7243d96bb90ac427dacf964fd2717f3ad3d8d9b52683de7a103053d31d67"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325132372Z",
      "vulnerabilities": {
        "vulnerabilityID": "fb6c94ab-3e12-42b5-bb9f-fa31668901e3",
        "line": "10862",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*          alert( 'DataTables has finished its initialisation.' );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "d606b1420bf7bde93d4a6df86e1165144c24ddc2f01735670d2c52f98225c4c2",
        "deprecatedHashes": [
          "a15c1e1fe960e48a07f18673f4191ab97f8d3ca3c36bab19a2e6ca890f0d008f",
          "cba920a4f5e8df8069f3eb3c9ed012346f7798b2218b8a0d06c29b31099f66d1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325133472Z",
      "vulnerabilities": {
        "vulnerabilityID": "60bb8316-5e6e-4849-9f67-f1cf5c93f21a",
        "line": "11082",
        "column": "16",
        "confidence": "HIGH",
        "file": "emif/achilles/static/achilles/js/modules/jquery/jquery.datatables.js",
        "code": "*          alert( 'Saved filter was: '+data.oSearch.sSearch );",
        "details": "(1/1) * Possible vulnerability detected: Alert statements should not be used\nalert(...) as well as confirm(...) and prompt(...) can be useful for debugging during development, but in production mode this kind of pop-up could expose sensitive information to attackers, and should never be displayed. For more information checkout the CWE-489 (https://cwe.mitre.org/data/definitions/489.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "HIGH",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-16",
        "vulnHash": "6631e3e8d41cd61186d294de1127a80a9b90e4e0b78b97d15aba52e92f8b9936",
        "deprecatedHashes": [
          "34c77d15acc99f7491c94647ba64691ed65a3bcab9bd7bba3a54862ba624e21a",
          "0b455b98c06718d1df014bc1a04e0bbb2897dbd1b778750e02bcb5c3cca84894"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324057863Z",
      "vulnerabilities": {
        "vulnerabilityID": "4ecef594-5809-44fa-99fe-16506f995ef7",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "docker/Dockerfile",
        "code": "'RUN cd ...' to change directory",
        "details": "(1/2) * Possible vulnerability detected: MissConfiguration\n      Use WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.\n      Message: RUN should not be used to change directory: 'cd tmp  \u0026\u0026 CHROMIUM_VERSION=$(chromium-browser --version | awk '{print $2}' | cut -d\".\" -f1-3)  \u0026\u0026 CHROMEDRIVER_VERSION=$(curl https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROMIUM_VERSION)  \u0026\u0026 wget https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip  \u0026\u0026 unzip -j chromedriver_linux64.zip -d /usr/local/bin  \u0026\u0026 rm chromedriver_linux64.zip'. Use 'WORKDIR' statement instead.\n      Resolution: Use WORKDIR to change directory\n      References: [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir https://avd.aquasec.com/appshield/ds013]\n         \n(2/2) * Possible vulnerability detected: MissConfiguration\n      Use WORKDIR instead of proliferating instructions like 'RUN cd … \u0026\u0026 do-something', which are hard to read, troubleshoot, and maintain.\n      Message: RUN should not be used to change directory: 'pip install -U pip==20.3.4     \u0026\u0026 mkdir -p /opt/local \u0026\u0026 cd /opt/local     \u0026\u0026 pip install $(grep -i \"^django==\" /requirements.txt)     \u0026\u0026 pip install -r /requirements.txt --ignore-installed'. Use 'WORKDIR' statement instead.\n      Resolution: Use WORKDIR to change directory\n      References: [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#workdir https://avd.aquasec.com/appshield/ds013]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "",
        "vulnHash": "79238d6e62fee1cdcdcf77461694e1e5ec8b119ab0cf750498f0157e1673a5c6",
        "deprecatedHashes": [
          "dc88cd71e83783fa834712d17efd7debe26a2a8c148a666e98d1c5afaffdff34",
          "fa96c6e52dc61b94bd294e6ced5978c3171def537da5d8edda4658d9e6dae535"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324069963Z",
      "vulnerabilities": {
        "vulnerabilityID": "63fcf4bd-6584-4594-bfef-8013b062c504",
        "line": "2184",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "      \"resolved\": \"https://registry.npmjs.org/datatables.net/-/datatables.net-1.10.19.tgz\",\n\tInstalled Version: \"1.10.19\"\n\tUpdate to Version: \"1.11.3\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: This affects the package datatables.net before 1.11.3. If an array is passed to the HTML escape entities function it would not have its contents escaped.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-23445.\nCwe Links: (https://cwe.mitre.org/data/definitions/79.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-23445",
        "vulnHash": "eb2191e560600eb78da6765a52f1b6e192e45808c5ea1ee15837badebed5aa7f",
        "deprecatedHashes": [
          "b4dede23d2f1caabbfa6aafbd3e6c7f39e04a0da2ef4510e0ee4865e028db8bb",
          "1333cf5df5518f6e0cde6a83b2d5ecf8ee68125cfca7c96b3f835a9228b16e5e",
          "92e0727fea8854b8bc47a363fad0c8165b373646b98ec0c49bdde8845d142840",
          "d58bbe1ecd0711feba96791db405df314317a66e360433dd060b286c50edc5ff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324072163Z",
      "vulnerabilities": {
        "vulnerabilityID": "bc5068ce-2139-4b65-815d-c877aa69a311",
        "line": "1483",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "        \"follow-redirects\": \"1.5.10\"\n\tInstalled Version: \"1.5.10\"\n\tUpdate to Version: \"1.14.8\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: Exposure of Sensitive Information to an Unauthorized Actor in NPM follow-redirects prior to 1.14.8.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-0536.\nCwe Links: (https://cwe.mitre.org/data/definitions/200.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2022-0536",
        "vulnHash": "4c945e6957e3c898898c95e95367549ffd2fcbd7a98c549f966099308998911a",
        "deprecatedHashes": [
          "c3bc7b0f317acf320e8063658870cd73647583872ce4a180a533d23fa7933d7b",
          "67dba3f0b6e0883e1c0c68a0c3793e9df1c1a8e4c5ecaca6d6cd028063ad3391",
          "81d01ba6ca249a80079b3413b792869e21018050095c9cbc10df1ae6b19d026d",
          "1cab7876abce5cf41a4620a38505b47b0536d4851bcf8aef8d7f18603acdf06d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324073163Z",
      "vulnerabilities": {
        "vulnerabilityID": "4e3b2fe6-ff3b-45d8-9b29-cc10c999ce8d",
        "line": "3824",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/package-lock.json",
        "code": "      \"resolved\": \"https://registry.npmjs.org/jquery/-/jquery-3.4.1.tgz\",\n\tInstalled Version: \"3.4.1\"\n\tUpdate to Version: \"3.5.0\" for fix this issue.",
        "details": "(1/2) * Possible vulnerability detected: In jQuery versions greater than or equal to 1.2 and before 3.5.0, passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-11022.\nCwe Links: (https://cwe.mitre.org/data/definitions/79.html)\n         \n(2/2) * Possible vulnerability detected: In jQuery versions greater than or equal to 1.0.3 and before 3.5.0, passing HTML containing \u003coption\u003e elements from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute untrusted code. This problem is patched in jQuery 3.5.0.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-11023.\nCwe Links: (https://cwe.mitre.org/data/definitions/79.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-11022",
        "vulnHash": "82809ad3e75515943867810d50979a622fafb7f8b4a1ed4c78982fd4bfb14f54",
        "deprecatedHashes": [
          "12a140211d765cf31e03fa0347d7baec6bab6dec51c2e1ff674743d3efe14dc9",
          "d6851a6ec7f1d36f00a6bda3e3a3ce2ce6ac75af7d63c5c9c63e40ffb6ffcd0a",
          "8853a2ad2d4b17ce889ecb15217dade55ebb60e1fdede5f57c77029c9064c724",
          "66d9f41cb1d995247cf269809bcb59993ff34d65c556ed670109a0410c91a1f9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324077363Z",
      "vulnerabilities": {
        "vulnerabilityID": "352af292-5700-44f7-99f8-309b0385f45b",
        "line": "120",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "django==1.11.29\n\tInstalled Version: \"1.11.29\"\n\tUpdate to Version: \"2.2.24, 3.1.12, 3.2.4\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: Django before 2.2.24, 3.x before 3.1.12, and 3.2.x before 3.2.4 has a potential directory traversal via django.contrib.admindocs. Staff members could use the TemplateDetailView view to check the existence of arbitrary files. Additionally, if (and only if) the default admindocs templates have been customized by application developers to also show file contents, then not only the existence but also the file contents would have been exposed. In other words, there is directory traversal outside of the template root directories.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-33203.\nCwe Links: (https://cwe.mitre.org/data/definitions/22.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-33203",
        "vulnHash": "1d2748cbc1982196fce8c02cf9dc1076a168b035b56f10cdee17d4cb0a1f4779",
        "deprecatedHashes": [
          "28d02bab3aaee201a932140876c612fe308b11c5654af1e60c3f7859584cb10b",
          "af73ac99866e874a36f3191a49d8dbae0619038e0b97cd3877835a39c9a80d1c",
          "37a263c572b423e08ba96910ddd8464c68bb75ce38fb7784326c482e3a946467",
          "6379dde9a09eb149fd1a0f020e400b06cbd17ed51cec2095d837fd0e1b23bf40"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324078463Z",
      "vulnerabilities": {
        "vulnerabilityID": "7ced81e8-fddb-4633-9604-ea971fb63057",
        "line": "88",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "django-filter==1.1.0\n\tInstalled Version: \"1.1.0\"\n\tUpdate to Version: \"2.4.0\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: django-filter is a generic system for filtering Django QuerySets based on user selections. In django-filter before version 2.4.0, automatically generated `NumberFilter` instances, whose value was later converted to an integer, were subject to potential DoS from maliciously input using exponential format with sufficiently large exponents. Version 2.4.0+ applies a `MaxValueValidator` with a a default `limit_value` of 1e50 to the form field used by `NumberFilter` instances. In addition, `NumberFilter` implements the new `get_max_validator()` which should return a configured validator instance to customise the limit, or else `None` to disable the additional validation. Users may manually apply an equivalent validator if they are not able to upgrade.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-15225.\nCwe Links: (https://cwe.mitre.org/data/definitions/681.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-15225",
        "vulnHash": "1a91c7ef228f3357deb7f737be806b15ea20a0512d13276851c97ad99d3f99e6",
        "deprecatedHashes": [
          "dff24da2c378b3bf1c0eff7dd9e4ca8d0563fbdd3ed3c94bf7092f0c0fe0004c",
          "aa6a85689512478dc842e7e6683b86c7816d3eea0c60f4adb600b0164305426c",
          "b3475f33f74bdb0123380e0e7b36144ccf90f8d6eff6ef366f253c6b8eb80191",
          "c0e28aa90622ff3dc88eef33ce3ec9002b1a9752d3160e346d26869c3fbb9d78"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324079563Z",
      "vulnerabilities": {
        "vulnerabilityID": "2d434978-b98e-4d84-bcde-7282994dee23",
        "line": "137",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "djangorestframework==3.9.4\n\tInstalled Version: \"3.9.4\"\n\tUpdate to Version: \"3.11.2\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: A flaw was found in Django REST Framework versions before 3.12.0 and before 3.11.2. When using the browseable API viewer, Django REST Framework fails to properly escape certain strings that can come from user input. This allows a user who can control those strings to inject malicious \u003cscript\u003e tags, leading to a cross-site-scripting (XSS) vulnerability.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-25626.\nCwe Links: (https://cwe.mitre.org/data/definitions/79.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-25626",
        "vulnHash": "8d0e225a4adbaf89e087da1242a7abd74f58116241134765cb19961d69e5b2c1",
        "deprecatedHashes": [
          "7b2663aa32e23daf26c0928c16f77016caaede08eadcfc43521a29c11a56a01e",
          "bf329e82f939ceda898ffa424a3f9e4359ffac7299965f1f116b8cefe427907d",
          "54d56eb257aec417e4903c5d7ae46656014dfaeba5e80f53920809f924c27f90",
          "a8e06a1495e9157dbaf849eb451d51a2e92b1444d983f520f71c8124f102c5dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324081663Z",
      "vulnerabilities": {
        "vulnerabilityID": "650defb8-97a0-453e-95df-f037191bb37b",
        "line": "181",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "numpy==1.16.6\n\tInstalled Version: \"1.16.6\"\n\tUpdate to Version: \"1.19.0\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: ** DISPUTED ** Buffer overflow in the array_from_pyobj function of fortranobject.c in NumPy \u003c 1.19, which allows attackers to conduct a Denial of Service attacks by carefully constructing an array with negative values. NOTE: The vendor does not agree this is a vulnerability; the negative dimensions can only be created by an already privileged user (or internally).\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-41496.\nCwe Links: (https://cwe.mitre.org/data/definitions/120.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-41496",
        "vulnHash": "7ef94e09c0567a5a80f7061fec8b0ea24fa5fb72ded4e854498b4c0568bceee8",
        "deprecatedHashes": [
          "6399972db6c8e348ef8d617517c7d0fe27f1769a820e2921eb900eecc614999a",
          "6952bd7dc3d5e14ebe7312af334a94226d1aa05e989a1bb700b980ae50d6da9f",
          "e7d0e95a572351f949cf353e34af256daa55a3280c4596f9238f229be6e06637",
          "5f4c172ff134db032dbedd87fe596cedb2750e0b3dcfee98b12e0491004e2e75"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324108863Z",
      "vulnerabilities": {
        "vulnerabilityID": "de5d164e-bc3f-4e38-9ff9-8e77b3e023c0",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"7.0.0\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: In libImaging/Jpeg2KDecode.c in Pillow before 7.1.0, there are multiple out-of-bounds reads via a crafted JP2 file.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2020-10994.\nCwe Links: (https://cwe.mitre.org/data/definitions/125.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2020-10994",
        "vulnHash": "c61d56462173a065148b9dbfe5a587adf1c46727cf6b2b14ede459fe71c25670",
        "deprecatedHashes": [
          "e1f0cfa46974f07f30220af17b7f48c37e6c22095cd3a9924f96c4a2a86e1140",
          "2d29c978f1d2d1ec269da4c9d7383d0e3e1844c8b892e2198e2fc0df630c2a06",
          "ba3605b5b60026df80e681cc6063599c540b11bf6b3151230e6560c1a5ec31dd",
          "036d5e5ab342eb2abee7a9377065713ed73f05519e1467bed37e5c74df48cb08"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324116163Z",
      "vulnerabilities": {
        "vulnerabilityID": "fadaf6af-e8c5-433f-8987-45b1e6ea889d",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"8.1.2\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: ### Impact\n_Pillow before 8.1.1 allows attackers to cause a denial of service (memory consumption) because the reported size of a contained image is not properly checked for a BLP container, and thus an attempted memory allocation can be very large._### Patches\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._### Workarounds\n_An issue was discovered in Pillow before 6.2.0. When reading specially crafted invalid image files, the library can either allocate very large amounts of memory or take an extremely long period of time to process the image._### References\nhttps://nvd.nist.gov/vuln/detail/CVE-2021-27921### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [example link to repo](http://example.com)\n* Email us at [example email address](mailto:example@example.com)\nPrimaryURL: https://github.com/advisories/GHSA-jgpv-4h4c-xhw3.",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "GHSA-jgpv-4h4c-xhw3",
        "vulnHash": "04019be067fb792a234c1fd72fe4e11192d18e689ef7d7107cde62482a215d6d",
        "deprecatedHashes": [
          "8434aaabdcd978d0993bfde954b48c872d8ae9ccd20e0c12e238fb651c5a195b",
          "002cd577cecba98444bd0e91f1590b44a6ad4420c61acdea2766006ed595eff4",
          "707deb496bd900116b357b35e878abf168a17e0870ca4c61dd8130181c1772ef",
          "9c35a7b1a0045d2a85c6eb49171430a26e80ad0d90d456de078c1f9488067934"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324120463Z",
      "vulnerabilities": {
        "vulnerabilityID": "10ab2126-7dd1-4409-a4b1-9152b9b4b2ac",
        "line": "214",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pypdf2==1.26.0\n\tInstalled Version: \"1.26.0\"\n\tUpdate to Version: \"1.27.5\" for fix this issue.",
        "details": "(1/1) * Possible vulnerability detected: PyPDF2 is an open source python PDF library capable of splitting, merging, cropping, and transforming the pages of PDF files. In versions prior to 1.27.5 an attacker who uses this vulnerability can craft a PDF which leads to an infinite loop if the PyPDF2 if the code attempts to get the content stream. The reason is that the last while-loop in `ContentStream._readInlineImage` only terminates when it finds the `EI` token, but never actually checks if the stream has already ended. This issue has been resolved in version `1.27.5`. Users unable to upgrade should validate and PDFs prior to iterating over their content stream.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2022-24859.\nCwe Links: (https://cwe.mitre.org/data/definitions/835.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2022-24859",
        "vulnHash": "415e8cb9ff62cca73844ac16d32d78645f883ca88584e1f1df2efab6ac13070c",
        "deprecatedHashes": [
          "6c7b3f3b55d9d847a277066ad8d6ca112e9ba34b5155dc551d69e98ea89ffc2d",
          "5609c76c84e6696353b12910d9cf6fd8849d83608fa146f1e0949a320a444a26",
          "b9ea0de043ea987d4a1ef38f7fd7c5bee6295dc55b1225ffb66f64402e55c65a",
          "cdc6f25984f8b4b375cd805fb6c56d64c25fb2aacc3d33f3e14a8ab9aaab2d13"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324122463Z",
      "vulnerabilities": {
        "vulnerabilityID": "380e94ac-f54e-435c-ae04-9b14507d48e4",
        "line": "216",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pysaml2==4.9.0\n\tInstalled Version: \"4.9.0\"\n\tUpdate to Version: \"6.5.0\" for fix this issue.",
        "details": "(1/2) * Possible vulnerability detected: PySAML2 is a pure python implementation of SAML Version 2 Standard. PySAML2 before 6.5.0 has an improper verification of cryptographic signature vulnerability. All users of pysaml2 that need to validate signed SAML documents are impacted. The vulnerability is a variant of XML Signature wrapping because it did not validate the SAML document against an XML schema. This allowed invalid XML documents to be processed and such a document can trick pysaml2 with a wrapped signature. This is fixed in PySAML2 6.5.0.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-21238.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)\n         \n(2/2) * Possible vulnerability detected: PySAML2 is a pure python implementation of SAML Version 2 Standard. PySAML2 before 6.5.0 has an improper verification of cryptographic signature vulnerability. Users of pysaml2 that use the default CryptoBackendXmlSec1 backend and need to verify signed SAML documents are impacted. PySAML2 does not ensure that a signed SAML document is correctly signed. The default CryptoBackendXmlSec1 backend is using the xmlsec1 binary to verify the signature of signed SAML documents, but by default xmlsec1 accepts any type of key found within the given document. xmlsec1 needs to be configured explicitly to only use only _x509 certificates_ for the verification process of the SAML document signature. This is fixed in PySAML2 6.5.0.\nPrimaryURL: https://avd.aquasec.com/nvd/cve-2021-21239.\nCwe Links: (https://cwe.mitre.org/data/definitions/347.html)",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "CVE-2021-21238",
        "vulnHash": "cffdfbbd984117a21695e6db25f0f76a4277314221ad04f1619da07825f78040",
        "deprecatedHashes": [
          "85c0dba17338e3b527e3f091703513621e4bb9d89c14aea85f3d0f532f93d79a",
          "8050ad8124d8a76b785df470bc15ddf245f47db55a00135c342bc839cd3b0bb0",
          "d5f19133bf9c124a0a56285ca2f8f3b1809b0bed5ddb480e465d44a9332fa3e7",
          "37e4148c46a872c3c8f29caa3e387b52fb77ab938b8b720f255ba0691142d711"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324129763Z",
      "vulnerabilities": {
        "vulnerabilityID": "3bbb3424-bb94-431c-b20b-e5c434c6bb26",
        "line": "1189",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/api/views.py",
        "code": "1188 \n1189                 facets = json.load(urllib2.urlopen(solrlink))['facet_counts']['facet_fiel",
        "details": "(1/1) * Possible vulnerability detected: Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B310",
        "vulnHash": "1969a50fab6e83020a14023401050b0790e22c1e4a7f82d80fd164a8b38c3918",
        "deprecatedHashes": [
          "5be74647a3b1ed25b95bdcfdb6e52b6436071d9746d7dde24a5477c14d62396a",
          "79df86ca3b36d982ab6f17155ea3687e31d0635d1b421a7b80f0f24cfdbdc47c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324166364Z",
      "vulnerabilities": {
        "vulnerabilityID": "1b5f18b8-9182-4fcf-8dda-79de54b6146a",
        "line": "113",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/studies/views.py",
        "code": "112         database_names = request.POST[\"database_names\"]\n113         database_names = eval(databa",
        "details": "(1/1) * Possible vulnerability detected: Use of possibly insecure function - consider using safer ast.literal_eval.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B307",
        "vulnHash": "227b2cb6e86867af47e6e23bf5140c3561b626322a3fbb0a6afb8006d7d32fe3",
        "deprecatedHashes": [
          "0a9ab680f97b7d56f618c1c9a683a0e26f754e7f6402441493dc7d4a6f35a65b",
          "e623a26ae67faf51ccb7dd575873bfbf38b90f4923f18178de41b7e6acc7d2ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324181764Z",
      "vulnerabilities": {
        "vulnerabilityID": "308af634-d834-4c63-9648-ffe9b20bf34e",
        "line": "40",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/utils/export_answers.py",
        "code": "39 \n40 output = open('/tmp/fingerprints.pkl', 'wb')\n41 \n",
        "details": "(1/1) * Possible vulnerability detected: Probable insecure usage of temp file/directory.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B108",
        "vulnHash": "9097f33da1d9d35c8250fb6b72aaa2cb4061e8a69ec8476d043e24f5c90c4a4a",
        "deprecatedHashes": [
          "f5202729ec81fb9270c5e482d18d1b055fba2a82c469e2db364f0fd4565f3740",
          "757fb4ecd0b2005edf20fcf0e469b4af11eceb81b91ee21a324bab90bbce75c3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324183864Z",
      "vulnerabilities": {
        "vulnerabilityID": "c104e09c-e228-441c-8d91-cd67fc64f22e",
        "line": "29",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/utils/import_answers.py",
        "code": "28 \n29 docs = pickle.load(pkl_file)\n30 \n",
        "details": "(1/1) * Possible vulnerability detected: Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B301",
        "vulnHash": "bfdeb75b633e27ce03c405af3d978f0a64c45599f6ef69e2219efaed87252242",
        "deprecatedHashes": [
          "3e79969a91ebb58a67fc92ea62f34e53ba10ec5e98b1a5aa2bacefd1c53fa271",
          "b656cb76c0fb64a84395f9f2017e3a07289ff1de968ee045cef693d32bb221f6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324186164Z",
      "vulnerabilities": {
        "vulnerabilityID": "3e6264fd-133d-49af-8964-8abc0d4379ee",
        "line": "27",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/utils/purgeSolr.py",
        "code": "26 ticks = time.time()\n27 fileAddr = \"/tmp/solr-backup-\"+str(ticks)+\".pkl\"\n28 \n",
        "details": "(1/1) * Possible vulnerability detected: Probable insecure usage of temp file/directory.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B108",
        "vulnHash": "4baaaa8638de05c2d35681a74736408d8ade8fccd6b9d504e0631bb4d5372a73",
        "deprecatedHashes": [
          "dd03ffdc41afa39af5d297ec0ea4b6d4ec23a15ce209668f1e0232fa694759ac",
          "9eedd7cc3d691eed635dce970a1d7a61ed39c18dc97f2c898740eda6cbc7fd5f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324388565Z",
      "vulnerabilities": {
        "vulnerabilityID": "bf030fbe-3546-4845-aa3e-9de5de3feed2",
        "line": "4476",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "path-parse",
        "details": "(1/1) * Possible vulnerability detected: Affected versions of npm package `path-parse` are vulnerable to Regular Expression Denial of Service (ReDoS) via splitDeviceRe, splitTailRe, and splitPathRe regular expressions. ReDoS exhibits polynomial worst-case time complexity.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1067761",
        "vulnHash": "a5ba4c3d5b727fc3a6d2084fe1d78f8881743f1812e1f5a19897a222d98b2c95",
        "deprecatedHashes": [
          "04c7a548861580fb797c487323f078f2f22c83005585e4681c8d48e0c7f026e3",
          "62f5bbc50068a36816d2bb37b327037ec8ced4798297ac5eba6eead213568859"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324390765Z",
      "vulnerabilities": {
        "vulnerabilityID": "54b89928-701c-4bc6-96c4-67b420b0c34e",
        "line": "1327",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "ajv",
        "details": "(1/1) * Possible vulnerability detected: An issue was discovered in ajv.validate() in Ajv (aka Another JSON Schema Validator) 6.12.2. A carefully crafted JSON schema could be provided that allows execution of other code by prototype pollution. (While untrusted schemas are recommended against, the worst case of an untrusted schema should be a denial of service, not execution of code.)",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1067946",
        "vulnHash": "bcd1ca6e6918a572c1b514306d808e5ce17c68916e5352f1845bf409dc423a06",
        "deprecatedHashes": [
          "c63ab4c28e269c518815fe0acf0be87e3141a25bf2ab2ff5026c5a03a29f97be",
          "43d71d4d52ee5a30beede9476b0d8abea97d9c7c8191175e565fd0e6a8df53f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324399066Z",
      "vulnerabilities": {
        "vulnerabilityID": "c660245c-8d81-4713-be0c-bc07448c0389",
        "line": "5868",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "yargs-parser",
        "details": "(1/1) * Possible vulnerability detected: Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1068310",
        "vulnHash": "aa1c3717ece58c88f0719e968a3b7717a9e871ee7206386bdb9bbe879bd8ac45",
        "deprecatedHashes": [
          "14d841b2a5c68e0cffb6fbfe4c109d08f9b8e8c0022811a7e1fe18ec836271ec",
          "cae45dfe2253ae096599487da074a29f853e01f09d0d5f2539bc457764a9c79c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324403066Z",
      "vulnerabilities": {
        "vulnerabilityID": "d9b8a18c-4342-4329-84c8-9762ded37729",
        "line": "3822",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "jquery",
        "details": "(1/2) * Possible vulnerability detected: ### Impact\nPassing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround the issue without upgrading, adding the following to your code:\n\n```js\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nYou need to use at least jQuery 1.12/2.2 or newer to be able to apply this workaround.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\nhttps://jquery.com/upgrade-guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo](https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.\n         \n(2/2) * Possible vulnerability detected: ### Impact\nPassing HTML containing `\u003coption\u003e` elements from untrusted sources - even after sanitizing them - to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround this issue without upgrading, use [DOMPurify](https://github.com/cure53/DOMPurify) with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery-3-5-0-released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo](https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1070235",
        "vulnHash": "01ff1db4f419d1ebf9446e0b775c727605183955bb7a5d784739d0e1a5985ffb",
        "deprecatedHashes": [
          "b4283befef5bfa5af72e41c0fb5a50037a09ac4fc237524d86a222d940428f79",
          "4eda1834a2761bb3d5f1639014abb5a66adec55f8eb23072149ce1ca30b089d3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324405266Z",
      "vulnerabilities": {
        "vulnerabilityID": "9eb33632-e492-4acf-be40-b42328410cca",
        "line": "3022",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "minimist",
        "details": "(1/1) * Possible vulnerability detected: Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.  \nThis is exploitable if attackers have control over the arguments being passed to `minimist`.\n\n\n\n## Recommendation\n\nUpgrade to versions 0.2.1, 1.2.3 or later.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1070255",
        "vulnHash": "97d27c06f2049cf27127c2f91372a2490b8ddea2129f9361c2ac02dfbaa52737",
        "deprecatedHashes": [
          "ee6811405ca70d6cad40c93293b603850db768b3e4b7e4940b089711af4070d6",
          "a306b95f700d55014ea7aef91314a99c7640c21c9732c462b35afd41b16d5595"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324418866Z",
      "vulnerabilities": {
        "vulnerabilityID": "326a0025-3399-4fdc-a469-f2a01959fdfa",
        "line": "1752",
        "column": "",
        "confidence": "LOW",
        "file": "emif/package-lock.json",
        "code": "browserslist",
        "details": "(1/1) * Possible vulnerability detected: The package browserslist from 4.0.0 and before 4.16.5 are vulnerable to Regular Expression Denial of Service (ReDoS) during parsing of queries.",
        "securityTool": "NpmAudit",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "1067902",
        "vulnHash": "f0980d1e01c81733eba05124442b7cc852c06077e0ef22de2e513e10be3819c4",
        "deprecatedHashes": [
          "bd3f4c0e74707a15cdbbaa88215aa854aaffc66d7a53479f91d4ec73b3ad96aa",
          "d7593b9164890880ae00ed6aa824ede409c32aea3b408b52b8865e52920e0fe2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324527267Z",
      "vulnerabilities": {
        "vulnerabilityID": "3dc1d1e7-2fd7-4138-93f0-9e13133bbee6",
        "line": "112",
        "column": "9",
        "confidence": "LOW",
        "file": "emif/studies/views.py",
        "code": "        database_names = request.POST[\"database_names\"]\n        database_names = eval(database_names",
        "details": "(1/1) * Possible vulnerability detected: Found user data in a call to 'eval'. This is extremely dangerous because it can enable an attacker to execute arbitrary remote code on the system. Instead, refactor your code to not use 'eval' and instead use a safe library for the specific functionality you need.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.django.security.injection.code.user-eval.user-eval",
        "vulnHash": "1441d14971fc3830ad2bf789c1acbe07e26fd53ac335819cb71ca2d28c8994c3",
        "deprecatedHashes": [
          "3e9c32627613e7a1061b87847f95b8aceea7cfb0e03428b7633a0ccd6197a955",
          "0fa2d8f09b9c432d8a18f44c77f79c2971fda34398a7d41c0a47b2135933f13f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324531467Z",
      "vulnerabilities": {
        "vulnerabilityID": "f09d716c-8d76-4160-b0ea-a976e43158d9",
        "line": "49",
        "column": "8",
        "confidence": "LOW",
        "file": "emif/insert_script.py",
        "code": "data = {\n        'contact_technical_t':'IEETA',\n        'created_dt':'2013-04-17 12:09:32.334053',\n ",
        "details": "(1/1) * Possible vulnerability detected: key `'ethical_committee_t'` is uselessly assigned twice",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.maintainability.useless-literal.useless-literal-dict",
        "vulnHash": "7b6da01592677c59f4cb5d21cf1f783f8cfabb65e851908f89c9f45d240daa57",
        "deprecatedHashes": [
          "1b5034364c3a346f265737f750d968f4e9d3e803e1c43f1ff0e4adb40284488b",
          "8d07d1fca39660e97ac64ed1baf6e082e5b17786936844f62f1869a615187f09"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324532467Z",
      "vulnerabilities": {
        "vulnerabilityID": "59b94136-6fab-4ad9-9a9a-2745e4d974e8",
        "line": "42",
        "column": "12",
        "confidence": "LOW",
        "file": "emif/emif/utils.py",
        "code": "    hash = hashlib.md5()",
        "details": "(1/1) * Possible vulnerability detected: Detected MD5 hash algorithm which is considered insecure. MD5 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-md5",
        "vulnHash": "15290431ca72af804a3b8e813d051327ba55f59477790c210e572c59968f6dc3",
        "deprecatedHashes": [
          "9d27b31e87f618962f3c01ab25b240104b566ae2145cc393d5f551ab6641cab5",
          "07962382f3653ffc1c7286d2deec9ca782a32c5d1b2330dbedce360ac54e74ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324533467Z",
      "vulnerabilities": {
        "vulnerabilityID": "be8c6c84-56be-4c4b-94c2-51826e28a8e2",
        "line": "182",
        "column": "28",
        "confidence": "LOW",
        "file": "emif/accounts/forms.py",
        "code": "                username = sha_constructor(str(random.random())).hexdigest()[:5]",
        "details": "(1/1) * Possible vulnerability detected: Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1",
        "vulnHash": "144634c5d5231234ed4c09998446bf6b457fa3fd72973764463cadf18f95b238",
        "deprecatedHashes": [
          "7212eafcb52b13fdb921683b0356b13fbea21a9fe843d22e2bfda9c79255c320",
          "a10e516113ba9734a60262fe6e581f2dc269954b38b0022e56667851ae068295"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324534567Z",
      "vulnerabilities": {
        "vulnerabilityID": "a04903b4-f63e-4a33-b281-f98be2de5d42",
        "line": "436",
        "column": "35",
        "confidence": "LOW",
        "file": "emif/fingerprint/listings.py",
        "code": "                this_query_hash = hashlib.sha1(qserialization).hexdigest()",
        "details": "(1/1) * Possible vulnerability detected: Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1",
        "vulnHash": "66527a231ebb6e46e800fa5c15bd3bb83cdfef4b784ef338accd0b5f0e4173ce",
        "deprecatedHashes": [
          "30234daeaa6ddd71bd60d82f7ed18695445c79b012176d36cf60997e6a9e2f4b",
          "6878af3e8fd8dfe86dd16678cca9c05f642a79a7a5dbd200401ae9b939c940db"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32490807Z",
      "vulnerabilities": {
        "vulnerabilityID": "bf0f2961-5569-48c5-aa3c-66512cb42c89",
        "line": "18",
        "column": "17",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/knockout-3.1.0.js",
        "code": "(b,c,d){if(!C||!C.stringify)throw Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE \u003c 8) ",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "98286eac693c0d5a254632bbe596143361ed1a1004cbc890b0aa402ac25bc29d",
        "deprecatedHashes": [
          "d191ac1c129981e7223ec168356e6fdcdcd621c24857fbad924cb3c11de72926",
          "5510310d7942d4b5b28d2ddaf8e2ca1253e367f1c981a0f37226151eb408311a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32497427Z",
      "vulnerabilities": {
        "vulnerabilityID": "63437b7c-4196-4d4f-a622-04adf78c3849",
        "line": "11",
        "column": "54",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.min.js",
        "code": "(e){var t=e.flags||{},n=\"webcomponents-lite.js\",r=document.querySelector('script[src*=\"'+n+'\"]');if(",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "e839868ab58ab56eee68e82d748fd82e3f2a565c84d2ebeea41de186acdd1bf1",
        "deprecatedHashes": [
          "0d60891a5445046aa3a7f54c8727337ea0df465fc934d97de4ba2ad12c160b8c",
          "c7b8bfd9a82a4d20b67d296e51b0c83c5e5d800e92e72be4b0f3151f29327860"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32497517Z",
      "vulnerabilities": {
        "vulnerabilityID": "6d0e1e4b-0c83-4ce5-ba06-575bdfc8c888",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents-lite.min.js",
        "code": "",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "bb22ef0f77f57b7f25b3554629112e22cba5cb2b6c80d833b57452c40da59b27",
        "deprecatedHashes": [
          "d2b8a3cb1c7440e61dcf5894a70b3dca1a39b7bec03396d3c96d357e64c4df48",
          "245bf0e77135475e27fbc87499127b258947f931edbdbb88ccb9dc8ad3b5b0f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.32498497Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b34d857-9e1d-4b68-9e10-9a5daef5310b",
        "line": "13",
        "column": "19",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/ShadowDOM.min.js",
        "code": "(e){for(;e\u0026\u0026e.nodeType!==Node.ELEMENT_NODE;)e=e.previousSibling;return e}var r=e.wrappers.NodeList,o",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "83f308b87787ed02bbb7f16a2b7d991da819f9c3bbf1ece86bddda7987bc6b27",
        "deprecatedHashes": [
          "02797cc95be61afc63d9aeac93ccb4e15958ad8602fe1a03f52a281fb5bcfdb4",
          "404509eaa33ff8cfce7ca102595312b680aca672a8da4a742e03f5b97b6430ec"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325005971Z",
      "vulnerabilities": {
        "vulnerabilityID": "9300e68e-2138-44b0-be0a-8c16e9726e75",
        "line": "6",
        "column": "6",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/jquery-1.10.2.js",
        "code": "(delete u[o],c?delete n[l]:typeof n.removeAttribute!==i?n.removeAttribute(l):n[l]=null,p.push(o))}},",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "b9c6c0d78cc1a14a243ecc208016dd9ed92136b057238ab9ba0abf86f5c08913",
        "deprecatedHashes": [
          "8554f7d614e0524cf0bb2d69a7bc7e7af788556836558bc6980a4b96feaeebe5",
          "071ef2c2b6cd984cc7b2e077761f1c2592ee99645bbb79a69261f2883c21589d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325011071Z",
      "vulnerabilities": {
        "vulnerabilityID": "3f7378ff-382a-44a6-8808-57b9fbe57e47",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/jquery.min.js",
        "code": "",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "a196363eb74c25c933f299295146df307342a676c713cd9bd0c606af7c6720cd",
        "deprecatedHashes": [
          "37ff10481d68a9f10a52fe86660387dfcfcd6632a00126d89bc7f6d15e0ce3eb",
          "b34a16a17d9b7c36a308b0e1ec467c8496a9517b17d77654230303c012131af2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325031371Z",
      "vulnerabilities": {
        "vulnerabilityID": "449b7b47-9517-4018-9a35-78b2a9b22e71",
        "line": "13",
        "column": "3",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": "(y.call(s,t))}return a\u0026\u0026!i\u0026\u0026(c=v(a).root)\u0026\u0026c instanceof e.wrappers.ShadowRoot?o(this,t):a},querySele",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "1c3caa1689542f02303a3c7d5c3e5ce720b331dad04acc31650c0268fef2d718",
        "deprecatedHashes": [
          "d5555ef232da1079879d3d10861e567dc489e4803a6efbeb59d0f3e754257e09",
          "55ca29323121c467a2f5eee9d614c81f9ce28f71604892d0e1967d6b0cc3f875"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325032371Z",
      "vulnerabilities": {
        "vulnerabilityID": "4911a661-83ad-4d16-96e5-0917d08c7047",
        "line": "14",
        "column": "18",
        "confidence": "MEDIUM",
        "file": "emif/questionnaire/static/bower_components/webcomponentsjs/webcomponents.min.js",
        "code": "(e){return e.parentNode\u0026\u0026e.parentNode.removeChild(e),r(e,this),e},elementFromPoint:function(e,t){ret",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "4e7f32e15db6c70ab78d74ac726ca59d6e2bb9d12180e5b5e321e67a3a4e38f7",
        "deprecatedHashes": [
          "b554c6e28d5877d621a12bd431771571846af6a6b31e5b2dfc81dfa993fe97e0",
          "b479944e37605282412b890d297b28dd1f4a581f9f02d9851bb250aede44833d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325044271Z",
      "vulnerabilities": {
        "vulnerabilityID": "010ccab6-1e72-4bef-8bf1-92107a586912",
        "line": "3",
        "column": "11",
        "confidence": "MEDIUM",
        "file": "emif/achilles/static/achilles/js/d3.min.js",
        "code": "(n,e){var r=n[1]-n[0],u=r/e,i=Go.bisect(Ys,u);return i==Ys.length?[t.year,Xi(n.map(function(n){retur",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "347c96845a55357186375829694faa1d69f23bbbae96beb4b7195a7074fe7b1d",
        "deprecatedHashes": [
          "233977bef5cabd26d5b18a40dbd3b3b2b5a65a0375eecf73e74f10a869295b43",
          "4e4783ccb118a6e586213e554e80a3c1b4fd99651eedc7dba9efd6463b7030e7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325055171Z",
      "vulnerabilities": {
        "vulnerabilityID": "68395c33-28db-4d68-a220-c677773ea791",
        "line": "3",
        "column": "25",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/d3.v3.min.js",
        "code": "(t){return Io(n.invert(t))},r.domain=function(t){return arguments.length?(n.domain(t),r):n.domain().",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "9acac77ae7d5fb9174607c4061b42fb119debd3327428c1fe838011f1b8c6734",
        "deprecatedHashes": [
          "e4f80febeefee4ca447812913c30333f616fec1ce52277d250f6ffadb1cd16dc",
          "72a740b083922c2e2512a31a7c7d7ab787e775ff3b01504ee8aeeab068ada40d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325074371Z",
      "vulnerabilities": {
        "vulnerabilityID": "05bfe3be-ecde-45a7-abfc-f270437e16d3",
        "line": "1",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "(function(t){var e,n,r=\"0.3.4\",i=\"hasOwnProperty\",a=/[\\.\\/]/,o=\"*\",u=function(){},s=function(t,e){re",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "93b8d3d83f3db0111fc88ddbfe20f7ce8f53d1c07544328741fa7ecde3bd4191",
        "deprecatedHashes": [
          "0060309b8c78c5524f0590fd39ce471e6467b21a1cbf0e87a9ddd64ee0f6fccd",
          "e2188546d28d75790f1395a778b6567320ef0f8363a5d97f58dc4d213dc34230"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325075271Z",
      "vulnerabilities": {
        "vulnerabilityID": "c2158e86-5d7a-4fab-b7c4-4fd5e71c413e",
        "line": "2",
        "column": "3",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "(t\u0026\u0026t instanceof h\u0026\u0026(p=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),o=0;3\u003eo;o++)for(u=0;3\u003eu;u++){for(l=0,s",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "25d3b376183b4f3f04a8e27a360bf7a99d8f2cb0f31cf5bc2c50f86c41e8ad33",
        "deprecatedHashes": [
          "057d155b641008ccfa804be0d773296aac48d4c3f41b219add1b7321cfd714a5",
          "413f27632b86ce1caa5d57b5e7f414e755be0d42490fb046718f476de7e5d63a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325076271Z",
      "vulnerabilities": {
        "vulnerabilityID": "b44bf43a-0d70-408c-9f2c-fbf9c9d23d0b",
        "line": "3",
        "column": "22",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "(n){var r=this._;if(null==n)return r.transform;if(t._extractTransform(this,n),this.clip\u0026\u0026m(this.clip",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "7fc1853c826a846c691bb620b0d6b4117261d74da1f3d7b528895c30ce2f5d16",
        "deprecatedHashes": [
          "449420659921255d2147b2e2a82d47a2f43fc9183100ecffde739d8a3966ee87",
          "6728a07d60e46b84b8899ae62de60d3219f2f539ed4eca82be2a5c9f751d2272"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.325077271Z",
      "vulnerabilities": {
        "vulnerabilityID": "8ed86294-820c-42ae-8c5f-3503a52fcdba",
        "line": "6",
        "column": "13",
        "confidence": "MEDIUM",
        "file": "emif/emif/static/js/d3/r2d3.min.js",
        "code": "(e.substring(n));return r?n+=r[0].length:-1}function oa(t,e,n){Xu.lastIndex=0;var r=Xu.exec(e.substr",
        "details": "(1/1) * Possible vulnerability detected: Insecure download of executable file\nDownloading executables or other sensitive files over an unencrypted connection can leave a server open to man-in-the-middle attacks (MITM). Such an attack can allow an attacker to insert arbitrary content into the downloaded file, and in the worst case, allow the attacker to execute arbitrary code on the vulnerable system.. For more information checkout the CWE-829 (https://cwe.mitre.org/data/definitions/829.html) advisory.",
        "securityTool": "HorusecEngine",
        "language": "JavaScript",
        "severity": "MEDIUM",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "HS-JAVASCRIPT-26",
        "vulnHash": "0f332bf62d925da406385d2792759203c2464b088aa72e10f6107cdd3fd06634",
        "deprecatedHashes": [
          "1a4810ddca25fcd8644b45415ed5f88af223c3d271d14a0f26c2905a203b6532",
          "31875c3a299106bfb60563918ddec146c9e78dacd7cee211596c0c53b6bd5606"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324060463Z",
      "vulnerabilities": {
        "vulnerabilityID": "66fe5083-5978-469e-86eb-967e9894b4b4",
        "line": "0",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "docker/Dockerfile",
        "code": "RUN using 'wget' and 'curl'",
        "details": "(1/1) * Possible vulnerability detected: MissConfiguration\n      Avoid using both 'wget' and 'curl' since these tools have the same effect.\n      Message: Shouldn't use both curl and wget\n      Resolution: Pick one util, either 'wget' or 'curl'\n      References: [https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#run https://avd.aquasec.com/appshield/ds014]",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "",
        "vulnHash": "549dcf34cb2e6057aae1a643d89e8ead6df421c78c9d09156ab0610b259f83a8",
        "deprecatedHashes": [
          "789634249ddb66fa135aba321d1a1f4c5479e6aca17aaee2f32f5735ffd193b5",
          "2478dd09f1af44d9085b2d7775360daf71cdce648e625961590540df63b36114"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324126763Z",
      "vulnerabilities": {
        "vulnerabilityID": "6f93784b-f5d2-4506-87cc-a2b7f2adcba6",
        "line": "284",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/accounts/forms.py",
        "code": "283             self.requestInfo = args[0]\n284         except:\n285             pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "8ea79af0790539dd663ff790c552e33b6928cb6d892bb1a9d1a319a65380f7d2",
        "deprecatedHashes": [
          "8212f38d938d44be87f38935cc9898b886942aa65603471d15460d9539354ea2",
          "408a67a67c45f37f2202dc0a96160222101c4e8f02791911a4f119249dadbaf2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324127763Z",
      "vulnerabilities": {
        "vulnerabilityID": "00687a3a-e554-4653-9a24-113789671d56",
        "line": "473",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/api/views.py",
        "code": "472 \n473         except:\n474             pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "50da8fb3369ac9f0a2c18c6e98fdb5ad7ef4ba2aacc6df10488db3906f2718e2",
        "deprecatedHashes": [
          "925b2ab0976fac20538004b5f0280e722abce21084064368b09dbac36941483a",
          "7b4cc8b267bc6c29f1237fe68ae72d15562a570a007839237b24c3d004f24ad2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324128763Z",
      "vulnerabilities": {
        "vulnerabilityID": "2ad3aa82-b643-47bc-9a1c-fb5251ca1346",
        "line": "714",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/api/views.py",
        "code": "713 \n714                 except:\n715                     pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "b16e8e4eef6b34f4862d9f529178ad5c17143155a3888fe6f4de6e5f6d822445",
        "deprecatedHashes": [
          "b83f272f27dda81106b64928b11b83252ec90814a7635eebcf58c42879d86270",
          "068d548c1789e113ddb241b93d41e024510c4784ca5721e475d304304ea15f0c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324130763Z",
      "vulnerabilities": {
        "vulnerabilityID": "98ad4203-c09e-4486-b9b5-335190aa083f",
        "line": "215",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/community/admin.py",
        "code": "214                 average += fingerprint.hits \n215             except:\n216                 pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "152d71e9be85a340e1c978e10eb9a4a2aa4b569e986f10e199494b581d17e874",
        "deprecatedHashes": [
          "dfbabcf193c2b62cee8353caf0e057ce8151894bcc7f194b20f43ee8223bbef4",
          "36667f09d35a6cdec8be9f90ce5c47ce9c5401914292f82a8843ae68be76b10e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324131863Z",
      "vulnerabilities": {
        "vulnerabilityID": "292d0117-d05b-4f38-8be7-c4f06f3e59be",
        "line": "167",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/community/models.py",
        "code": "166                         location = True\n167             except:\n168                 #print(\"no d",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "16201b4606fb8b686c85f4efbe87313f871fdb5b1eff2475b7787ba6117ecb29",
        "deprecatedHashes": [
          "ef0d847784ab706d7da999f8274b5dc0ac7cac649f4a1684de46b9f19d3c637c",
          "fb2f5b77387de57afd879886de09a26af66a410a5ebfdcac70067e0fb8eddc49"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324132863Z",
      "vulnerabilities": {
        "vulnerabilityID": "54da4220-6f99-44df-98e9-3ac53d09aea9",
        "line": "198",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/community/models.py",
        "code": "197                     print (\"*** Community Manager Enabled ***\")\n198                 except:\n199 ",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "22188042cc204a0c45b816c82c831df867f4bbe8a218953d1c1f68ba42193a72",
        "deprecatedHashes": [
          "cb350ddaf3794d7293d0390b47168bbf67ca4352b1ff58c6d7de6d88ad5405cc",
          "312553e28d68a2993efa71afd004ce78bef14980ba14ce120778e33a544add16"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324133963Z",
      "vulnerabilities": {
        "vulnerabilityID": "532f6b20-8555-46ad-b420-d4421baa564d",
        "line": "1131",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/community/views.py",
        "code": "1130                 quests = Questionnaire.objects.filter(disable=False)\n1131         except:\n1132 ",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "44cb24eae2878e544c648540891d4e50e524baf97eed9379c2b6490f0dbf91fb",
        "deprecatedHashes": [
          "01b165ca7a2cbc8ae719abd8511e60d2cebb46338c3f60a37c60d81363abb6eb",
          "cabc7cfeece48e086120908ec026fff221814c06902bb81d015efa0c44054c73"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324134963Z",
      "vulnerabilities": {
        "vulnerabilityID": "a3c8f5c9-b1e2-4c94-a6a6-7cff2e7f8318",
        "line": "64",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/control_version/github.py",
        "code": "63                 send_custom_mail(title, description, settings.DEFAULT_FROM_EMAIL, emails_to_feedb",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "ded2a41fdad46bc7d37c69bdd9446cccbe86dd71d9d466a73fa1433a377a1396",
        "deprecatedHashes": [
          "5ed7cdbc550f5500b49efdf76c10338180e0547ad2cd0405a6c0b6502ae3bbe3",
          "610f87bbc32a0c7f5584bf4a9aafaa08fe36153f967ebe4b33f6eed2fa742a83"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324136063Z",
      "vulnerabilities": {
        "vulnerabilityID": "6acfe234-b159-49e2-8a63-ec7a0ecb5b3b",
        "line": "379",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/docs_manager/views.py",
        "code": "378                     cd.save()\n379                 except:\n380                     pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "e40556bdac0887d64b78547140507dacb7e71f9700c0d47789f87177e15c2319",
        "deprecatedHashes": [
          "b9e7d57c331d941f5bcb76f0131324197cf4e3e4e1097e07c5cd99cd8e4443f5",
          "25946ce17080d63a80d66552f1c3621a2e69ffd51cf5a9869ca5a4bed8b198d7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324137063Z",
      "vulnerabilities": {
        "vulnerabilityID": "e0ea10cd-e5d9-4f6d-9310-5584327fb7ab",
        "line": "410",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/docs_manager/views.py",
        "code": "409                     cd.save()\n410                 except:\n411                     pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "57d10f9d9aff0417eabfa3a2848ba6d3ac5f068b3eec9bd9dcac2d0977408ee5",
        "deprecatedHashes": [
          "17575954eeddac07fcbdc746cd105afb38d0f28abc9a7f14f24cf14547b70e0f",
          "c7d66f9d3d7f9472b95335703a893d53f06d327d6a3ffd09d7c9f69195ce3da8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324138063Z",
      "vulnerabilities": {
        "vulnerabilityID": "fd8553a7-29f1-4794-b8b2-74ce653f5290",
        "line": "446",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/docs_manager/views.py",
        "code": "445         folder.save()\n446     except:\n447         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "2ae1a8c11ad983b3a59634c46089c54c46126017de7c0a1fee5db9424213a95d",
        "deprecatedHashes": [
          "7f5b5efbf6d822a2ab7a7bdf860f504c47e4ba3bc7b15d85729e7dbd601b2054",
          "68f5161eb2672fb77ced161e93f2a5e7f0c3bd33d869e39f5af1b51d896bc2cd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324139063Z",
      "vulnerabilities": {
        "vulnerabilityID": "c090ceaa-6f05-48b4-8bc7-276f68655133",
        "line": "471",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/docs_manager/views.py",
        "code": "470         comm_file.save()\n471     except:\n472         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "1337402a4121251e20caddaf5071ac199940347fbe86569e7f6f66f77bcc861b",
        "deprecatedHashes": [
          "13a404d0ce52b5e4c8e2fd9ea071b3df054596cb29c6e88e5fbac44bef7f78ef",
          "ac501997602ef6dc0275f032d5452079756e85dc84c463bdab7051d03deddb2d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324140163Z",
      "vulnerabilities": {
        "vulnerabilityID": "96066295-8ed5-4c19-a4a6-45518b651493",
        "line": "509",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/docs_manager/views.py",
        "code": "508 \n509         except:\n510            pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "0455cc6f712c3b595946cf97e4f932938ebd8842b63823ae0ccb4812a5fce6a6",
        "deprecatedHashes": [
          "9f1fcd99e76dba89f2011feb5beabff1f8ee79a589317566d827d518f510976b",
          "53ad01f6eeabb2c88c886c131fcdd04f4a771c46ffefb2650236169f58231cb7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324141263Z",
      "vulnerabilities": {
        "vulnerabilityID": "86281573-0321-4940-b9fe-bea73c3e62dd",
        "line": "518",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/docs_manager/views.py",
        "code": "517             folder = Folder.objects.create(name=folder_name, description=folder_description, dep",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "99b0ca1ed551099d805c0ba9de1f533aeb5d499ce109604721340b781a7d4d95",
        "deprecatedHashes": [
          "fbc6ee992bd5eb8ba514f0ffbcf174b01b64e82a4910bba6022a35fd66fb63b6",
          "9bbf1e054307e204ee51f19c5ba2ab3c1bcc353923cdcd43581bc422bc1bca1e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324142363Z",
      "vulnerabilities": {
        "vulnerabilityID": "6db7c4d5-b82b-4e8d-b1b6-4f148bc9a43b",
        "line": "33",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/emif/interceptor.py",
        "code": "32     def process_request(self, request):\n33         assert hasattr(request, 'user'), \"The Navigati",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "dd981d4b6d630cdd01f0c31ca4131dc162b7ddb8f4338eeb50b8349fd8b8d0e7",
        "deprecatedHashes": [
          "3a7e1521a0b5bddc2de53195af56f7ecbbbe4f12fdcb773e43732289f4d06666",
          "99b9996edca63eb067ff7f40da04e52131e5295dfb4d045a8d65f6e636ea02d4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324143363Z",
      "vulnerabilities": {
        "vulnerabilityID": "eaeda5a1-e098-4e17-9abf-6c7d071cbd85",
        "line": "44",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/emif/middleware.py",
        "code": "43     def process_request(self, request):\n44         assert hasattr(request, 'user'), \"The Login Re",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "e56fc9198c7a34fb71bdd4cf28f6d018e6990bffd0bb94a9439df7c94872a3b7",
        "deprecatedHashes": [
          "3e8e07012876ee72c22dd2c48dc09431d3bf9d08fe92604f32c79a0cf2cd034c",
          "20d43fee1d5940b85dd0041c49aab1c968f0a86651af3b11fda6cf1062feeebb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324144463Z",
      "vulnerabilities": {
        "vulnerabilityID": "4560f813-4a59-423f-a339-5d6be42bb0b7",
        "line": "63",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/emif/middleware.py",
        "code": "62     def process_request(self, request):\n63         assert hasattr(request, 'user'), \"The Profile ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "abc745407d2d270e443211daa3c5955d45c9ab2f54784813b789274b848313de",
        "deprecatedHashes": [
          "f0cb1f484d21574ef2332d293e6b7a0ff67b341f9a84fe1749d173cb6059095f",
          "894ab743071262152dd96c6f21b4b8bb30407af513f0e1b950093755fb7e14d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324146363Z",
      "vulnerabilities": {
        "vulnerabilityID": "9b327959-5897-4082-be23-ac988479887f",
        "line": "43",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/emif/utils.py",
        "code": "42     hash = hashlib.md5()\n43     hash.update(\"\".join(chr(random.randint(0, 255)) for _ in range(16",
        "details": "(1/1) * Possible vulnerability detected: Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B311",
        "vulnHash": "7a90ff5df75d23230daffa164a446a931e6dde5e893aeedeffd74de5b865bfca",
        "deprecatedHashes": [
          "6e5de6498e8a6f9e4808bf4206bb9368b61acdb84ea24920260ba26fe0e7c033",
          "8daebcda77d5de0e91a988015c6fd3c2d781576af942ca402d414f0c4205e19e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324147463Z",
      "vulnerabilities": {
        "vulnerabilityID": "4f32f5e3-d5ae-4d36-9166-76645bba140b",
        "line": "210",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/export.py",
        "code": "209                 del tmp['_state']\n210             except:\n211                 pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "1995b9316ba3fd8f5d7abb3d6d04864f3fd599568ce97410d0a5bc895ec2e984",
        "deprecatedHashes": [
          "a76e336fa3b92f0c0d67df3f5e229798bf3a0b06b4ada1d0f67a359a0865c53b",
          "b81348f0584e7508bdb30bdf3c3f5488fb0bed5d9329038301c42e8869683077"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324148663Z",
      "vulnerabilities": {
        "vulnerabilityID": "63194a7f-c011-4c73-907d-394223d1ee75",
        "line": "124",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/listings.py",
        "code": "123 \n124     except:\n125         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "80b21a10aaedcc4549183a4dcff8ca09dbbb129231bdfbbb04330bcaa6e9d5e1",
        "deprecatedHashes": [
          "d147d05a189041438c0c5c47aa5061d026d231fd9ff3687cb0da72dc85d9a722",
          "760bcc65947458c8576d532427d4d548418e1217917b36e2108307c3148abc0c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324150963Z",
      "vulnerabilities": {
        "vulnerabilityID": "c013a3e5-9672-4d36-9d83-2b1e07768a07",
        "line": "68",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/services.py",
        "code": "67 \n68         except:\n69             pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "bc7fd7246966ee897316dbc821b6deaaac97c92a1202255bb17463df07837b2f",
        "deprecatedHashes": [
          "b26feef442043dca0b87e3b5c1f9d2a36e910c285f372a591516e0807f01fae8",
          "7d21f2160d7b06ad41906ba2c3af8e9f1a423cba84ac0f19ea2ac0abe41a30c0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324151963Z",
      "vulnerabilities": {
        "vulnerabilityID": "73270ba9-bf28-4db8-9866-04006467d79f",
        "line": "191",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/services.py",
        "code": "190         return comment\n191     except:\n192         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "01dda49886e349dc00ad8d32c5c63991f16273f3f3a6d2f5570c019d88329840",
        "deprecatedHashes": [
          "4d4daf41f64e9984536c8713810f2ff421c699cc33200c5843d175f16a43bb3a",
          "0260aa8ec48183dcad21393513e67204f8082af4f3ac3343484a93a16f2c6a39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324152963Z",
      "vulnerabilities": {
        "vulnerabilityID": "7855346f-d2c1-4253-96a9-a71c794cbb9f",
        "line": "239",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/services.py",
        "code": "238 \n239             except:\n240                 pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "4d633313aa43037bb4e6faed3e0371657c3b15739de3eecb891d043542ef3302",
        "deprecatedHashes": [
          "410245fc105fba4729a1844b9fd21df460dac46370945a08a18dac8efbc74613",
          "628aec80dc9fb877f7aa21f7703e99a5eea8ee9a9bf3faa222286c4b38a881e8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324153963Z",
      "vulnerabilities": {
        "vulnerabilityID": "07ffa088-641a-49ee-be54-a6681f474644",
        "line": "293",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/services.py",
        "code": "292         return value\n293     except:\n294         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "2d4d83f12825586a41a1155f45c32b4ca81e52c3349ecc9b9684510eb7d761ab",
        "deprecatedHashes": [
          "a2a598ae08a2f5f59def63b86e7713e8bb2b79fd17888deb310aebb7e68b765b",
          "3f07f36de005059e783daff33d6d183dfe4b226762f8861cef74eee0ce5217fa"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324154964Z",
      "vulnerabilities": {
        "vulnerabilityID": "651bad88-f7c5-423e-aa7b-516d1d96e990",
        "line": "668",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/services.py",
        "code": "667                     uploaded_paths[target_key[0]] = None\n668     except:\n669         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "0e1d5bd09789da8eab01212de98a8dbdeb0e605feb71d7c0683b4be9eae55ef2",
        "deprecatedHashes": [
          "ae23c89ced61373808dcf1ee7e5e3e4393b71b91e6ce7905e29647dcbab224fa",
          "4b632897b772b23488ecef5eda7e3a66be32e7d2f2aaa69e3a5a6c01c959b0e5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324155964Z",
      "vulnerabilities": {
        "vulnerabilityID": "2892124c-055a-482d-b454-a694c0c1a6e6",
        "line": "808",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/views.py",
        "code": "807                     qs = question_set2.questionnaire.findMandatoryQs().sortid\n808               ",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "0e51615ee795cee70ebe05bb2d8c8c87b81c46e34e2312707732638de22f5ea8",
        "deprecatedHashes": [
          "8320471dc7cbd3598fd40e849814767f30e67808d8ab4195f7399548aac48119",
          "d94ebd6a98c4fb64837fac367798758fd70f85dca76a68be46f66215ff073876"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324157064Z",
      "vulnerabilities": {
        "vulnerabilityID": "15b9583f-8a98-46b9-87cc-52dc59f4faba",
        "line": "1044",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/views.py",
        "code": "1043         name_bc = name.encode('utf-8')\n1044     except:\n1045         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "fa8c0b00549abf60728564d6855e7b40b935bc1c3de49b9fc46b0fd12d4a67d7",
        "deprecatedHashes": [
          "1ea0b2b6112f4938ffb812f63ddc4fb31106e5b5effe25c3f2359a980009bd54",
          "8ab61a6e5c51ede996e5b6175a6a96fc086410ff3f28fbb4ccccc574f0d2e7bc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324158264Z",
      "vulnerabilities": {
        "vulnerabilityID": "78d6a95b-9cf7-4cf1-b9bb-7b5142389ed9",
        "line": "1152",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/fingerprint/views.py",
        "code": "1151         pass\n1152     except: \n1153         # Anonymous user - it is a public link\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "3d006a6ef6bda4b3f2118481e14711a9d11b741d2b9bbe753fbde47b6ec572cd",
        "deprecatedHashes": [
          "9cdbad568611d1dd29b3687934caefc571dc677b298e048f9e29fb4fdf6836ad",
          "99e9f6a374b46c512e6fe63c76263726a1500950fe7796486b557932631a4649"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324159364Z",
      "vulnerabilities": {
        "vulnerabilityID": "c3fafc3b-acef-4e0d-b511-861322ab77cc",
        "line": "27",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "emif/insert_script.py",
        "code": "26 # Make this unique, and don't share it with anybody.\n27 SECRET_KEY = 'j*zdirg7yy9@q1k=c*q!*kovfsd",
        "details": "(1/1) * Possible vulnerability detected: Possible hardcoded password: 'j*zdirg7yy9@q1k=c*q!*kovfsd#$FDFfsdfkae#id04pyta=yz@w34m6rvwfe'",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B105",
        "vulnHash": "951b246f9f290729f5a776a7d9f9eb3ca6d7221d7167a59f096387f3b28b1b26",
        "deprecatedHashes": [
          "34da66ad4f20693dc514379503deff660e8e08f174522118b965d0432ed4c9e7",
          "9ba9868fd89916c05e8b07d5319d060a0f981d60a6713ba5504a0e4d3786c815"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324160464Z",
      "vulnerabilities": {
        "vulnerabilityID": "c1b20031-3c09-4733-a3d7-c17a12ff0b4f",
        "line": "31",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/insert_script.py",
        "code": "30 \thash = md5.new()\n31 \thash.update(\"\".join(map(lambda i: chr(random.randint(0, 255)), range(16))))",
        "details": "(1/1) * Possible vulnerability detected: Standard pseudo-random generators are not suitable for security/cryptographic purposes.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B311",
        "vulnHash": "0e97da435ff90296dfaebe9ef5d69fe621cd6f3bdd4c83b13d30ea6fdd69a8e3",
        "deprecatedHashes": [
          "963d99ca2e93d845b5823a825ae67eb616697ffe2149579467dcf08d4e1a3171",
          "9f084ea8bb6d64a5407377c259136e9a5708281ccd8ab6cfa69fc46dca14e058"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324162164Z",
      "vulnerabilities": {
        "vulnerabilityID": "84e91c13-36ca-45c3-bd13-d99ca82bada7",
        "line": "39",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/public/views.py",
        "code": "38         del request.session['deleted_public_link']\n39     except:\n40         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "f5c6ad5d54e5ea621b8daf02fa09e5d84bc00a59a517dd8be04614fd99ebc4fd",
        "deprecatedHashes": [
          "8effb2a70bf9c60b00628982517da2759dd74fe204ee7935f2e71b9b892e461b",
          "82912b7497e3f8450a6ee1a4b22a8c31fe2b3ac99b8fa04a63289fefb985eefb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324163164Z",
      "vulnerabilities": {
        "vulnerabilityID": "0486d04c-285a-44a8-afd2-2893c4435352",
        "line": "305",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/questionnaire/models.py",
        "code": "304             checks = question.checks.strip()\n305         except:\n306             pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "aff1548d48caa39f789d4eedf339e8f2c4b65697ec1150090994b0a169717c09",
        "deprecatedHashes": [
          "5df219d7369ed4de2514b945b5a83cf24afc8ed61d5e310e946b0a5e9421d3a5",
          "b3f9d49aa51a4e6a98906b3bbb93f17d8f6dd5f91bc2f01e15839c91127cf1c8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324164164Z",
      "vulnerabilities": {
        "vulnerabilityID": "d7850ee9-3ecc-4abe-bbd9-8d0b1be471d1",
        "line": "108",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/questionnaire/qprocessors/timeperiod.py",
        "code": "107                 carry = '\u003cspan class=\"highlight\"\u003e'+carry+'\u003c/span\u003e'\n108         except:\n109      ",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "dfc2243bee061cf4116c287aa26bb9181bdbbd73ba705414751bd44093225878",
        "deprecatedHashes": [
          "ec96b11473da7e2cd2c0c3f6d92d0ba869ce9156f272c6b64aff2f0eac9899a2",
          "ea9f32983260c423ab6c9fd983c2da5c49cbf0e51c6c377c36d2c472dedff3ac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324165264Z",
      "vulnerabilities": {
        "vulnerabilityID": "5b986fd1-4ad1-4dcf-84f6-25668a2251ed",
        "line": "32",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/questionnaire/request_cache.py",
        "code": "31 def get_request_cache():\n32     assert _installed_middleware, 'RequestCacheMiddleware not loaded'",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "13d74e8dddfac3602b2a8f205d977912957fc7ffe2b1bd0a21bc53759fe5cf45",
        "deprecatedHashes": [
          "027af3a059ba269e1d31ce69fdc496a3c7fa0033f5630cde76e1e371a8a9fec8",
          "db0bd16d5e3cbf524d81fef5a788d768f4f136cef0770da20a640d1527474c24"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324167464Z",
      "vulnerabilities": {
        "vulnerabilityID": "57a8f431-bd27-42ad-9223-333d39d0d227",
        "line": "118",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/studies/views.py",
        "code": "117         study.databases = ','.join(database_names)\n118     except:\n119         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "8f252d6781194370b9ce14b57d04377658a520a07d8e256613a4bbb6391ca3bb",
        "deprecatedHashes": [
          "9e25bdb6c92f97a6de966849103c9ff0c4515b96b2cbd368af39c13304ba1ccd",
          "656f3f9ab50b73db46273f3e46e2f5eb563b5aac15b7859d92b419318925f021"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324178464Z",
      "vulnerabilities": {
        "vulnerabilityID": "d5bb6689-00be-4f3f-8ce2-c446c2d03658",
        "line": "126",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/studies/views.py",
        "code": "125         notify_study_submission(community, user, study.name)\n126     except:\n127         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "a1a2c31491c8346769e94d501303efbc7b8807bda3337490a3b2fae87c765e65",
        "deprecatedHashes": [
          "6326a7bc931590dfe4e2731633e09056e496a3b586f657229bdb42e3f0796f87",
          "b209f35595d4d7842d1de2cb19d0bcce2485e76258c182893e35fb886a85b20c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324179464Z",
      "vulnerabilities": {
        "vulnerabilityID": "e5770f99-6dc7-4479-b145-e2328a8cc1a6",
        "line": "194",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/studies/views.py",
        "code": "193             message.users.add(user)\n194     except:\n195         pass\n",
        "details": "(1/1) * Possible vulnerability detected: Try, Except, Pass detected.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B110",
        "vulnHash": "5d557a47fa4f447d510e7e00d1fb53ae44bcfecb0a8b1f8a60f7c916239022e3",
        "deprecatedHashes": [
          "3aeb2200de99309147bc78e167bb1b8026c7a12c6d3b92681133fe0046400224",
          "1cd834378dcd98f3ff276812e291f5fee69830fcac3521217e42c8a84e196b19"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324180564Z",
      "vulnerabilities": {
        "vulnerabilityID": "79f9ec49-6a70-411f-91c2-91e896e11682",
        "line": "37",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/utils/export_answers.py",
        "code": "36 \n37 import pickle\n38 from cStringIO import StringIO\n",
        "details": "(1/1) * Possible vulnerability detected: Consider possible security implications associated with pickle module.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B403",
        "vulnHash": "e5fb1cbbf6c69cbabb6daab9d03861989d730d8adcc4b1bc48e220e47331b473",
        "deprecatedHashes": [
          "343ff2153364f916936c9c2ffc3fe4337c55f716fc6ec153b7c1fedf52330551",
          "76d695038df83a1e7044b3ca8ef567a1d5149920826e320fa62a23322955776b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324182864Z",
      "vulnerabilities": {
        "vulnerabilityID": "7d5947fd-dea7-422d-a881-1d994977970b",
        "line": "25",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/utils/import_answers.py",
        "code": "24 \n25 import pickle\n26 \n27 pkl_file = open('fingerprints.pkl', 'rb')\n",
        "details": "(1/1) * Possible vulnerability detected: Consider possible security implications associated with pickle module.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B403",
        "vulnHash": "ea1b10d913ba374f01e219cc3aa669ddee2ad439cabbe24f3871d3b2ee421f29",
        "deprecatedHashes": [
          "e3cc1325c6225ab3fb315457f2bdc69786cac48cf16c09036247a1ed77315d06",
          "c9ac2b4481f5b9d0cbb6a6695471c741f420f625bd84ae93753c63581f287d51"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324184964Z",
      "vulnerabilities": {
        "vulnerabilityID": "030ef17c-7777-4af5-90f5-857e508c0839",
        "line": "20",
        "column": "0",
        "confidence": "HIGH",
        "file": "emif/utils/purgeSolr.py",
        "code": "19 import sys\n20 import pickle\n21 import time\n",
        "details": "(1/1) * Possible vulnerability detected: Consider possible security implications associated with pickle module.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B403",
        "vulnHash": "651b267f7e4671fc5f07f37584f414eb1b8f4acd8e6941ae08bb48ea827fd469",
        "deprecatedHashes": [
          "7285612bfa375e9c1765a80831115a3dc331deb1faa34b00bcdfdd26c23788c1",
          "989558053995545e9f8a0f742469dca2f6ad505f5200b0a135eaffab450e12b6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324187364Z",
      "vulnerabilities": {
        "vulnerabilityID": "85727500-4be7-4ef8-a43f-01867c6846ac",
        "line": "35",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "34         # Certify access to community\n35         assert data.community_name in self.driver.page_s",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "e507db395628b0e394baf43a901a20f44f197d995b68320323ff94aa509602fc",
        "deprecatedHashes": [
          "d4508159707b5ad971b31a5f36f7033c533584c952c462e52c7c47fc4cc8d59d",
          "b09325298c73a51548745d8cac2394daebd9d47707c14376cfce69245b4a8d7f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324188364Z",
      "vulnerabilities": {
        "vulnerabilityID": "c6c7c04b-ccd5-4372-aeb0-a72009776962",
        "line": "36",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "35         assert data.community_name in self.driver.page_source\n36         assert \"sorter-database_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "192c7ab5e946a93eb0003db0b8b4009a68a4658a2ffe8de8effd7086c1e00d02",
        "deprecatedHashes": [
          "22567fa61e20ae75c8ae9682ea80971921efb071946d1161920dab168bb00218",
          "c1cf57e9542e730abb52ad38b8fa6fe252179a613971e5cf302bea7936f6925d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324189364Z",
      "vulnerabilities": {
        "vulnerabilityID": "02244321-51cd-4f48-b061-4f2352ddb402",
        "line": "50",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "49         # Certify join button\n50         assert \"JOIN\" in self.driver.page_source\n51 \n52         ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "b46e05d61f86b7a5db9973ad8c7ed4779513def2e329d0f8896163839b70a3b7",
        "deprecatedHashes": [
          "e809a2eed0e40e535514165e18715158096e1ca593b1f1fa8fdab8ba0797980d",
          "5768410ede1b200d81d194a0984fb38b7d843f93aff584871797deee4b70fb30"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324190364Z",
      "vulnerabilities": {
        "vulnerabilityID": "90f7caab-575e-4b0f-906a-3edf288541c2",
        "line": "55",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "54         # Certify denied access\n55         assert data.community_name in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "833f62d7f62fdac562ada2d594d873c6879e0d4563813c2c56920d25c48474fc",
        "deprecatedHashes": [
          "daafe541d772cb78c6b8e0e3ff1ceff77b805fb4aefda849170c015e5353fc68",
          "3c8de2d614abeeac574552aed370f171bfe5443bb7d32fca2e13468193c81b47"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324191364Z",
      "vulnerabilities": {
        "vulnerabilityID": "8710cb1d-fbd0-4ff2-9cf0-ffba2327e256",
        "line": "56",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "55         assert data.community_name in self.driver.page_source\n56         assert \"sorter-database_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f83a444bb00bdb1edde49183c5e5322a970497bfc43debe0ae7223a78598ac03",
        "deprecatedHashes": [
          "39a1c9c626d78418608dad039fb6482885b18523ea4bcabf34c34c422899bcda",
          "ac42c14f12f7875c1f1e3b54212ad38e6992e649a0a196213a470868c0d794fe"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324192464Z",
      "vulnerabilities": {
        "vulnerabilityID": "40ed8c76-3a0e-40b6-84b2-a9b70e4d2ac6",
        "line": "66",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "65         # Certify can't OPEN and request is still pending\n66         assert \"OPEN\" not in self.dr",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "60d49b26cb9ff914b9cf8e9757eec97373710997f45edfc02484acf3235ebf15",
        "deprecatedHashes": [
          "b14bccfc59ab238f6133d8d3bf2571294a099192f858104ecdee376610cc91e5",
          "ead91b19bd70f442c932fa12779b1dbd1a31b8900b168fedc5cd9262f1f514f7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324193564Z",
      "vulnerabilities": {
        "vulnerabilityID": "4cf914d5-9c0e-4281-bf2c-05f251505871",
        "line": "67",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "66         assert \"OPEN\" not in self.driver.page_source\n67         assert \"PENDING\" in self.driver.p",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "3f123ceec3733afaeb0344bddc88e9ce9b715837fdd0767b1dca7460e9d06912",
        "deprecatedHashes": [
          "3f39e9ceff9c5382785ba35d28da31a4258ec6ba61493f9fadb81263102d12de",
          "2c069f5f02855e7fd38c3e0923057f1d8dd5cc905ffd2f2f885b2dc3bf4caf8c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324194664Z",
      "vulnerabilities": {
        "vulnerabilityID": "96832dd0-f38e-454b-a913-890fe1afa5ca",
        "line": "79",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "78         # Certify join button\n79         assert \"JOIN\" in self.driver.page_source\n80         self",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6a70b4babb7b5fbb27326e2d7d5f61c9660608fed37a0a8fefe71dc2c68cf782",
        "deprecatedHashes": [
          "0fc2c9c97c5cff3661624c50a277dd1dcd33b7b67fe6748af34e7918b1a26b2e",
          "4d4c85eb4740213b7439adddbfb7a8a6bbd917709ad56d3c022ccff9c2df5fd3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324195864Z",
      "vulnerabilities": {
        "vulnerabilityID": "3ce0c1a9-7155-407d-a4f6-a6d185c0cf04",
        "line": "89",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "88         # Certify denied access\n89         assert \"sorter-database_name\" not in self.driver.page_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "d508744348196c34d1533293697af0e5fdd973ab54c85e7786cda7cd0b3bcd05",
        "deprecatedHashes": [
          "5d6716c8321a35bb08bb3790d8fa2d56cff7d8e337cc5215fca1ea2673bd4fb4",
          "14adacdb489c159aaf31b7a90b7311b5c27d34b91788d09d23617e9f244e129e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324196864Z",
      "vulnerabilities": {
        "vulnerabilityID": "b5686e21-90a9-418e-a984-b2721717129f",
        "line": "92",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_community_access_control.py",
        "code": "91         # Certify redirect to join page\n92         assert self.driver.current_url == join_link\n93",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "24e12abb57c904587b47dbf1d58ff78bc1ca65f19c2ae6cf0dfc3ba885da5252",
        "deprecatedHashes": [
          "31df8c5e735f29f539f62fd7e674ac60c612d39b961099d6d9721249c42343b9",
          "943105f74e05f91e8c00ffb515a48804b7ab5a5ab686d69cd8df29b883048315"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324197964Z",
      "vulnerabilities": {
        "vulnerabilityID": "fc1d0c6b-ca41-40de-a318-93e39903ec94",
        "line": "42",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_add.py",
        "code": "41 \n42         assert data.group_name not in self.driver.page_source\n43 \n44         # Add group btn\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4fdfec7c52b29de47b0a82b43f831042ceb9da45b280532cf1a4dd313da90171",
        "deprecatedHashes": [
          "a5d751cc9a5f1a10450c55d250cd46e7e65134afacd58b64bc6a1056016e115a",
          "26ac54dd41b2689ec63a013066526180863d5d3d42a127d3eac56bb1d9ffd94d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324198964Z",
      "vulnerabilities": {
        "vulnerabilityID": "025d4fa3-0e2b-4b2e-a9b5-ecade293caa4",
        "line": "69",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_add.py",
        "code": "68 \n69         assert data.group_name in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "430d0e528c17f909b98afb9495136f9594c7af82364628753bf4203f980b19fc",
        "deprecatedHashes": [
          "f5ecabe5105c28b3c6251d4adaf3ac97a0709dc6ed305441f55e702f43e53528",
          "94457cbf9eb1a008605de9e4344dc5a8f507fb896c77b7b247b3bf14854f29d4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324199964Z",
      "vulnerabilities": {
        "vulnerabilityID": "5b4edde2-60ec-4ac3-94bc-f37bc79ed153",
        "line": "43",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_api.py",
        "code": "42 \n43         assert \"API Info\" not in self.driver.page_source\n44 \n45         self.utils.logout()\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "b59e34f7859363a01755d6d22753561471d4320d68a80bc69f18ab074c30a109",
        "deprecatedHashes": [
          "37ee20044b4c92749854a1d58623bf45682730322a7c8600e76411e4d35be463",
          "95d2df256e5f4dd803a0d18a35e4fa149a3376785aa7fb819c296710a601fb1d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324200964Z",
      "vulnerabilities": {
        "vulnerabilityID": "d7ed17bb-020a-498f-a22e-b74ad2e11498",
        "line": "96",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_api.py",
        "code": "95 \n96         assert \"API Info\" in self.driver.page_source\n97 \n98         self.driver.find_element(",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "3562ac07c294e44881f19b4908c763dd86c1d745c4a1f7cc35dd5e236169bfc6",
        "deprecatedHashes": [
          "73a34d01a373198f68bec7f5fe402005297fef1d01a7800b583f229f6990f63b",
          "6b372d22d4487bfd9729cf7f6e4a332c92e29f7c282dfe8893187827974152ab"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324201964Z",
      "vulnerabilities": {
        "vulnerabilityID": "6610370d-dafe-43b6-aa8d-6688564729b1",
        "line": "100",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_api.py",
        "code": "99 \n100         assert 'API Info Details' in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "3fcfad4f11de62d0de8a33c8f428fc4200b9d52bcbc69d8f7b5059750fde31c0",
        "deprecatedHashes": [
          "1fcefae8128d1865836ec7fdb80d381e1cc3852ac604a8f6ccd7c85513a17829",
          "152a1969549579696db5f83a4037d222df2abea952929e819fbf3d8f5ee48fcf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324203164Z",
      "vulnerabilities": {
        "vulnerabilityID": "5ee46e62-45fe-449e-a364-539ac2af749e",
        "line": "43",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_editors.py",
        "code": "42 \n43         assert \"New Entry\" not in self.driver.page_source\n44 \n45         self.utils.logout()\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "974f7a02b5df4a8111641f70063401a311836aa3681bbeab99794ca22d7a945f",
        "deprecatedHashes": [
          "493c692aed655ee127881d8a9299a63294c28727a70eaa7bfb08fc18f84dc220",
          "803407525b69b543d45ab2312345e54878b44efd89a55c910398d9c2a3a2f959"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324204264Z",
      "vulnerabilities": {
        "vulnerabilityID": "deff85da-3607-4d82-9ab5-8f94bc3cad11",
        "line": "96",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_editors.py",
        "code": "95 \n96         assert \"New Entry\" in self.driver.page_source\n97 \n98         databases_menu_button = ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f2e29f399364001e558d2e86913303196e41d742c5e43a4cfc776cd869f40ac8",
        "deprecatedHashes": [
          "76bedcd479642eea8cb35d1a42a7ba913582e89a854733c485498130efe07889",
          "c75124402d7e9839cea923f3c8087ee0fe352bd8ea751649f1dfebcc57fe9706"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324205364Z",
      "vulnerabilities": {
        "vulnerabilityID": "b4af9b25-0232-4f60-b6e1-8bf3c5b0b1f1",
        "line": "102",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_editors.py",
        "code": "101 \n102         assert 'EHDEN Questionnaire Database' in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "21378c4d31efd219257cfe1acfc508abb1020e56cd4287b76b3d6d54234ef570",
        "deprecatedHashes": [
          "2613d5c0b64311ab7360107cbc22d418015e908e1905fae60366b412646c68a4",
          "a585102e93874730ac502c110aa228250f6523832b25819f93509f8f32b54bc9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324206364Z",
      "vulnerabilities": {
        "vulnerabilityID": "557dcb50-04e2-4c6e-81c0-7508afc50eb3",
        "line": "45",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_plugin_permissions.py",
        "code": "44 \n45         assert data.plugin_name not in self.driver.page_source\n46 \n47         # Manage tab\n48",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a4c50ff5dcdb2d37e778f7c8b773291b27e05d44e8a426deafb82291b94735f4",
        "deprecatedHashes": [
          "fdfa35c9b6e44d38c0b0ca292afb9161f5da9dddf9213d16f04af03a8ba73c95",
          "ab3dde6b80538c08b5d4a3bb85ce168f09349524769dff68ba0dd69fdab1fa9a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324207364Z",
      "vulnerabilities": {
        "vulnerabilityID": "bd109325-1798-461a-807f-328c9f85bc1c",
        "line": "63",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_plugin_permissions.py",
        "code": "62         self.driver.find_element(By.LINK_TEXT, \"OPEN\").click()\n63         assert data.plugin_name",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "1b98dc04280aa56a342b870498f3c64e8b4704b462a9831e96b56dcb78c1aa8e",
        "deprecatedHashes": [
          "e64868af81ca1e598c9e45f3f567c531ad341bb972f1dcf7b466a29ee62e0ea4",
          "b24aa49cc20556239435b8609716c87416383752ec66512f285237f3c8529a81"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324208364Z",
      "vulnerabilities": {
        "vulnerabilityID": "cb04e217-41f0-45ef-a346-3ad6e9d56e1e",
        "line": "77",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_plugin_permissions.py",
        "code": "76 \n77         assert data.plugin_name not in self.driver.page_source\n78 \n79         self.utils.logo",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "285a9c83f20707ec9d6791aecb1f12a0a57e599bd0a56875db613e89c51df5fa",
        "deprecatedHashes": [
          "b8b2b2007f20b1afb12248891f46a61fc22d879cdd3876cb1706dcb7269c9e15",
          "97a60a7e4ce8c014d21d0d619de7ebf1c7df565389533f4db3c465ab3297c76c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324209464Z",
      "vulnerabilities": {
        "vulnerabilityID": "34314511-7272-49cb-be46-c771e93eacd0",
        "line": "150",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_group_plugin_permissions.py",
        "code": "149 \n150         assert data.plugin_name in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "eab5ac91cc9bdf4f54dbd157ad1392e6e1f24a0096b72df9e0243ab5e4783329",
        "deprecatedHashes": [
          "5758116df939b919bd8af766ceb8ca7469ad614b167c89643997a58e01268272",
          "457095eeb159b0ee6d06ac3a00b7bbcd116565bc17c84d4f125ecc957908e487"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324210564Z",
      "vulnerabilities": {
        "vulnerabilityID": "84550b81-1ac8-4473-8679-61c12e54b505",
        "line": "36",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_plugin_add.py",
        "code": "35 \n36         assert data.plugin_name not in self.driver.page_source\n37 \n38         # Add Plugin bt",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6b034295bc212112e11bd3702c8bb4323abea4e824e5d94268ed568cd217aa34",
        "deprecatedHashes": [
          "0b5753b613a5eb9a1e637ac934f3f1812465194733b02d257a711303ac184a0f",
          "486af9a5f364d147a4a87f4ee32848cdbf2641baa5d1f795d2eec0f6f198d805"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324211764Z",
      "vulnerabilities": {
        "vulnerabilityID": "7363930c-f538-41a6-9435-2066605e422f",
        "line": "67",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_plugin_add.py",
        "code": "66 \n67         assert \"This version is approved, any changes will undo this status.\" not in self.dri",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "035db704ec521e1e82542c0c5a3880139b24997d72c63f13f4b79b4d61ea675e",
        "deprecatedHashes": [
          "733dfd1280e4758619c3d4664d01a0f8d2fe06816deb6da7b2fd5907cfeebf20",
          "700c317d35ee6eeaa3ef97e59314e3f1f0c951ff02847bc2ae6120b054dd8f9b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324212964Z",
      "vulnerabilities": {
        "vulnerabilityID": "0821a63b-03b2-4384-a7e2-9f3960e77aa3",
        "line": "78",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_plugin_add.py",
        "code": "77 \n78         assert \"This version is approved, any changes will undo this status.\" in self.driver.",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c49138c477a0863e330583090e71e5337183041a44c934319d27e9b23d29f88d",
        "deprecatedHashes": [
          "c2301d40c0e0744cd723db1dcac75d7282d7cb2b895f8930062ab88841829d06",
          "35ee66ccdb59c51ae3f5d624b2b30c6ab3b4ff6e27d486db16c059ffdbc6741a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324213964Z",
      "vulnerabilities": {
        "vulnerabilityID": "36cef2f0-9a22-4c05-bbd7-36975028d93a",
        "line": "83",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_plugin_add.py",
        "code": "82 \n83         assert data.plugin_name in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c66e353d61cf07ca83b83033b6edf0bfc5b919fede18609ad8fc6a700883a0d9",
        "deprecatedHashes": [
          "dc39e3c0ae7ace0d3a8f2feb71c23cbf988d880ab2b6bb6110a9e28feb2868a6",
          "26bf3a94bd42ab7b4de3660d98155259a747ce6e4c79326bfdba93a4f97584e6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324214864Z",
      "vulnerabilities": {
        "vulnerabilityID": "a30fe10a-69a1-4f9b-a6e9-e1ac380ae6d3",
        "line": "65",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "64 \n65             assert time.time() - start_time \u003c 10, \"Denied permission msg did not appear after",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "27041d3f9a235933958cef761a27a0f4542f69ae7dec51ceb022c8391a5983c3",
        "deprecatedHashes": [
          "b34ed6913acb02a8391f376a76ea9e2f9ae09c35ceb15ac00e0c4b85740fc362",
          "c8f5843f35abd2bb6f8f16adf78da32458520c45d6b4693fe739a684712855ee"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324216164Z",
      "vulnerabilities": {
        "vulnerabilityID": "dcbf8cca-e4af-4090-834d-2f1db186e992",
        "line": "228",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "227         # Verify contents of question_set 1\n228         assert current_fingerprint_acronym in se",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "1dc1eee3c3a6d59842a0adaab01069abc814dd3a00741009d7652b4032fe9ad6",
        "deprecatedHashes": [
          "a3dcc44361a7cdc06dc632f9f51d469f47ef946f9c036c4bc9e1c4e73558958c",
          "1011d42f12411587fad0a781ba87a5d7311092db564c64aab69d06c1b0b302c4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324217064Z",
      "vulnerabilities": {
        "vulnerabilityID": "bbadbf3c-6f94-4482-a827-3c66215437f4",
        "line": "229",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "228         assert current_fingerprint_acronym in self.driver.page_source\n229         assert data.fi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a36a08474c4d890b17895e736a30db97dbbf25d15c9d71f4a97bbb358784eeaf",
        "deprecatedHashes": [
          "26ee3d40ed139d3ea7145d7764889fc085b85edecb319f7b3b20fa6cef67f204",
          "90a05aaefe6df633b8fbb9c4eacb82b451bc8fca4e9ad533a3b330d36d1eebaf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324218164Z",
      "vulnerabilities": {
        "vulnerabilityID": "82c5b3a3-54cb-4e76-be2a-9c3560ad03ae",
        "line": "230",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "229         assert data.fingerprint_name in self.driver.page_source\n230         assert \"test questio",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "bb2116864957167688f77604f877491a9db14f46c06340ff996f95417e65b58b",
        "deprecatedHashes": [
          "40db70e9f2449e6dd3d9e6467117647bc43242e9ff86c28a16503b79b561ff13",
          "409136becee7cefe6ca4f8e513b5f63af4f9c21d632f28172755dcdc4b025a62"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324219264Z",
      "vulnerabilities": {
        "vulnerabilityID": "c76a5a56-0809-488e-97e6-1e14843bab3d",
        "line": "235",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "234         self.driver.find_element(By.ID, \"question_2.01\")\n235         assert \"test question_2.05_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "81f347e44b738fe8c581fd69b95cb52613a66e5367100d915c4af5c6a6a3a409",
        "deprecatedHashes": [
          "b189c14ef3b859c0b8e711396f8450dc57faeff88c3be9ebf9dda2dc3f4ce826",
          "cfe78386e9a597ac7eed343f990c2727d1829f44f915695b9fd2623439c23648"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324220264Z",
      "vulnerabilities": {
        "vulnerabilityID": "e0ef2b3a-ed0a-4060-9467-94474b31463c",
        "line": "236",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "235         assert \"test question_2.05_more1\" in self.driver.page_source\n236         assert \"Aveiro\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "58907f9e58c75bcb0e067d2f1468bec45cfef3f12486bb78b5d50540de7ec2ad",
        "deprecatedHashes": [
          "10ac9409906f5695de07d2c04ff315e5e388106f7d26821eefb092b2b5e0f02d",
          "1fd389f34f2fe16ffe3f6edc9e00297c78d3d63ee161b9eb20be3cbaa0cd9d64"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324221464Z",
      "vulnerabilities": {
        "vulnerabilityID": "3e057c81-077f-45d9-81bb-0cef76875410",
        "line": "237",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "236         assert \"Aveiro\" in self.driver.page_source\n237         assert \"Portugal\" in self.driver.",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "ea8e23619dbd59fea1efb90f66808c07260c1d669e42a6b6516643924e466af8",
        "deprecatedHashes": [
          "b318c6ce909757ee082a76f39ae2779f429a482f4e6d9640e3a9a03c79402b77",
          "58a3fa8b91eb54df4749d3d6f0ad74f2528a39556799a51fca71b15d5049f7b0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324222364Z",
      "vulnerabilities": {
        "vulnerabilityID": "e5eb7eec-4ba0-4b68-9f25-8a11bdb76111",
        "line": "250",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "249         self.driver.find_element(By.ID, \"question_5.03\")\n250         assert \"test question_5.05\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "e39514e324b94dbf406c7746bb2e23e99bef97e81a1c75f459e7613f26349634",
        "deprecatedHashes": [
          "69672aa98eb19bdc936c45f6f1d2f3e7243d22415233401cb409a54d0952a6da",
          "22036d12cd7bba15de4aa3dc09a95dbe10afc28d21c10e213de4754e37f9c1e1"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324223364Z",
      "vulnerabilities": {
        "vulnerabilityID": "3c4243e1-2c31-4719-a914-1a84657ba575",
        "line": "251",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "250         assert \"test question_5.05\" in self.driver.page_source\n251         assert \"test question",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "1271f249807dfd1974b8438b80e6b7fe1ce20ab4c7c5da4c6bab46e8ce342982",
        "deprecatedHashes": [
          "da0344a9738c26bf3485effc867e7f4a63a83e4d751554957db62f5efe960587",
          "ad5c9cb34e7f21ac5761063703491a4a23995268f51517ccf2b508debe5fe557"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324224364Z",
      "vulnerabilities": {
        "vulnerabilityID": "31fad36e-e9d1-4e8c-944a-5ede22462d51",
        "line": "256",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "255         self.driver.find_element(By.ID, \"question_1.01\")\n256         assert data.fingerprint_nam",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c2eebac246ab7b950411021748269454e8b7517f3a9937d3ba436bc684760ae9",
        "deprecatedHashes": [
          "008b86f1dc224c7eaebc634afbfcae484fe10168706bd122485fbfccf2295d60",
          "8d8f6d10e6a17efbfb57f75735c8f13e90793c39428bb40000bde18d46ffcf43"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324225364Z",
      "vulnerabilities": {
        "vulnerabilityID": "f0dedb64-1210-42fb-baee-928df88b8140",
        "line": "257",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "256         assert data.fingerprint_name in self.driver.page_source\n257         assert \"test questio",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f5b8744dc74141eeaf5f8fd214acb74a79e5ed460ed5ebf3a44e1753a5070cbd",
        "deprecatedHashes": [
          "37f49cd97855a1a851a4dd3b90881a4399293e284346b690792a3a17b68de57d",
          "986a26d5dd703f75e35e294b4f59acc05a0308afa76cd7584b8634b20708d455"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324226464Z",
      "vulnerabilities": {
        "vulnerabilityID": "3be94ee3-630b-4b32-9861-28a0617292db",
        "line": "267",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "266         self.driver.find_element(By.ID, \"question_5.03\")\n267         assert \"test question_5.03\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "1f6656ef0371afed857b5b816023c4545b92101c019e5c8136dd69e929f49732",
        "deprecatedHashes": [
          "69e56ec6e2a810773a020267cb51a1cb465df2e79ea13820029351c7479a0fa1",
          "f61efcb9fa0c4e5b42119dc0719a5cf03ba78259bc64fbf93be869cb21294aa6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324227464Z",
      "vulnerabilities": {
        "vulnerabilityID": "af467ae0-fc54-423b-886e-82153a8e5e25",
        "line": "268",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "267         assert \"test question_5.03\" not in self.driver.page_source\n268         assert \"question_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6b3317e268a4229427b951f71dddddeebe1e63c006d0c0521fdcf19382dfbdc0",
        "deprecatedHashes": [
          "b41817c8360c8433bd3ecec0f5cc68404c3498ac1049d5649861e248eb9d1295",
          "edcd9c4bbdec0a1d5e538389cf3ff4f3dabe88d7c7cab5dfc93e7de245ae555e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324228464Z",
      "vulnerabilities": {
        "vulnerabilityID": "95081fdf-5abf-4225-b9fc-716520c04756",
        "line": "278",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "277         self.driver.find_element(By.ID, \"question_5.03\")\n278         assert \"test question_5.03\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "759707b0bdb7cba55d05360d4999ef32e00aa98bb6061447a98f7009d12d6df6",
        "deprecatedHashes": [
          "fbb96e190e192255fe19f45010b3af14824d11abfed3bec37fedbfb5ed66d294",
          "e541b6f18b7b445f0ce327aa8e18d2741072d0949c9c85a5a6b672f1bce90456"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324229664Z",
      "vulnerabilities": {
        "vulnerabilityID": "4d47dc71-d165-466e-ac68-31d26b1394a3",
        "line": "279",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/community/test_qsets_permissions.py",
        "code": "278         assert \"test question_5.03\" in self.driver.page_source\n279         assert \"question_5.03",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c2fac0e106727be83b6ce514d67d0b2cc9e91ba6ca24a881feb005f6e85f4a3a",
        "deprecatedHashes": [
          "612444dedf419dce696b28175f431f4be42876b2a73a08305eb19eda9f3e6f8b",
          "6af449990176e62f608ec114fce7563a0d89760649c96f2b41021810b186245c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324230664Z",
      "vulnerabilities": {
        "vulnerabilityID": "f1da7825-26a1-423f-9197-9d5163925fda",
        "line": "31",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/emif/test_flatpages.py",
        "code": "30         # check returned result\n31         assert 'about' in self.driver.page_source\n32 \n33      ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "33fa500f981b57300b0715785d105fc9aa16726168ebe15d61e7da9c085f91df",
        "deprecatedHashes": [
          "952fa672427e301d019bafabd54b2f1edacf8fb5b6ae8ca957306715072cff05",
          "4a0cb2103fdf78ca4b0fd3169bd9062a2dd4f490f458335f8eacb686651e26d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324231764Z",
      "vulnerabilities": {
        "vulnerabilityID": "9736005d-de0f-4eac-9ea3-b8f90c5c7abd",
        "line": "36",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/emif/test_flatpages.py",
        "code": "35         about.click()\n36         assert '\u003ch2\u003eVersion\u003c/h2\u003e' in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "05bc0f565745ace6222e464f141658084c809a191b95eb8e468a12efb8230ad7",
        "deprecatedHashes": [
          "a7e8ddc2fd0c52deb88c14a435c37f82e0e0e00f76d8922a249d4068f076caca",
          "998b329b68892a5fe7fdd7fd86094324b5e9b8681d2cc2f6be1a55b71fd92f43"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324232764Z",
      "vulnerabilities": {
        "vulnerabilityID": "da798baa-7037-4142-97f5-dbfc076cbbb6",
        "line": "31",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/emif/test_login.py",
        "code": "30         # check the returned result\n31         assert 'user_name_div' in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4f4656d5ebf1c09ec47047a0e5f63731da1d572cc71af2afc7f84dd115fb54d9",
        "deprecatedHashes": [
          "3faf24b45e1a82d52e9254fba9db6f57473fe86a510e96c41c5ee38b54a925bc",
          "b1588241f563ddb65f38dc1cf48a7cbb6daa8bfcded5eee4bf3c16cc0a87f0f5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324233864Z",
      "vulnerabilities": {
        "vulnerabilityID": "84f5c63f-bed6-415b-a415-1ee8106d18fc",
        "line": "32",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/emif/test_login.py",
        "code": "31         assert 'user_name_div' in self.driver.page_source\n32         assert user[\"first_name\"] in",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6cd8775ca94493288dafc3cf0e195113cd1a97dc292d6778dec0e7599488a5ee",
        "deprecatedHashes": [
          "e118ab08944feb75bd19ba81cec03eb07255441d23fb61998eb2b1fc1a78f880",
          "ac3dcb7ad62f05c943db023fe6f5e4632560367e18a39dd1c4bae0d6b0978f8e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324234864Z",
      "vulnerabilities": {
        "vulnerabilityID": "b3c3604c-5c5b-4123-9694-63d7ca2e95eb",
        "line": "33",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/emif/test_login.py",
        "code": "32         assert user[\"first_name\"] in self.driver.page_source\n33         assert user[\"last_name\"] ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f4de6514acdb993e8cfe36e62f99effe1f3c7be40d9d62e5e46dc96da9e67453",
        "deprecatedHashes": [
          "a1a0341b94903532ead7795e70a1c68c34ba2cbcf618ba0dd620ef7fb2582618",
          "ed37a2cc684366cd6bfb0ecf17610ccfccd99af10a2b5bc489ef7e0ba20bf29d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324235864Z",
      "vulnerabilities": {
        "vulnerabilityID": "1426c872-2fb9-4fdd-9921-9548853df2fd",
        "line": "39",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_access_control.py",
        "code": "38         # Certify access to fingerprint\n39         assert 'data-acronym=\"' + current_fingerprint_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "025e12ca22da38d79e9aedb0575a167e93d06835618d87b2fe6ffdfd35a54f34",
        "deprecatedHashes": [
          "649574750b194a38d0a0b80c4c4f01e6f56c2e86788d700be14b852756e8439a",
          "5d3122694f74d0949657ca4a733745ef2e3aa065f9a9f2023fe0bc505b77c67b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324236964Z",
      "vulnerabilities": {
        "vulnerabilityID": "b75e6f03-96e7-40c6-96df-77211f0bc37a",
        "line": "45",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_access_control.py",
        "code": "44         # Certify access\n45         assert current_fingerprint_acronym in self.driver.page_source",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "35f6d7f17f550699cc2480fdc8deeb247127ac37cbe2d888ab23ab909158b9d2",
        "deprecatedHashes": [
          "cd79059e7924c9a3dccce20761af9b762ea355b0d9975efdd632db91b554be3c",
          "2ae6e1a9ed35589f44a6d2b844ac2865e418269d589cc967ca304f083dd433bf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324238164Z",
      "vulnerabilities": {
        "vulnerabilityID": "e24e3166-708c-4086-bb41-a3310865a088",
        "line": "59",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_access_control.py",
        "code": "58         # Certify join button (user not in community)\n59         assert \"JOIN\" in self.driver.pag",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "7842ed556f13983c325d702dff5c5aa67a7b4d1441ddd7f403da0ede9e3a3fc1",
        "deprecatedHashes": [
          "3791c179b532b74c9b89f79071358f108a8df256b88180be5b44eb8c9f1867db",
          "6c2d3da2de2d8830a93cf5c63d0d1b65727146dee8d455d2862a1c6e69d90d65"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324239164Z",
      "vulnerabilities": {
        "vulnerabilityID": "0b3d2629-e0f9-4e84-adf2-a4781dd3e3d7",
        "line": "64",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_access_control.py",
        "code": "63         # Certify denied access\n64         assert 'data-acronym=\"' + current_fingerprint_acronym ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4c54f37ade3b515eed8832eea3952830411442ba30aa76fc4c59cf892ac9430e",
        "deprecatedHashes": [
          "df512ff590ab054726b4616989de4c24f609894276f8fb685629ae843f05d19d",
          "68e7bbf93f3ed0ef4151993aac3f4ab2d609bf22630965abcd02e5f7d7a1bc6d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324240264Z",
      "vulnerabilities": {
        "vulnerabilityID": "2ff532bb-5504-4532-ab85-ffe5f04e7ac9",
        "line": "73",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_access_control.py",
        "code": "72         # Certify denied access\n73         assert current_fingerprint_acronym not in self.driver.",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "0d460e023f4c76bb75d72c651b83309b8c7854440740408fd820dcf2356b92e3",
        "deprecatedHashes": [
          "d64082588837aebb6455793e3174e45b00bc1f65c9cbeeab459aead9bc6cadaf",
          "6964c7f286eeea443214cfadd2e12513e133827577badbd86e4bfcbf770e294b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324241264Z",
      "vulnerabilities": {
        "vulnerabilityID": "b7d3341a-5d58-4ea0-bcf4-536776c8de94",
        "line": "76",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_access_control.py",
        "code": "75         # Certify redirect to join page\n76         assert self.driver.current_url == join_link\n77",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "08a2fd0d19faa48d2cd25fb3c5fc385911e43f556bbe1ae08baa4ac70658f294",
        "deprecatedHashes": [
          "0241351d42edbf98a7ce891f9e944ab0a1988d96f0046cbad42f60ffc7d46636",
          "13d75af894be557efba0d7254a24ef119556ba0043ebd2d66a16e82603201b39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324242164Z",
      "vulnerabilities": {
        "vulnerabilityID": "0ba1be32-1364-414c-8412-d255b6868fb3",
        "line": "32",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_add.py",
        "code": "31 \n32         assert 'New Entry' not in self.driver.page_source\n33 \n34         self.utils.open_comm",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "9698b8ddccae6efde225a17f1b3bd260cb32c6866015c03c32285254cc26536a",
        "deprecatedHashes": [
          "a14cfa539b47b2b07ea6e95ba6cfc5bfd64971acde51fd3fb35708b68d98dceb",
          "5b6131dd7ed78be7ed9508b9658161b7fff1af5dab419d78a1f5f168768c727f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324243264Z",
      "vulnerabilities": {
        "vulnerabilityID": "ff4ea5fc-54e4-4531-8278-5e499cd3b1ec",
        "line": "36",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_add.py",
        "code": "35 \n36         assert 'New Entry' in self.driver.page_source\n37 \n38         count = self.utils.get_n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "e20403d7e7129775e4793f360b24f051e393d102a44d3e13c6c34c25b086369f",
        "deprecatedHashes": [
          "e89bcc40121832c0e001e1b0f86496abc3603df7963147da145b7b171db9a8b0",
          "aed651a6b17665ab9cd7a81f1d6f548ade5b39be6915c8dae95e0b99a3ffb793"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324244364Z",
      "vulnerabilities": {
        "vulnerabilityID": "1c90ce21-afa5-4411-a5c2-301cde2c1653",
        "line": "42",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_add.py",
        "code": "41 \n42         assert current_fingerprint_acronym not in self.driver.page_source\n43 \n44         data",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "070ad16da67dad05e4dd10924da2ac4097c67dd26c4b48b94ee163dc4a23694b",
        "deprecatedHashes": [
          "1d26b80c3c864b3adaf814725c5266851147399df74300c1584e1a2b18bedcde",
          "4e561feb3f0b1aa2d2ffa0d4447c39e226cc38e7b004d47d5abb68c40ddcd491"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324245464Z",
      "vulnerabilities": {
        "vulnerabilityID": "c01f7f77-fed1-47ef-b4cd-1b301d473d81",
        "line": "84",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_add.py",
        "code": "83 \n84         assert 'Errors' not in self.driver.page_source\n85 \n86         # Page 2\n87         sel",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "718953af2ffa2e647b873d818465040be27c192a1704f4305416c8eeba83bb06",
        "deprecatedHashes": [
          "841ce9adce0956c6081275dcef593601951e9ddc73fa788b4e91a76ac53a4c02",
          "4cb27f8650d6e44bec578eea880e7d72d85ab1b911727cdb01ee2ab6d6918cda"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324246564Z",
      "vulnerabilities": {
        "vulnerabilityID": "21cd7e13-970c-45e5-a011-5cac72196806",
        "line": "105",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_add.py",
        "code": "104 \n105         assert elements_list, \"Could not find country dropdown, maybe check the network req",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "5244b334b507f0d91f6f228de4b8d138a4b35a4bf6b7ad8a1420a1597e1e05fe",
        "deprecatedHashes": [
          "61ae3b7d6f771c8afdea8d9f08572a20577cca54e6b20a948c957b01616e9d69",
          "12a0f0820f2de05512b3b5add85e8fcf6f217cd9fec057661eb9315f8e77a81d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324247564Z",
      "vulnerabilities": {
        "vulnerabilityID": "30e8a7df-a71c-407a-9944-3dbae08846a1",
        "line": "207",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_add.py",
        "code": "206 \n207             assert time.time() - start_time \u003c 10, \"Fingerprint not indexed after 10 seconds",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "dc2d051af6e873e92aa492f6cdb2fbf86fd7285e168a9613460dcfbcc124c64e",
        "deprecatedHashes": [
          "14f73dc8040c694ea164c0486cc33868860c0fbf7ae7f5f0713f3ce95df54273",
          "f4971e07b0167e292eb4591f71d64d569e258c9015d9c4b0b0bad67c35575270"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324248664Z",
      "vulnerabilities": {
        "vulnerabilityID": "f5301422-35ff-4aa8-a2bb-e64afef75ab3",
        "line": "38",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_delete.py",
        "code": "37 \n38         assert current_fingerprint_acronym in self.driver.page_source\n39 \n40         # Open f",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "55005df4d850fe6c15b90d9985174a83e9f9a1891b2b2c96ccdb6d07778f9362",
        "deprecatedHashes": [
          "dae274af140424551a4ebd19337817333bbc6ce045394141cc28509d4b36e814",
          "3d53623e82bfeebeda48be704fad14f80dec6c0d35185fbed2ef1c556b8be575"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324249664Z",
      "vulnerabilities": {
        "vulnerabilityID": "a9bd6fe5-98cd-47f7-a702-119218e78d12",
        "line": "61",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_delete.py",
        "code": "60         # Verify fingerprint does not exist\n61         assert current_fingerprint_acronym not in ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f0bfed1c3c8e653ebdf5f1dae98ef75154d4ee9aadf8fe5601cd3fe7a83bd650",
        "deprecatedHashes": [
          "9573e0a2742920859fe033d0ee44797d7d97e2d0261b6406f3a87e316036871a",
          "8821225dadcc2b310c8c65062fee39619df84af2554c953d1d6636c14bf807da"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324250664Z",
      "vulnerabilities": {
        "vulnerabilityID": "508b5271-8b09-47d4-a9ef-307a50f37663",
        "line": "120",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "119         label_element = self.driver.find_element(By.XPATH, \"//label[contains(.,'{}')]\".format(fi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6048de85ced6e1fcbb22ebf37f57192ef8ba8411fba29f94461792dfc508c3b7",
        "deprecatedHashes": [
          "0fa2063e0eee622956682fce8ae212dc89771b0074c9abf24d5818b0e4065059",
          "3c8f5434fbb164ee23f0e67dce8e9191befef7430b0dd939cf58d42b4acd1967"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324251764Z",
      "vulnerabilities": {
        "vulnerabilityID": "53fbf7b8-cfd3-48ea-98bd-46d7f460e382",
        "line": "134",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "133 \n134         assert value_element is not None\n135 \n136         # Write the filter's value\n137   ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "cc9d186c95ac57bb1e010549507f290db565134cb38638fa2125076eb51b4b7f",
        "deprecatedHashes": [
          "f159b526f459fd0af5f8eccedfe84b0b964685c2549accc39717a3822c6344c1",
          "07c88014be4824a7da581112edff1ff561c93edf487c6758eaa6bd537f7198bb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324252864Z",
      "vulnerabilities": {
        "vulnerabilityID": "1a40a4fb-31df-4d3f-9bde-c5f3fe41a977",
        "line": "147",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "146             date_element = table.find_element(By.XPATH, \".//tr / td[contains(., '{}')]\".format(v",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "66c285e296f91dcf7aeeaa4616bf86e01227a2ae3f41e5f0ec0b56d39c6181f7",
        "deprecatedHashes": [
          "9d2387a88342c03f8675dee861b7c380eddbdacf6cccf57533ae4068db1230b4",
          "9cd43036a791b9d65b1276a601196d6d0dd7d6cc82eb399da351e67b0eb7b7c7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324253964Z",
      "vulnerabilities": {
        "vulnerabilityID": "6aa6490b-ff13-4052-b77b-77322e1f11f9",
        "line": "148",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "147             assert date_element.text == value\n148             assert \"0 Results\" not in self.dri",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "ca4e6a6a4645d2912c924f3b57024627025fd18b2425177d2012820df4ca7f08",
        "deprecatedHashes": [
          "c3b4f8524e8c1c72665aaa8a4cee519bd19aa6162dfc4164579da7b96049960e",
          "f03f14877a3f38db47f8b6116d49ebcc578b3892b35efb2c7777718389a08e53"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324255464Z",
      "vulnerabilities": {
        "vulnerabilityID": "efffe647-fb35-4416-9a2f-41fd59c29503",
        "line": "150",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "149         else:\n150             assert \"0 Results\" in self.driver.page_source\n151 \n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "72c993cd19fd9065babdf3eae81caa50ec21bbdeaddd2ff2121437a1a12743a4",
        "deprecatedHashes": [
          "66e8a320ad77a0a60c70da8801baced7930ee4dcc712a18ebed7f6f19832ca30",
          "77afd85cec49357b176bc1650da84d32154e2f2ffb25296663f409bd2fa356df"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324256464Z",
      "vulnerabilities": {
        "vulnerabilityID": "0544835a-8899-43cc-9b5d-63a18cc6259f",
        "line": "153",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "152         # Check that the top bar has the filters\n153         assert \"Filtered by: {}\".format(fil",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a6ee4a0a56f0703122c21c9ee8335efc8a7a3e541776f5c1c3731598559b72f8",
        "deprecatedHashes": [
          "eeab6e2aa40d07207c09dc36417d07caa662239dcbf76f0c2b03be3664582353",
          "cda3429cc96a25f7cdaa727303bd4609c6d68076109ac5d31395b18d178a2758"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324257364Z",
      "vulnerabilities": {
        "vulnerabilityID": "9d23681a-4f70-4219-bed3-d0308a8b5065",
        "line": "173",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "172         label_element = self.driver.find_element(By.XPATH, \"//label[contains(.,'{}')]\".format(fi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "019df1e8687a56a5b93321e7a618f4b6634db98b59da5f89b80c4f8dae11c0fb",
        "deprecatedHashes": [
          "d86904966eb03c02a918334a0392b104c7333a6ce59df43fd2a1edc068662208",
          "b82ec6ee81a4fcc62e05b401688536d79156214115629cac019695ae81a03332"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324258364Z",
      "vulnerabilities": {
        "vulnerabilityID": "1ef1d1d0-358c-4e41-9635-c12df81e0dbb",
        "line": "185",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "184                 stop = e\n185         assert start is not None and stop is not None\n186 \n187     ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "77a704795b6bb085a9d4c73ce8de18afbabd452a1d758019a0dfaabfb83fe3b7",
        "deprecatedHashes": [
          "dc6b34a983f0034cbf8751d9d1148b1b0950bc8d902ffdb96b9601f739b8572a",
          "7df6e9bd234ba10901fa954738059952ee6b52397d29177e22c41467452e3f30"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324259364Z",
      "vulnerabilities": {
        "vulnerabilityID": "42b30a92-11ec-4f8e-8834-eff090729724",
        "line": "203",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "202             date_element = table.find_element(By.XPATH, \".//tr / td[contains(., '{}')]\".format(v",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "37b5442e63d604a7d463f142238d98fca956cfaa65ecf65510bcac1cd02eaa2a",
        "deprecatedHashes": [
          "815c563b2bffae21fd8cbd8af9ef4b11bdad86b6a4d0d029f7491296f642003a",
          "b9a3e0bfc78e661eebd18c6ee441ef519d8332bb9ccef46b74a80543230648a3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324260464Z",
      "vulnerabilities": {
        "vulnerabilityID": "48c5cd4a-90bd-43ce-9662-84e6f030fcac",
        "line": "204",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "203             assert date_element.text == value.__str__()\n204             assert \"0 Results\" not i",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "b7bdfb5f45aea17e11c3b23eff8ab0a4fb58e65825a9e360246e0687884f4844",
        "deprecatedHashes": [
          "29f91185d5594e37b3a7018005c453a083bbd15dbf097480ed5af48c661a6cf0",
          "18a006a957ba6b735e35ed8e50846850c2a6417a5c83cd5359e5db60f89d1593"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324261464Z",
      "vulnerabilities": {
        "vulnerabilityID": "1af5f80b-a3fb-4d7e-925d-1659b03f5633",
        "line": "206",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_filters.py",
        "code": "205         else:\n206             assert \"0 Results\" in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "fef9cd4d1f4926d7b97ddc04f4e5b445e88936bc9d1ac5a0235fcc2b13824c09",
        "deprecatedHashes": [
          "5901ae68db368c6b6682326422c66b750da56531e654c8fe9d982523aa4f2037",
          "44ce47a8d2cc20f76cfa62dc420734850811a30ba04f43c66ce7e9ee006c4047"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324262464Z",
      "vulnerabilities": {
        "vulnerabilityID": "ccb45f56-7d97-4748-8ae2-370136ecac3e",
        "line": "48",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "47         # Verify that user 2 is logged in\n48         assert user2[\"first_name\"] in self.driver.pa",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c32b6ad915a7e8d40d5f04a11fdff110ac33c72043dc969c9796060e0bcf2775",
        "deprecatedHashes": [
          "6024096b0835b25cd5c534ef0399ef4d87140b5742a60ab629a632b212437841",
          "9497192f25aebb4eeb51d7519d76000e97a49f51e1103631ed3d2a9b6f7b27cb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324263864Z",
      "vulnerabilities": {
        "vulnerabilityID": "b6f7f589-1fbb-4e6e-89ff-9792b2c88d69",
        "line": "49",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "48         assert user2[\"first_name\"] in self.driver.page_source\n49         assert user2[\"last_name\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "abaf69e0ddc033bf8d908ad914cf2f6bfaab976eef0302e8acfd27a0d8de63c2",
        "deprecatedHashes": [
          "1a7cc02aa6d56fca69a1aec07e4fe6d54bcd54003143c79f4ed0ab0a95f63a8e",
          "e45852073dcc8636218c50cbead14133aacd1b292a84d6a6e49fe6ce17f23be6"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324264864Z",
      "vulnerabilities": {
        "vulnerabilityID": "38a69b63-15c4-4729-bd49-1a0c41823120",
        "line": "67",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "66         # Verify that user 2 is logged out\n67         assert user2[\"first_name\"] not in self.driv",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "eeb042bf0a89fe02908c61cb293be26809766fbf60f7cb98c8ca46bd9624adff",
        "deprecatedHashes": [
          "58b535b0cdc12e8766a150e76a8ee443974388a4f5e82425b07f55005b7e6600",
          "95cd1eba4230fe944f5949eb01e54727c183a4f5903278a63b9b75adbc1b6004"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324265864Z",
      "vulnerabilities": {
        "vulnerabilityID": "36e009ec-7a40-4fc7-9748-ba8cdd7757c3",
        "line": "68",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "67         assert user2[\"first_name\"] not in self.driver.page_source\n68         assert user2[\"last_n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "fec1dc7f4d7c3725a92b0b65f511afd5b9c12f6e89ec321eebb08d0ff5bb96cf",
        "deprecatedHashes": [
          "46bd5363a65991e0a4e2babcede5abf8d9d70889dc8161cd5ddfee64c64cd96c",
          "fc94fb4c6594fee91ebf34121e02414477fdcd629ea458b4353d3539de8d5491"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324266864Z",
      "vulnerabilities": {
        "vulnerabilityID": "708ba02f-84df-4933-96b0-8d1b53b6b8da",
        "line": "74",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "73         # Verify that user 1 is logged in\n74         assert user1[\"first_name\"] in self.driver.pa",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4f3dc1d96fab208d1b2e5be3a7e67e4e36a7fcc1d305925ebec24610d7356afa",
        "deprecatedHashes": [
          "a318f55c255df399653cc1d071f06b043e6ab7cbcf6d8ff4182e030243a4e2aa",
          "40cd0716f09d1b0c6d3fcbea7ffe5542c79db14aa1e9517b8efea35543bf3252"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324267864Z",
      "vulnerabilities": {
        "vulnerabilityID": "b1d05ffc-39d9-4974-bf19-61260c188ab7",
        "line": "75",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "74         assert user1[\"first_name\"] in self.driver.page_source\n75         assert user1[\"last_name\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "76034586dbd475440668543293e1adfde2a225917b00e9b447a8b6e0800ce839",
        "deprecatedHashes": [
          "91ba6d6461171b089210f45cba66c1fe8af72582b390c6d33526b6270ebf5998",
          "ff3f0f885aa6695f1c1f2375f423c5ce1da577566468ade93aac6952b8409ca4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324268964Z",
      "vulnerabilities": {
        "vulnerabilityID": "74736d16-2efc-42ba-8acb-5e3c0629c280",
        "line": "107",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "106         checkbox_one.click()\n107         assert checkbox_one.is_selected()\n108 \n109         chec",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "8b6f1047ee899f5615a4dce3452f62ac3686a93114bfbfd9c3cb04817f21ce10",
        "deprecatedHashes": [
          "167050efe4f58df53d2dfb95a1de43c7291c2ef8dc3520098d4d7f2f1ac9cd7e",
          "748d9ee2378acc561f2af5563ce2d3dad4a8526da049ec5792c7a60604ec2634"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324270064Z",
      "vulnerabilities": {
        "vulnerabilityID": "571db0ed-15fc-4879-bad2-340a707f0e8d",
        "line": "111",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "110         checkbox_two.click()\n111         assert checkbox_two.is_selected()\n112 \n113         # Cl",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "2054bb4e95c94c593f9ae492419552e0ec8f56e44577dd10d6a0e3ec6d3c0a6d",
        "deprecatedHashes": [
          "0dc04238ef11ab4440d27e7e5ae66445342b03b82c75f4ba9a4d46de767bc204",
          "c2a0034498a36e22930d1d084d7856891c72a128e94dabb18f2a9636b7e20f8c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324271164Z",
      "vulnerabilities": {
        "vulnerabilityID": "dbff75eb-a9d2-4876-83ab-96a5f0394055",
        "line": "150",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "149         checkbox_one.click()\n150         assert checkbox_one.is_selected()\n151 \n152         chec",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "46cd5d2494b669b28675928c8b3e077e796dfb22f9f68934783a154b665848ec",
        "deprecatedHashes": [
          "a1f55985c27b3fa8f50355139f2bcb0afc5ee228a30b271f77ebd038f36eb3fe",
          "6cc1182bb9a73b41699f7da0c75f5134d3f2906ceb94c6b65fac0935530ec62a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324272364Z",
      "vulnerabilities": {
        "vulnerabilityID": "873980c4-945c-44d2-b0e6-98691d729c0c",
        "line": "154",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "153         checkbox_two.click()\n154         assert checkbox_two.is_selected()\n155 \n156         # Pa",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "eb52cf508d44691bd1e7a1387295aaf9fc8386a0f8dafcbd7fd75526095391b4",
        "deprecatedHashes": [
          "ced470fc7cfdcf10e21c313e84976957230268cfdfb261837672a1f62511e94a",
          "1de495e10ea26c2f798c44728df4f8cc37a2ccf00a8182b4e562267b14518f82"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324273365Z",
      "vulnerabilities": {
        "vulnerabilityID": "ea8f14dc-589d-48a8-88e1-d33a3fe7ebd7",
        "line": "238",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "237         checkbox_one.click()\n238         assert checkbox_one.is_selected()\n239 \n240         chec",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "71993d36dc9e62c845f90a8d10b5eb5ff50a7ef3b6b2959a0c5d0f505cab3e6a",
        "deprecatedHashes": [
          "cac6878a7339dfcf6a599af81e57a56b32fe28da81ff73c0319aeda948f428c3",
          "603d0ffbb459f783ca521eb57a1649a7731feca397ce9b2309569dc644428a27"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324274465Z",
      "vulnerabilities": {
        "vulnerabilityID": "ae21213a-5d93-4b65-b2bc-f7cbdb6aef98",
        "line": "242",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "241         checkbox_two.click()\n242         assert checkbox_two.is_selected()\n243 \n244         # Pa",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "20ff1fde9ad0d3b27cf6ed9c0a102c799e01b87b975b11fe01b68ce99da1606c",
        "deprecatedHashes": [
          "7a1a8899179807324553b97d0c49909ccc05238b328aeee471d29f365bf75030",
          "a0f6e49a96e7c68645a13db178642cd9c79eb502f083d97e13f019da726e0acd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324275465Z",
      "vulnerabilities": {
        "vulnerabilityID": "c7abf7b5-46e1-4580-917a-0a915b87217a",
        "line": "248",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_listing.py",
        "code": "247         if not allowed:\n248             assert \"Selected databases (Multimontra)\" not in self.dr",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "ff726dc40648745ac14665559283ac891e15565ab0ae81d546a90498e21a4626",
        "deprecatedHashes": [
          "f7b05c60a17865c8a24c3d39f86f1d17707788eddac91c92aacdcc52e9f8aa10",
          "155ce9b12ccf8dbe12537cafce0c387e05604da3aa3341954ffa26ff4f4400b4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324276465Z",
      "vulnerabilities": {
        "vulnerabilityID": "c892d44e-30bc-4ce6-a4e9-8154b1f42a7d",
        "line": "38",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "37 \n38         assert current_fingerprint_acronym in self.driver.page_source\n39 \n40         # Open f",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "5c45b10726a82e3bb212e5d2e2efd92e2bb310c7583dd585303821e29ad7e3bc",
        "deprecatedHashes": [
          "204f7fa213fe9b57230cdab2c3c7ebefb0cb124da938f26ffa6f1a6083d2c79f",
          "d62b2f87e85339e6a4a5f6414d7c719e3f9687eb68c50e0403c7222faf998b1a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324277565Z",
      "vulnerabilities": {
        "vulnerabilityID": "5bcd4dc6-0889-44a4-aa9b-f1d55cc85c0f",
        "line": "57",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "56 \n57         assert \"public\" in private_link\n58 \n59         # Enter in private link and verify acc",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a8160914cdb3d504df88de9091d734abc5ff17cfb0759178dba315f534264bcb",
        "deprecatedHashes": [
          "936cb8e75b733e826f66116b5b33d2226aa788692d5747b8463c4677ec6c1bab",
          "e01e2fc07fe8f95d055712444500f8e29a62861e80089e70c95f357763b99929"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324278665Z",
      "vulnerabilities": {
        "vulnerabilityID": "0911d49b-cf17-4db7-954d-2416dd5c35ee",
        "line": "65",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "64 \n65         assert current_fingerprint_acronym in self.driver.page_source\n66         assert data.",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "8e8aa07d267d93dd9cfac2c4ee26d0f973a3a7134b27adb7a0c92774305d9778",
        "deprecatedHashes": [
          "d5e55f27df878757771b9aa7943b9fc8b17212898b438e925d4ef276ce3caf6e",
          "0c9586708241f0a140e790fd7cc494eec357d3957fa865c9866eb7fff4e337af"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324279765Z",
      "vulnerabilities": {
        "vulnerabilityID": "bfcccc91-607d-4840-8c75-60bd35530572",
        "line": "66",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "65         assert current_fingerprint_acronym in self.driver.page_source\n66         assert data.fing",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "ab7b04dff639c9e14180abcb939b104a9f828bf976288ea3a37d9c9bff994f5a",
        "deprecatedHashes": [
          "56619de1cfcb440336f1e57392bd3e4e2c84702d5b7625c78b6a12840fb4ff7a",
          "b52cdcde33860b99f66b8f692667e9ee3b1203196a57d5649c49778d37b7b09d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324280965Z",
      "vulnerabilities": {
        "vulnerabilityID": "e0160334-bba7-4ec7-8dc7-76588dce584a",
        "line": "73",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "72         self.driver.get(private_link)\n73         assert \"Anonymous\" in self.driver.page_source\n74",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "0d31767dba6992a88cb9e0b4bcac033f377e0aab393058209945487b663e274a",
        "deprecatedHashes": [
          "627d78177b899570d81076348910163538923fe9b5f7b3da33e23ce1211cfcc7",
          "18b51093280b361e0286f8257a0523bb7cbf73180a80205f21b79ce09f607131"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324281965Z",
      "vulnerabilities": {
        "vulnerabilityID": "c09447ce-ea92-4226-8260-3f778b8ec4bc",
        "line": "79",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "78         # Verify contents of question_set 1\n79         assert current_fingerprint_acronym in self",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "624b2f82a9508fbd874dca86a7b42fcd728c9ecf845620380a529ef88b067592",
        "deprecatedHashes": [
          "95a9f512da5cd1e62e6cedc88dcf350bcf1548589e448ef09f4b6ab1e208e4b4",
          "0df3dbdf4e37779fd7c8789d57715bdca7acff3ef1a0c2312040cd641c94f684"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324283065Z",
      "vulnerabilities": {
        "vulnerabilityID": "0a1064f4-1425-4e69-be32-1a6531b9b795",
        "line": "80",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "79         assert current_fingerprint_acronym in self.driver.page_source\n80         assert data.fing",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "fec7438afca90d5af12823eec721104aa80e280b780cbdb1377aa60ad19f607c",
        "deprecatedHashes": [
          "7896862b95feedd09c04c0e1d36e5d6490142425e3b6a1a401197f52ff021442",
          "a2afd40d459fbd1726c62cb46ba9fcddb1912cb7dba76d604b798693ca500642"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324283965Z",
      "vulnerabilities": {
        "vulnerabilityID": "a82b28fd-218b-4848-b797-fe900ed94440",
        "line": "81",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "80         assert data.fingerprint_name in self.driver.page_source\n81         assert \"test question_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "61c27d8434c66f4ceeef280f392bb88099053c6ca8143e549ffbf3b6781d4f62",
        "deprecatedHashes": [
          "6ed746f8aeccdb272b14c55ad5cd16f054e0da9d4f088656170b5a289326a465",
          "e2b5d085e7085cc9507392594ad44ef42358913395941964ffd67a368086ef79"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324284965Z",
      "vulnerabilities": {
        "vulnerabilityID": "6a5b0e9f-405b-48e8-bc50-6b76e4573992",
        "line": "86",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "85         self.driver.find_element(By.ID, \"question_2.01\")\n86         assert \"test question_2.05_mo",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c3e93f89b59b90c8fccb14c6e438f2397fda61a60c5e3e0f56672ca5049db592",
        "deprecatedHashes": [
          "e81e5aefc601a0b8590bc40c646f322143e65ca01fd3bfd6ddcb8197bb5178d2",
          "b45ea30e97b3a844cc9d7e50837059ff2becbd904a4440d7f115be2f62a2ac08"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324286065Z",
      "vulnerabilities": {
        "vulnerabilityID": "62ac1d4d-df18-4ad6-b9f7-4d38b9d3b87d",
        "line": "87",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "86         assert \"test question_2.05_more1\" in self.driver.page_source\n87         assert \"Aveiro\" i",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4b010b8713fb202ea5d173fc0eb537dc732f3e9db8ba84d68e7f1c59193ba633",
        "deprecatedHashes": [
          "be45436ed141d79708456cc69aea7451a9c1711552c89b07be13e36f20e78043",
          "ecec6be24f32bf62cb666b8aecfe109d4a4ec99a1f1c1f478fd6fa9e6f0d7d97"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324287165Z",
      "vulnerabilities": {
        "vulnerabilityID": "a3ca0a0f-4551-4c78-a09c-c08eef5e3774",
        "line": "88",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "87         assert \"Aveiro\" in self.driver.page_source\n88         assert \"Portugal\" in self.driver.pa",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "74aba97dc62a63487219ad0e7fa5a27c99075ecab867203e4031e8415509d245",
        "deprecatedHashes": [
          "8e2e962cad4bcc4be4498ae607dbd3ab8adb4b91d0018b9d2bc9f2d49003bf59",
          "382845cd3bdd65eabaf57d073e3eb2fc4ad118fed1f4e4774a3c1730660a19f8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324288265Z",
      "vulnerabilities": {
        "vulnerabilityID": "d28baa27-7ad8-4b23-a7c5-e98baba4d3cc",
        "line": "93",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "92         self.driver.find_element(By.ID, \"question_4.01\")\n93         assert \"test question_4.01\" i",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "5d243ce993cd6a6e21c5b9c805e506752944db73f040a3e1f259a75af1ae4eb5",
        "deprecatedHashes": [
          "3da57b2164c9a1bae458555cbf3c128afd00aa33815e935b4ff121c0eea48f88",
          "e55c0dae8010a719ef47f6a2b6878b5f734a7b09ccda71146158d7a3c5340985"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324289365Z",
      "vulnerabilities": {
        "vulnerabilityID": "4892f7d2-f756-48ff-9444-ccff0e183490",
        "line": "94",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "93         assert \"test question_4.01\" in self.driver.page_source\n94         assert \"test question_4",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f13d3d3c787cb50176af91e8c40663884132cac5322c5727f010890f5f608f7b",
        "deprecatedHashes": [
          "b6f2cfe8cce0f4de21a5d0a3b045a5f6b309abd0d8895471402fe7050ba667a8",
          "d24e2531bbdb79d3455b9035111e5e7586e44b31eda58b62366b249aff13fd44"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324290365Z",
      "vulnerabilities": {
        "vulnerabilityID": "7c10abff-b272-4333-8c36-199d7fef7f25",
        "line": "99",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "98         self.driver.find_element(By.ID, \"question_5.03\")\n99         assert \"test question_5.05\" i",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6030dc34b116d54780e339e5d3b38f267b865dda1299bf77f06115896aaf9886",
        "deprecatedHashes": [
          "298696e7716dcfef7c7533b79180e679e632e05b00f41bdd8a2bd9c4076ffa8e",
          "bc0abfba0c388b73d0c59c57c490888174b9a861f6451d6f6377f56bb01e0e8d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324291365Z",
      "vulnerabilities": {
        "vulnerabilityID": "58f1e6e0-f55b-4430-b849-183d0548814f",
        "line": "100",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "99         assert \"test question_5.05\" in self.driver.page_source\n100         assert \"test question_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "e2dc04ac589e4697c746f148a8dd970dbbfe976abd075548b05323b35e1c7bee",
        "deprecatedHashes": [
          "c70643a91d7118358870cee544a6e366f10edd87e0a77caa07de2980ef173fd8",
          "ceb6e5681ccf4ed67af161db5f791b919998150609efcea7237496941aee5469"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324292365Z",
      "vulnerabilities": {
        "vulnerabilityID": "d025bb83-b8c0-47dc-bad8-837677a20bd5",
        "line": "105",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "104         self.driver.find_element(By.ID, \"question_601_pubmedid\")\n105         assert \"test questi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "ffadd6a833c6632f9684be74594661328912fac5911ca1b4c03eb2d8c1936a4c",
        "deprecatedHashes": [
          "b89e0f0eb85ea6b87a168b0e3b0d7029fab9f39b49e1258b5614c8d584730eb7",
          "af4eb3374cbea9d478c300ad8d9d24dc5fb358bf4a3dcc08e3f1b5d9f1228989"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324293365Z",
      "vulnerabilities": {
        "vulnerabilityID": "142d0b3a-e9e7-4525-8515-93ab32bdff26",
        "line": "106",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "105         assert \"test question_601_pubauthors\" in self.driver.page_source\n106         assert \"tes",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6e313a059e6f382af5494dff685751215401fdcacfd6ebe4ea15c25ee28e3b22",
        "deprecatedHashes": [
          "4e1aaa1484d414554dd77e663d03ae5c5ecf6167d7344900500fb2cb8741f195",
          "b7cbe75f3557d1877668af56fd96c685fa24571e71c2276abfb91a6b99c9f30f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324294465Z",
      "vulnerabilities": {
        "vulnerabilityID": "9d037a0a-7509-4245-9ee3-9143dca9e525",
        "line": "111",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "110         self.driver.find_element(By.ID, \"question_1.01\")\n111         assert data.fingerprint_nam",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "9917148c65e5594935af56b06d89817b355f1e5162407aeb33a1583cc30ee97a",
        "deprecatedHashes": [
          "cddb3b9b5b020fea874428ba4d7b7227b853fcd11aa7ae213b955c086221e8bc",
          "62d119bcca9a79ab10bf4f763e297c1ebffa413918a1fe20d4b5245f9a72a97c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324295465Z",
      "vulnerabilities": {
        "vulnerabilityID": "6d51f905-e8e4-489f-bcd0-3f8611f155fc",
        "line": "112",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "111         assert data.fingerprint_name in self.driver.page_source\n112         assert \"test questio",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "fccef108d26f980dc20e29365f97bc1392044d4e81bf127c2fa926e8f04a1894",
        "deprecatedHashes": [
          "09dc3db56058aa58088da09dc5dbe25057a4d3cd40647c0cdb0d62cc1e83e234",
          "f2a309063b71e7127a08f98c08912ea2136841416a184e7e0886122779144f07"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324296565Z",
      "vulnerabilities": {
        "vulnerabilityID": "7c91c0a2-1614-46c1-8616-5d881b84be49",
        "line": "132",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "131         self.driver.get(private_link)\n132         assert current_fingerprint_acronym not in self",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "7f6d7aa4966265c486ac1bd64c0e94b0e01c26b44c3bd5d7207f76adc789c68c",
        "deprecatedHashes": [
          "bc6d6fd6be081c0beb460ab725e62b50c482a06ea6fa17a824bef3d0a7c6124d",
          "11fce1c451b4d27dcd2577e5aa35e094c1daf8726c7f20b17eeb1e2ba3e7978d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324297665Z",
      "vulnerabilities": {
        "vulnerabilityID": "c4acdfa3-6bb4-4c32-8e49-6e03407d5b8b",
        "line": "133",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "132         assert current_fingerprint_acronym not in self.driver.page_source\n133         assert dat",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c845b3358e849ce0c02c3231de6d1f9ab08f3537dea4d8e25bc51885dc718140",
        "deprecatedHashes": [
          "5c686ccea6dfbdeee632efec5ea8b63922e976663036b6e7691e054da7c6f355",
          "a08fcdc1e10703da712c161dd7dd253b0b0bb3a6cc8dbe773e0f221d07b35704"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324298765Z",
      "vulnerabilities": {
        "vulnerabilityID": "e0405a7f-09b3-48f5-bf48-9a44e34b825b",
        "line": "134",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "133         assert data.fingerprint_name not in self.driver.page_source\n134         assert \"404\" in ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "432a25f790a3c7065b63d75b1747efbf69e5ef1f78d7006556def6645108a5be",
        "deprecatedHashes": [
          "14b8ef553f15d8c9c2a12784cb9dcb786b3a1450738a15c6bee8dc5f1cc8e763",
          "b679447c6e4ec442fe848bb50804a18ab90b9757316f954358315151619f99a5"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324299765Z",
      "vulnerabilities": {
        "vulnerabilityID": "82afeea4-f441-4db1-bf12-92d4495e8d39",
        "line": "141",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "140         self.driver.get(private_link)\n141         assert current_fingerprint_acronym not in self",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "87068703908a5bef23bbafc1fe02680f3e061b54d348370af4866c5fe46359d1",
        "deprecatedHashes": [
          "89114ce87b1b71033aea148ebb24cb4c3a0a2c869eaa6df4bca38cf5fb7accf3",
          "012baa661535aa41d3a78d64cb587c252638899071b491171c33e3dc5c4b154a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324300765Z",
      "vulnerabilities": {
        "vulnerabilityID": "8879fce9-8dcf-455e-a715-3a77e0319add",
        "line": "142",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "141         assert current_fingerprint_acronym not in self.driver.page_source\n142         assert dat",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "09ad40a0a26f4ac32a6690c0be0180a0f037ec340cedc6d21d986c75b00c0256",
        "deprecatedHashes": [
          "51d1626a66e64568265e1eaf38a80a239974e391f53fe8a01e95a1945198d535",
          "07258fd97dd5f114469b5f7fd37f1c1d0c5f2d9a4d3a494b0046116a8263abff"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324302165Z",
      "vulnerabilities": {
        "vulnerabilityID": "98961572-e37c-4034-8a44-88fc8f4d201d",
        "line": "143",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_private_link.py",
        "code": "142         assert data.fingerprint_name not in self.driver.page_source\n143         assert \"404\" in ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "84dc2231beb50cca5181a1348b53be21bd6a8ee69d8ad0348561a8d4544d7971",
        "deprecatedHashes": [
          "cd3b034a63e3b602c98c090c343964c7c1a313780fed18c31c8e2512e2ad554c",
          "4303977337271a066af881eaf359b5f0f904277590c0735d3ebb7d20ef41c11a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324303265Z",
      "vulnerabilities": {
        "vulnerabilityID": "8d94efd3-5f38-44ce-83f5-fae4dc3bfc42",
        "line": "34",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_publish.py",
        "code": "33 \n34         assert \"DRAFT\" in self.driver.page_source\n35 \n36         count = self.utils.get_numbe",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4fbaa37fc0b30ac8617917a698faf19e86d0cc3909040d3e038cabae0a460ad7",
        "deprecatedHashes": [
          "6b2d7b4fe42f60b11851791eedd685ba7bd293d42d75a1821bb64624a49e379d",
          "ff767101ef9f096f9ee377f3d8c762492f93e824bba26e62680c2656c04c98eb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324304365Z",
      "vulnerabilities": {
        "vulnerabilityID": "3fefbfc5-5f45-4b44-8e8d-ace5c7eafacb",
        "line": "40",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_publish.py",
        "code": "39 \n40         assert current_fingerprint_acronym in self.driver.page_source\n41 \n42         assert \"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "109ba4ea06d6194a70e8deb483ccada8fbc91075ea3391d05e5f61c9a8a931c4",
        "deprecatedHashes": [
          "dd41c9f909f9456fb4d35d57a03b87eaa0a03ab2e0310f0fc95ae1ac928344f9",
          "1d649285bb46924c5243f2562a77ec9a1d8cc4acb0be6b5e1d78dab343ee9316"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324305465Z",
      "vulnerabilities": {
        "vulnerabilityID": "ceb37137-20ea-4bf2-ae58-6166515fc063",
        "line": "42",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_publish.py",
        "code": "41 \n42         assert \"DRAFT\" in self.driver.page_source\n43 \n44         # Open fingerprint\n45       ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "0a468f63a79b413dcfec072a95d17aa2db31c539547594da2b59b8cc1b9a22b7",
        "deprecatedHashes": [
          "ab45a12495a3250775edd2cf6f9a76cf440143222f08b4ce91969bbc6fe371b2",
          "293c196ec677ff2687c0cb2a3bd4e5489c11cf7fb87e84ebe2d76dfe8f88e318"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324306665Z",
      "vulnerabilities": {
        "vulnerabilityID": "75a929dd-e9e5-4f78-aad2-1c9943d7d458",
        "line": "71",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_publish.py",
        "code": "70 \n71         assert current_fingerprint_acronym in self.driver.page_source\n72 \n73         assert \"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a2479c3ebf9f8abd600c9fb82a8d084e892ebbe383efb8eb04430e19d9d5a722",
        "deprecatedHashes": [
          "d559d18a9b54491b0fc4543b0df18175784b3394ccea077dbdc0a9c3e2e64e59",
          "9d74db8f326a492aba885a3d2fa6d257a23a37368620119d1b77c99cdf259878"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324307665Z",
      "vulnerabilities": {
        "vulnerabilityID": "160925b2-e66f-44a8-8ceb-1ea03b81ee16",
        "line": "73",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_publish.py",
        "code": "72 \n73         assert \"DRAFT\" not in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "be48cc1af510626037b7a95cc049dba825199e89adcb3afa441ba6de5df48271",
        "deprecatedHashes": [
          "65a7417c844bb5ef977ad182ebf14251fb0fd1bfb9b55787a0fd137fd4601000",
          "f6f07869f979adbe0cd619daa87cab1081951177043ee17b2e44121ad695ce26"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324308665Z",
      "vulnerabilities": {
        "vulnerabilityID": "3f73e7ec-45b7-479a-8caa-1c27481a9b61",
        "line": "48",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "47 \n48         assert current_fingerprint_acronym in self.driver.page_source\n49 \n50         # Click ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "2dc4586972921197ba9754a639a6010547c3fa1b2438069229e68dac111f98ba",
        "deprecatedHashes": [
          "fb4d9017d4f20b5d6dd1d25a1d2c98a50583f1aa00c0e494d71a018ed651ec39",
          "60cc1e8747caefcfb16af39cb51e59b22469fa7d749231070db29f48dc8f0160"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324309765Z",
      "vulnerabilities": {
        "vulnerabilityID": "087e79eb-8f22-492f-8ec0-f53110fbdf30",
        "line": "122",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "121         # Check that the fingerprint appears\n122         assert \"1 results found\" in self.driver",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f374ddcf2e64adce57665964539bdd89259ab6a7ca30396a7dec9ff2559c3abf",
        "deprecatedHashes": [
          "9ff50c4656db3b11e43ce461943a09bfdd5e607c710e9bd1d4acf89c382adba7",
          "062c646ddcca97363b0cfa77c366db4e35c5b6395b301f156ad2eecd138227e2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324310765Z",
      "vulnerabilities": {
        "vulnerabilityID": "54b5786e-c44d-443d-9a63-6eaeeb92e215",
        "line": "126",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "125         for question_nr in questions:\n126             assert question_nr in self.driver.page_sou",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "370c1c67687e5c7f668c665a98c5e2f881cd7dec459c8fbc0c205e0f8007119b",
        "deprecatedHashes": [
          "7797c2712d176fc36b608f1e090c984846a7afaf715ac4a466f2980c4fca6c97",
          "9d210157f77431563989ddbac6a0b94786ed41b5a7f04c520a9edee1a5505271"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324311665Z",
      "vulnerabilities": {
        "vulnerabilityID": "fcdafaed-8296-4aa9-8e30-de0d2b049693",
        "line": "153",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "152         # Check that the fingerprint appears\n153         assert \"1 results found\" in self.driver",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "163dbe9d47543980e51cdcca322186b155b6585b444c4fdfa7dce31e831a45bc",
        "deprecatedHashes": [
          "6fd3051e47e9de8f02687c5a4e46e404d0c4c09683ef753d4443e4a5e2413f52",
          "38051102b8d4c58aa2e9c6938ee9ff4f4172b026e58ba696db6b3b4cc3a28342"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324312765Z",
      "vulnerabilities": {
        "vulnerabilityID": "eb102340-5175-4ef1-9d9a-cc5e28ff2545",
        "line": "157",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "156         for question_nr in questions:\n157             assert question_nr in self.driver.page_sou",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "517b6407820ea596826dc09b8dc698aac540039aeadb4dbc3ccbeb116d1e9411",
        "deprecatedHashes": [
          "ad9c6fa23caa46a31886f831ae2b8fb556bb955de5a0f0a4aa2e242d70f37c73",
          "2064dd0a7033adfc698c7933e53410abd819741e35e57bf57fb7d5b26970a53c"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324313865Z",
      "vulnerabilities": {
        "vulnerabilityID": "2e93c48c-05a9-49c2-9fdd-d1d15d272e67",
        "line": "215",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "214         # Check that the fingerprint appears\n215         assert \"1 results found\" in self.driver",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "e127265047f8e00aa9cee02a6d1f9801c2b15512f8d904d48a2e7880e3809420",
        "deprecatedHashes": [
          "750d4f8472a947057841eb0a9be760d1cf101179089d08d78949d36161273de5",
          "cb6ac732c65f3b35f5c3be129e007f6d17a8273a2e4c89165bb389e585913869"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324314965Z",
      "vulnerabilities": {
        "vulnerabilityID": "c2cc22a4-6afe-4ed4-a5ac-6a3d4ab084db",
        "line": "219",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "218         for question_nr in questions:\n219             assert question_nr in self.driver.page_sou",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4612401d25576bd54ebed5f1f7f17f94ad8c3e12064b2127bc8810f61d310316",
        "deprecatedHashes": [
          "c9cdd87901525f611b072756e5d37fb9d96799803d17d9c199e9da7f770c5f2a",
          "e49f6af3e1254322cde563388a01aa23fe044032b8b030d25a65a666a951f4af"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324315965Z",
      "vulnerabilities": {
        "vulnerabilityID": "17a0f9e5-8645-4d08-856c-d5b5f7e139a1",
        "line": "243",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "242         # Check that the fingerprint does not appears\n243         assert \"No results found\" in s",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c1f2d37d519e7649717f51048995da0d3ce80f437e2eb1ac1c6eca510817fdab",
        "deprecatedHashes": [
          "8eee5e1e11aabf74462b1edffc3d91ffe3d10e8db98affd4b6753fb63a332e81",
          "9bdab00f10ee1ba61fe7e594028115e943d3f0e1bce9c38e3617eebdc9308fb9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324316965Z",
      "vulnerabilities": {
        "vulnerabilityID": "baf38c0c-4ce0-4be5-8254-9e5e552a8aaf",
        "line": "247",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "246         for question_nr in questions:\n247             assert question_nr in self.driver.page_sou",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6e4ec509fc7f2bf84976029d44aaf4bd81500d887ed7041f9ed6b5dfb36892be",
        "deprecatedHashes": [
          "0a0c753b9f12598ed5dc902662bffc108c59199af4266d0d606ef2f2307042c5",
          "6595ff774e116325b75595ae71cdd1953d4a8ad05c57ccb94ba5b97655b0f56d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324318065Z",
      "vulnerabilities": {
        "vulnerabilityID": "cd485d9b-4670-49a5-a1ff-9bdbfb66ef92",
        "line": "267",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "266         # Check that the fingerprint does not appears\n267         assert \"No results found\" in s",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "ca9936072ac18af375ac82c534bd30e8fde61e3cecadb1b71cb7f5d35691b0a7",
        "deprecatedHashes": [
          "af67e51cb9a58d3d560da2855e93fb82844f88b6d66987a35e70dda87109c6e5",
          "44bb0961dac591254ca451096b68615c57610654c7a5cf05b436bf39b37811e0"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324318965Z",
      "vulnerabilities": {
        "vulnerabilityID": "56c6a695-3ba6-45b0-abd9-fbe1054ea5cb",
        "line": "271",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_search.py",
        "code": "270         for question_nr in questions:\n271             assert question_nr in self.driver.page_sou",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "98f7f1b4f39f4f7b2c978cd2c292d2927dca09754f3a2116676fceda2bced717",
        "deprecatedHashes": [
          "7cca807600e1baefce0cda6e6e0f076c248f0de350c58d5b4e819a2514534b61",
          "141c7708851a1b1dd08dfc093a55209ad57dc6b9b9d4e1c6e73233ea1b2abedf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324320065Z",
      "vulnerabilities": {
        "vulnerabilityID": "7644dfc3-5676-409b-a0d2-29fada02d3bb",
        "line": "68",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "67         # Verify user1 is not owner yet\n68         assert user1[\"first_name\"] not in self.driver.",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "921ead1454beee6e26473038bca5bd0ecf95631e60eb5d8bba47ced2f12a6803",
        "deprecatedHashes": [
          "c6bd1098f57e9391c32b407c07363c081703f6d1c93260f29946677404e1feb8",
          "c9a971be6d6a3d6709c686d94d2bdd10d1dfd919faefb61b4c86862bbfb18694"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324321065Z",
      "vulnerabilities": {
        "vulnerabilityID": "b03a875a-e8f6-421d-bda4-a4301b30f1dc",
        "line": "69",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "68         assert user1[\"first_name\"] not in self.driver.page_source\n69         assert user1[\"last_n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "56fa47f0b6abbde0e56b120c6151b4cd3e2811a1ee65b28101821eb62833121b",
        "deprecatedHashes": [
          "494c402f8535577bd90c5e81da12c61bdfb46564eac2478d756dfa26c11130fa",
          "cff160a3a20ffe928bc0072466f472d4dc4e6ecc4df47ca2529b42ca76bb7c9d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324322065Z",
      "vulnerabilities": {
        "vulnerabilityID": "9d833df6-2392-41b4-af80-56852e6494c3",
        "line": "93",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "92 \n93             assert time.time() - start_time \u003c 10, \"Valid email msd did not appear after 10 se",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "770157106e072808a44e142c7c844edcc3253a3f5071b8fb14e37c5b1b6c672a",
        "deprecatedHashes": [
          "b61f273ab941210fd1aea6a86b7051f5b8dce14d3fbc477d1c4ca6574e7a338d",
          "85ca2ff5c711e1145201f9c385982d59210fa3ed402d0dc1e835fe6f1644a18d"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324323165Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b182577-a658-4141-9937-8960a2bf00b0",
        "line": "122",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "121         # Verify user1 is owner\n122         assert \"managetoolbar\" in self.driver.page_source\n12",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f127759bed584eaf25e07888d911d2e8ba3b4645e38cd1a960bc94c3586e93ff",
        "deprecatedHashes": [
          "35598e8d1078ca0eba528be594e9b9f40c5c050bd2568a3f4fac92bc7f6ae29e",
          "efdaac5dd326adc38ba1eb7ad06d53f55a2bde3a636d96334f26f1298311444f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324324165Z",
      "vulnerabilities": {
        "vulnerabilityID": "6970c788-3813-4e45-928d-11518e3d75a3",
        "line": "132",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "131         # Verify user1 is owner\n132         assert user1[\"first_name\"] in self.driver.page_sourc",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "3e3bbd4dc15335102fc47f18133a57e8cff344a9a8609584023dcbe99de0a4b6",
        "deprecatedHashes": [
          "78c2a8e2c66fc9b21fa5a99aab4c65a99c612c1348434d85a0fe13828e563ff6",
          "5a556c66b7ec3dfcb62eff65e58b3145274e9df2b4da3575db90ae29d5568e63"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324325165Z",
      "vulnerabilities": {
        "vulnerabilityID": "0932ed91-0c1d-47d7-9704-8a0fe145ed4b",
        "line": "133",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "132         assert user1[\"first_name\"] in self.driver.page_source\n133         assert user1[\"last_nam",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "2b5253fe1ef589012155cebe3c9a9a6177a15ff03ee32ea2c881da9ae2a06e27",
        "deprecatedHashes": [
          "82c0c4f270121bad50ca4ff5ffc9f7c183e9bb751f4fbd224a7bf7b504d9629e",
          "c87e10646897ca15d9148a5fd4ef063e4dca0f423763f12fef45a5df685a0d87"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324326165Z",
      "vulnerabilities": {
        "vulnerabilityID": "43517e64-00f7-484f-a158-428f5ff297dc",
        "line": "148",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "147 \n148         assert notification_str in self.driver.page_source\n149 \n150         # Remove notifi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "cf2715ca7ab93b322bcb7c743e1ecc20f09d2af7d50c18897f2b609adf1f713e",
        "deprecatedHashes": [
          "c3f1811636a9f381847cc1193d6b0f26bc9b5f6860591295b9ce53242b213444",
          "3cacf9a00e57f653b0acc3e42a25bf5b7ac35d84ab373c648fc015abed74bab2"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324327165Z",
      "vulnerabilities": {
        "vulnerabilityID": "89da840c-e650-47e7-a3b3-6f5f1b61852d",
        "line": "155",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "154 \n155         assert notification_str not in self.driver.page_source, \"Notification was not remov",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "5f570574fe3878e76a1ed6be8ff14a81115e02ef6f4120609bfd8de83a60336d",
        "deprecatedHashes": [
          "34406264f1741caff269ae65fc4a671d2f076e9dca2476b2555b85bd8727abf7",
          "5536f913440fac0a84b582a2bda96f1b7e59647b520227c9a0009af177b023c7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324328265Z",
      "vulnerabilities": {
        "vulnerabilityID": "650cc3e3-9474-45db-ab75-5932c5f68ac8",
        "line": "177",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "176         # Verify user1 is owner\n177         assert user1[\"first_name\"] in self.driver.page_sourc",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f2c70534f3382a97be2cc15cf790ccd67bc6f11beaf264dac8832ee8a0233e10",
        "deprecatedHashes": [
          "20f759c1af911fcc3ca439f692072197845d5b1bc31a8b575998748e2d9a3a85",
          "e5309781423136eec7e8bac6883dfbcef9e114c44c506966798107df5becfb65"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324329365Z",
      "vulnerabilities": {
        "vulnerabilityID": "533f2950-a85e-4a18-96a5-bbeea8b3cd62",
        "line": "178",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "177         assert user1[\"first_name\"] in self.driver.page_source\n178         assert user1[\"last_nam",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "728bc2713a5894aca0fa6d144d55da82e00e164f3014d69f5142bc1c62f863aa",
        "deprecatedHashes": [
          "b3f3cb76d1dc24658cd167d4cd7ce8e854d88cd973e269b9a780e10525066f59",
          "3ef9249a2ff14625da85c332ee65865d11b4a2614ebd95e6598dfc7a992468dc"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324330365Z",
      "vulnerabilities": {
        "vulnerabilityID": "360a7695-b2f1-4a84-aff5-a2201b5a85d1",
        "line": "203",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "202             # Verify user1 can not access draft\n203             assert \"DRAFT\" not in self.drive",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "2b6207fa31340661c1ac940e9c80a08a269655c8b0c2586ec443dba79a8bcb73",
        "deprecatedHashes": [
          "f533e089a51adde1e88ae3a81fdf9d3b0e86196dbacbf73dac47bee14fb6480c",
          "6f0ea4738129b9d52df928547aa489ff966ec89a338512bb9daa66d8e62182d8"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324331565Z",
      "vulnerabilities": {
        "vulnerabilityID": "7525d1cd-4552-4662-9c6b-c57845cc926d",
        "line": "204",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "203             assert \"DRAFT\" not in self.driver.page_source\n204             assert 'data-acronym=\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "1a82036aae3d65efba15849c33f400397d96bfb3df51f2029121e327b72669e9",
        "deprecatedHashes": [
          "c4ddfd5e17da7e227f133a36eb941fce93e46cf4d8d17eff35d84775a48f5b43",
          "a77aac11619634da4cb018ff1c1e0b06e66bb2d26041c90303afbfa5f8464282"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324332565Z",
      "vulnerabilities": {
        "vulnerabilityID": "4b190812-f909-491e-8f54-a676fc5e3e61",
        "line": "210",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_share_ownership.py",
        "code": "209             # Verify user1 is not owner\n210             assert \"managetoolbar\" not in self.drive",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "bcadc670d2c990a737e939b6b28a049adbd27b0beaf7de634ef4cbf51fcd816e",
        "deprecatedHashes": [
          "f83e273b6a3fc0727fb94a06362d5f0d4468bca83ef88218042550b46668dfab",
          "9c318d11e0a910db6880323315fb55e98fbad2a24474352b8005c547d5f5b8fd"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324333565Z",
      "vulnerabilities": {
        "vulnerabilityID": "1cd65de9-2fbb-45ab-b347-91fcc1a39733",
        "line": "167",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_views.py",
        "code": "166 \n167         assert count == 12\n168 \n169         # Switch back to landing page\n170         self.",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "1cf86f31d942f4ef98c518f83e650eeba4126e18e77fbf20a2b791f483eaf050",
        "deprecatedHashes": [
          "009d3317fac1d8f69a2e380349de0f6a3f85d69d8b95b2e1b745e6768101c9ba",
          "e6ec92318de084f89607aa6e41c6e9d3f1f25fa91fe0b26e9328e0f08596f354"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324334565Z",
      "vulnerabilities": {
        "vulnerabilityID": "a3737c15-1150-4732-b7ce-d543b88e1814",
        "line": "194",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_views.py",
        "code": "193         name_field = self.driver.find_element(By.XPATH, \"//th[contains(.,'Name')]\")\n194         ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "fc25c5b22ed04398b2486deed9758ffc509c9556c9b645046465ba092ec05807",
        "deprecatedHashes": [
          "83d1a1352f6f0219626c652012e99d454da50fe26b25e72a0379476c042d94b2",
          "67271b9e8ab95a93b6edebea63d1b28c4d25eb84d2b17d14c24e2c3e25680351"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324335565Z",
      "vulnerabilities": {
        "vulnerabilityID": "925ac1df-5280-46da-9c22-af81ca412e11",
        "line": "196",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_views.py",
        "code": "195         institution_name_field = self.driver.find_element(By.XPATH, \"//th[contains(.,'Institutio",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "2bc7f3bab65ad143cf0a5e0835f92cbcc257a50b4e20ffc99ceaa6a9a5eee6e4",
        "deprecatedHashes": [
          "6b925f2a0128f69dda37a0589eb789db4d8b530e28782748ef5a372736634ea1",
          "3b09d1afbdf6fea3e26ad98ac50a7337f757f92fb02e59e8f7e85220037dc50e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324336665Z",
      "vulnerabilities": {
        "vulnerabilityID": "e3d97e2a-a1ac-4194-a06a-d4f432c0628b",
        "line": "225",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_views.py",
        "code": "224         # Verify that the expected fields are listed\n225         assert data.fingerprint_name in",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "de80a4b527ef55437f874c2b4fa4d5e11b5f82719ad25eae6e0eeabc7ce871fc",
        "deprecatedHashes": [
          "5460117cab8c58ca60a2ab97c4829dbdac37738d06040f96f93e87207a67816a",
          "a5ab4edd4a1a4d401241c8e0ec849a18c2b5e9765e0c5b452020a46483fd9875"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324337865Z",
      "vulnerabilities": {
        "vulnerabilityID": "9e0eb4a2-0c9f-4b7f-8ada-13d0c4558cae",
        "line": "226",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_views.py",
        "code": "225         assert data.fingerprint_name in self.driver.page_source\n226         assert data.fingerpr",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "fe437ec52b816edbbcb7d3698aed3fc348b6900a9accf6f9b87d7f93a4cbe239",
        "deprecatedHashes": [
          "375491abf6bb866d6f883f013838475f39e7d952f7a8c982d1797572588da4b0",
          "0615246bcb4353bec25c87539a9ef65329fc68d41e5bd8b659103d77515d48fb"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324338965Z",
      "vulnerabilities": {
        "vulnerabilityID": "88dc08f5-a050-41a7-8f35-af1a5a5c4d9f",
        "line": "252",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_views.py",
        "code": "251         # Verify that the expected fields are listed\n252         assert data.fingerprint_name in",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "8833c21656bc0fb4ade37f1a8a5768c9723f7f16d4ea7d8d1224a2c45b336289",
        "deprecatedHashes": [
          "4a5247cfa4484569359180392dd2b1c94b7b959e4828ec78dce7ae57a9041c20",
          "d77ce29548211a0ca1c3680837c2416a9c93608408951949826e10af6c051bd4"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324340165Z",
      "vulnerabilities": {
        "vulnerabilityID": "ae499ebc-54a5-4102-8d98-3731e31fb5c9",
        "line": "253",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/fingerprint/test_fingerprint_views.py",
        "code": "252         assert data.fingerprint_name in self.driver.page_source\n253         assert data.fingerpr",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4de4adb985f9a69554616268b18f3f35c7453266f1ca3aff524c185e88495e14",
        "deprecatedHashes": [
          "e6fa45914bc62491a78a733b44de892ff8a464baae533937b478062745a7cb5c",
          "c646d604e321b2128feaf7f50eb2513341904fa2243d334a7f1cebd8cea9c191"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324341165Z",
      "vulnerabilities": {
        "vulnerabilityID": "995e9540-f8d1-4455-8c30-e8634ccbbc6d",
        "line": "36",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "35         # Make sure user has import access\n36         assert 'Import' in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "e3508543ed91e7ed817a78369eab667329156d58ec58e5ba3f2552227698d423",
        "deprecatedHashes": [
          "ab00c9edc1131be87eedd5c1ebe754f0a315d878ffdcc2632101d914cec7d839",
          "6239a4e97d463cbe0d92d145deee8bdc2ef81caf0fec8d699b303024895f55e3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324342165Z",
      "vulnerabilities": {
        "vulnerabilityID": "5507ed4a-7e52-47ed-837a-d417b5064371",
        "line": "49",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "48 \n49         assert 'Aborted' not in self.driver.page_source\n50 \n51         questionnaire_file = N",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "d13616d3bbc9016fc679b503655cfa966e5dc4dc2c1fb3a5195d7cd08e15d63b",
        "deprecatedHashes": [
          "e678bcd066e38e9558565585464acf011e10f27bec565566200fc9f9950743e6",
          "75c6ed2df943a140ea6510c9a9ffaf23f317591c08a7ad5c3ae124571eba689a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324343165Z",
      "vulnerabilities": {
        "vulnerabilityID": "167dcc53-c2d6-4dbb-85fe-aff475f483d6",
        "line": "59",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "58 \n59         assert questionnaire_file is not None, \"All questionnaires are already inserted\"\n60 \n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "5bdbd8d9e453930238cc0b1f03f3f557b8b4aaa03b12a0b0910d54475603ec29",
        "deprecatedHashes": [
          "1dc5c35e608c6f7d5569c766a341d43e2b1718c53c0db4fd2ee885538dab8684",
          "c200db3ace8fd60acdb01718f55c3de987d1a0425da3ad92e54c8891ac2d7ece"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324344165Z",
      "vulnerabilities": {
        "vulnerabilityID": "9aaa6730-ffdb-4bfa-a0e8-1997b00264ab",
        "line": "74",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "73                 # Check not aborted due duplicate key\n74                 assert 'Aborted' not in ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a23594c36eabe1411cbd1dfb1346d34f1914d42c1abdeeb93315b5f00d308d06",
        "deprecatedHashes": [
          "8b9994574a3288fc8c021fb8bfff2ec1b4dc0b90af50f4ce310c2d2eed43ee20",
          "e3d48238cdf560ab24c8784361497b700d4a817847d3c37c1b3a479b8f1fbd39"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324345265Z",
      "vulnerabilities": {
        "vulnerabilityID": "1f5c4b20-a224-4bf3-a752-c4751de46a8b",
        "line": "90",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "89         # Check if the questionnaire upload was done correctly\n90         assert questionnaire_fi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a778608341d53f8403701d5f00e63a12b261386f19c9959e902a390eaf044952",
        "deprecatedHashes": [
          "52f0d21c542a7037b7ef48f094ed6dc993063255df1ed47c6e618970756ba77c",
          "765fddb070c7be6070ae7f425aa974e91ccb507bf570fc0bb9495857f26713ba"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324346365Z",
      "vulnerabilities": {
        "vulnerabilityID": "bc9b9456-8e3d-415d-8a6d-5a90dc4ae01a",
        "line": "91",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "90         assert questionnaire_file in self.driver.page_source\n91         assert 'Finished' in self",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "ca01b5d09418f6ecc587d7b8a395b4684e02d40f3010b2dd227b95f915bc0818",
        "deprecatedHashes": [
          "ea4d106ec2e4932bb14e38f5c2f9aa5750160f10975ae064ca47845d083e8af3",
          "d7d580aa33e3e0953f1a38fc32864aaa17ac4972aac3377fd4b11a4770a2272f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324347365Z",
      "vulnerabilities": {
        "vulnerabilityID": "1c46b4bf-80f8-48c1-ab92-37f975a47f87",
        "line": "92",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "91         assert 'Finished' in self.driver.page_source\n92         assert 'Aborted' not in self.driv",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "d2aab8d0b1d9ffd9d1269767228d159fb21730489497169a57c8994a428f8d26",
        "deprecatedHashes": [
          "d0a5ed8eb85a7758a2d20680c30dff389c567543ad1bdc6338f82a95f472ac9c",
          "dd733dd21d7068ced40830bf56ea36416343bdb4d8f5c9a96df6650854c49f99"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324348465Z",
      "vulnerabilities": {
        "vulnerabilityID": "63bebe3f-4514-4962-81f6-6add4b269132",
        "line": "116",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/questionnaire/test_questionnaire_import.py",
        "code": "115 \n116         assert questionnaire_slug in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4a0bd1aa2b7446bb47b21a80db172a7cd9718fee1a66d85982a19abf57f0dc0c",
        "deprecatedHashes": [
          "867584f0d937f9f69449aa5d246d17a20398b60b78bbffb954a4ea3ba5673de4",
          "87e51fddac67806dfa7e45a02332167c77f97c6c0440f234af65629997a53488"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324349465Z",
      "vulnerabilities": {
        "vulnerabilityID": "6f73d75d-5228-4d2d-9e38-8b2b1c9a1a07",
        "line": "95",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/searchengine/test_search_engine.py",
        "code": "94             if valid:\n95                 assert \"No results found\" not in self.driver.page_source",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "6b875a8cc8b39c39812dc1c36c4408ef392069ea106ea95bb7f703fe86c34430",
        "deprecatedHashes": [
          "73a5d23ebb651775c67b1dfb7c5adef14e1dc2727ed7a78e59cf9bcf331e3f5b",
          "b2da0cdaafa6cb0e737233eabb2e231d1c40db426557c762354210b114e3a37a"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324350465Z",
      "vulnerabilities": {
        "vulnerabilityID": "cea50c37-c1d6-4abe-8c10-107522bf8b2d",
        "line": "97",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/searchengine/test_search_engine.py",
        "code": "96             else:\n97                 assert \"No results found\" in self.driver.page_source\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "eb42b39c66c3d428a4133f7967ddfcf9e17e70a57990ba9175c7aba6832edc79",
        "deprecatedHashes": [
          "0ac651bbfb98110a06bd2cb695f307980b3879047acdd3377d4fb1fe8c6d4f5f",
          "35b5387d6b258188bcb5ab51df4d9b822ed2ce802a45a37d858e83208367d627"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324351465Z",
      "vulnerabilities": {
        "vulnerabilityID": "1e94521f-7aed-4764-92e2-06ba9f0e450e",
        "line": "18",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/testcases.py",
        "code": "17 import os\n18 import subprocess\n19 from unittest import TestCase\n",
        "details": "(1/1) * Possible vulnerability detected: Consider possible security implications associated with the subprocess module.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B404",
        "vulnHash": "fbac1098cd21db7984d3360a23b58c7e02cdf0b8c5ec18055874eef8efa76ebc",
        "deprecatedHashes": [
          "abad2dd41932e7cc4bc6ee68b14ecccc94f8450ac50548d0b1e3e871f5ad6dd4",
          "b2a9257e1a3aa9ae98045b5b5f657719347c9355b3f532b74e526c71cc0b1322"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324354665Z",
      "vulnerabilities": {
        "vulnerabilityID": "fcd895ed-e4c9-4b1e-874b-9bb6977ef484",
        "line": "96",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "95 \n96         assert user1[\"username\"] in self.driver.page_source\n97 \n98         self.driver.find_e",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "a35a7be4a14e0cf94ff301d71a706f60e82db79e16507504e5514f97bfd6bece",
        "deprecatedHashes": [
          "a2470b336463dac26757d7e03fc229bcf994d59713a5340c1622c75e5da9c35b",
          "3bcecf213b6d712354c6af4a4274280f55cdb5e3c17efd3d95ae60eff43594e3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324355765Z",
      "vulnerabilities": {
        "vulnerabilityID": "dec11527-6645-446f-b3de-be12c492654f",
        "line": "102",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "101 \n102         assert \"deleted successfully\" in self.driver.page_source\n103 \n104         # Switch ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "7bcc6c0f9f669b93e469dc0cbe7bff42ac7fd08b18d4bbd8aa7437a76c805881",
        "deprecatedHashes": [
          "c9e0913ad1471607fedb54b20274d399b413fdffbf3ba062e667203b5f2fe032",
          "92b02693845462345228af793ac46cb1b97274e4f0281ef8e77ac138789c3469"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324356765Z",
      "vulnerabilities": {
        "vulnerabilityID": "08c1276a-b496-4e9c-b5d2-52488e956b54",
        "line": "125",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "124 \n125         assert user1[\"username\"] not in self.driver.page_source\n126 \n127         # Add\n128 ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "1c67be86c093264cb5543af924035273c7aa80d5b9a10b4fc3c1f2da60ea26b1",
        "deprecatedHashes": [
          "d9783f79a9ee414baea31b7e7bf7c0f7cdaf5305bbca232bb450ba4b5e647403",
          "adb8bdab2bf8b7173b71ee1c1e72b055da3d944cf0c91343c932055b96b4a089"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324357765Z",
      "vulnerabilities": {
        "vulnerabilityID": "10bdb338-0a50-4a99-9643-15b5a3529baf",
        "line": "139",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "138 \n139         assert user1[\"username\"] in self.driver.page_source\n140 \n141         # Switch back ",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "828ffd82df5b4033e75f15215c35e93baa4eb827976d9701f9b00fcb0e7ca156",
        "deprecatedHashes": [
          "1dc53378391de8591a6b5f72df59bfee08ff237c791d7b128dbf26db4f0820c6",
          "f97bf9eea5920021b37305815d1fbf0d85bee7c243cf6494c34662e01cb5bc86"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324358765Z",
      "vulnerabilities": {
        "vulnerabilityID": "3622856f-c903-4951-a9af-b79ff6f81d0c",
        "line": "157",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "156         # Verify contents of question_set 1\n157         assert current_fingerprint_acronym in se",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "38820423e12f36b4469b8efe7d1cd419a831f0efb893299dae2417a171c7cabd",
        "deprecatedHashes": [
          "aa9df7cdeef3bc32c755f683941ad1d1560037effa2c6aecec2fe1ce85a5f566",
          "5fe3d98ae82ebd05a01ae1bb5aded7f0c710b8203e8fb4371e39180f23c2ee05"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324359765Z",
      "vulnerabilities": {
        "vulnerabilityID": "21218d33-a38b-4887-b554-a2a1c58bb78b",
        "line": "158",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "157         assert current_fingerprint_acronym in self.driver.page_source\n158         assert data.fi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "aa74903a2dc748fb070345cf73a634284b18737baa2d0a36569e5c6d00193363",
        "deprecatedHashes": [
          "473758f93b9b3b989e410113211fab7a8ccadec8d79228a27d0b2414e20b8198",
          "2123e0273bac13b7c438080ab0709c876db1f0f75564e92212a6c761a082eb23"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324360765Z",
      "vulnerabilities": {
        "vulnerabilityID": "445fe3f8-7a9e-4498-a4bc-e83a5824ad4c",
        "line": "159",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "158         assert data.fingerprint_name in self.driver.page_source\n159         assert \"test questio",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "21aeefcea2f011a9f2166c83799424ca8557ac96eae8fe0ee34ab13ff9a72449",
        "deprecatedHashes": [
          "ebdabdcec4f65ef3ef80f4841cbc99b7d016bddfddf3149b290874328c7650e0",
          "62c1f0fce69a7996f676c8a83b32d8772a1c35c7935d4378b9d471e238d76992"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324361765Z",
      "vulnerabilities": {
        "vulnerabilityID": "0952c50d-c722-4416-bbcf-d6072e83d04a",
        "line": "164",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "163         self.driver.find_element(By.ID, \"question_2.01\")\n164         assert \"test question_2.05_",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "5369054298021f085462b5aa5257f8c03d0187876f7b36f88626598f000e2134",
        "deprecatedHashes": [
          "cd38e970a23b3fd4efb3462fde455d9f502a3c77748acfdb825fb9f286b50d51",
          "fe434ace9e39706a81d78f3dcc3b9ce658d338c1b5ea7ee01758ca7c9efbb510"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324362865Z",
      "vulnerabilities": {
        "vulnerabilityID": "30376eb0-1c12-4747-a01d-f1b7843ef742",
        "line": "165",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "164         assert \"test question_2.05_more1\" in self.driver.page_source\n165         assert \"Aveiro\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "c02732944ab4357d261cc3e5ed703e83c1cb203af69c9dc2a9dfa6ad9450a4cd",
        "deprecatedHashes": [
          "b85cded016b6073a9e43b218d05d971981a91617187c2359612f79abd66f0a42",
          "f071a3fa19bf168f6bef30dd51594addfd0a51c64d9ff67a5ba79f6885432430"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324364165Z",
      "vulnerabilities": {
        "vulnerabilityID": "c76f524c-3757-46bb-b598-521a5ca6e1e5",
        "line": "166",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "165         assert \"Aveiro\" in self.driver.page_source\n166         assert \"Portugal\" in self.driver.",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "9543b5014c1ebbfb2713158f20dcdf876c90e3bbcdc95e45ab8bb3929a320f7b",
        "deprecatedHashes": [
          "65ec5e78b7e224187413559f42d2bd9cc01a2a88dce5e56591427de50bbaf715",
          "f5848f31912b93e65b3eb82b5978e3c720a43bcbe1beb21c2b0640c0b8d7cc89"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324365265Z",
      "vulnerabilities": {
        "vulnerabilityID": "87d36f5c-378a-4331-bb97-b8c8641d1be0",
        "line": "171",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "170         self.driver.find_element(By.ID, \"question_4.01\")\n171         assert \"test question_4.01\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "b85f8f284c2c6c0c3609a1efd62e635b151ef80695f309ba5c275b4b8f3213dd",
        "deprecatedHashes": [
          "99ddfa8318a7f189886d9822a1c7985791c9e077dcb580951eb48983104c59a4",
          "4f204b346d562a71e3a9fc8c69028770f4a6656981cec15ce5819be15d2f72cf"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324366265Z",
      "vulnerabilities": {
        "vulnerabilityID": "e48754f2-df52-4c5d-8d3f-b1f4bccad233",
        "line": "172",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "171         assert \"test question_4.01\" in self.driver.page_source\n172         assert \"test question",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "825295759a8cfb277c8d832860ba7b00341afa6203fb08842111b49f74af0a91",
        "deprecatedHashes": [
          "7568be378fb7541cbb2f2710a237d5873bf189c8516bc1a234bc5f7d22ef1146",
          "25e7895833acdb6dfbca4a74ce0630ee363f92639b4160c05e8f7d213721808f"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324367265Z",
      "vulnerabilities": {
        "vulnerabilityID": "be4f1132-0bb7-4a91-9323-6e2759c56f2c",
        "line": "177",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "176         self.driver.find_element(By.ID, \"question_5.03\")\n177         assert \"test question_5.05\"",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "557db3212d52ba3819df2c8e58be70f900b975b5b74485dc2b781bfb3b76bc8c",
        "deprecatedHashes": [
          "ae96ce5a3b5088a956c284a28de02b02e29358e138f72c02be154784ec0f817c",
          "1cea416319025d535796c17a3b95f47b57e51ef6d35847db97f5b1eb2d7d8fac"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324368265Z",
      "vulnerabilities": {
        "vulnerabilityID": "122a7272-5419-4076-83ae-942c3b1cfcbf",
        "line": "178",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "177         assert \"test question_5.05\" in self.driver.page_source\n178         assert \"test question",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "332033acec9e5d01ef6e29ff827ac877b62818458434ed1f171192a9b4a1085c",
        "deprecatedHashes": [
          "1c408802332fd0f225c3a90fa012629d9bd61999c4078db52dd2a6ee38694181",
          "419532659d493074cf145f48ec8d2bcf294d00577557292279a3507e38182da3"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324369365Z",
      "vulnerabilities": {
        "vulnerabilityID": "52897ecb-ae31-4016-b17a-9a187c6e907d",
        "line": "183",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "182         self.driver.find_element(By.ID, \"question_601_pubmedid\")\n183         assert \"test questi",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "d751d9d41a1d6aaf3f5aa7324d792f8e472952bcb84cbdb99821a03e0e641dc6",
        "deprecatedHashes": [
          "2f0952e434f5d9524eac9040c80f1a1f649c59dea0cdabf9e0ee418e2c9b4cdf",
          "d3f68989e9a23c60348c078007c21119e37954a09f6afa15805c910dfbaa6e56"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324370365Z",
      "vulnerabilities": {
        "vulnerabilityID": "7cebeade-f345-4602-a0c4-72756ea23135",
        "line": "184",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "183         assert \"test question_601_pubauthors\" in self.driver.page_source\n184         assert \"tes",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "4ece693c10412b9b2e35e68c4a358a037c7da467f8a86a880af212f402b6ccf0",
        "deprecatedHashes": [
          "e6f26765b932f2216e2a8be25895b30a24cf411012ac12553886407d579764db",
          "3cd2736c9f806151f02f059712d13e12c49fd48daf40e761c09830fc5a31875e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324371465Z",
      "vulnerabilities": {
        "vulnerabilityID": "02b28703-4910-4929-b947-0aa36603a8ef",
        "line": "189",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "188         self.driver.find_element(By.ID, \"question_1.01\")\n189         assert data.fingerprint_nam",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "d304b6eb89111be9e0a05aedca825c91450471f90ff2bc3a2a1bd5b77422421e",
        "deprecatedHashes": [
          "2c23f9ae871ecd7c4f3c47073b423c43920c213d0206dacdb3d271798fb38c63",
          "620ddff36686e6167500b58d12542523c61dfb566a0b2b3938a24f52020dca72"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324372465Z",
      "vulnerabilities": {
        "vulnerabilityID": "9aa84278-b102-4376-afd0-fbabbfcfd7a4",
        "line": "190",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "189         assert data.fingerprint_name in self.driver.page_source\n190         assert \"test questio",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "0496760e06acd6c82d60ad9b38ba5321f35ced957f7c7ae7867db8ae3e1dcfac",
        "deprecatedHashes": [
          "25bbedfcbee8b9369f6c3fee83ea61fc9e2df47174fcafe51835cbbb0b7d1d0e",
          "60035778d9d7eb62219c13d0910d12d5cb5a631604eb9fc79587d9371896574b"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324373665Z",
      "vulnerabilities": {
        "vulnerabilityID": "9c17b657-043f-42e4-b5dd-595b94d7eefe",
        "line": "234",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "233 \n234             assert time.time() - start_time \u003c 10, \"Export job not done after 10 seconds\"\n23",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "f69aef9a64515ec85813bab8bc9964f3a3ee44af1ed0ffc5e1d29d9683677179",
        "deprecatedHashes": [
          "a7f0a8f2cfc53c28ad94ba3604f97be19d7d5e9d74a152a8258129e2f25b8e6b",
          "ef2420b3f063f68dedc1de8a18b3a7030a557af6bb5e0d92799d65ffa466a84e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324374565Z",
      "vulnerabilities": {
        "vulnerabilityID": "7f926b68-8fac-4395-b70f-26897cea7845",
        "line": "245",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "244         if allowed:\n245             assert found\n246         else:\n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "489a1c2881e5f929d4ba1ab9d58ff947ae0c45342330062e80a5585807a1e715",
        "deprecatedHashes": [
          "5f80f8c13bbbf53a96d6e6dc184cb803e9cf369b12ed5d76164f0d2589e6fecf",
          "813a94ec1d34e79c69183ac282d4782ff83de509a6269206f2961cee72b4f0e7"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324375665Z",
      "vulnerabilities": {
        "vulnerabilityID": "76d9bf9d-27dd-4ada-a7e9-30d563940793",
        "line": "247",
        "column": "0",
        "confidence": "HIGH",
        "file": "tests/units/utils/utils.py",
        "code": "246         else:\n247             assert not found\n248 \n",
        "details": "(1/1) * Possible vulnerability detected: Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.",
        "securityTool": "Bandit",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "B101",
        "vulnHash": "8b22f9c04ffe1a394e55ebafc8143c547f9202be3d9f0e2ad0a776bfb18d0d04",
        "deprecatedHashes": [
          "a59e036f156578bb41b771192d1412401c191d8f56e9cde269306fe871e1d6ec",
          "56ad6eb93b806b9de3e0e74e3e725140dc3ddbf73fe551f8c72691fabe4cd21e"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324528367Z",
      "vulnerabilities": {
        "vulnerabilityID": "c3f5f68f-f8ce-421e-a2be-c595aa9b2e9e",
        "line": "52",
        "column": "8",
        "confidence": "LOW",
        "file": "emif/datatable/views.py",
        "code": "    if cached != None:",
        "details": "(1/1) * Possible vulnerability detected: This expression is always True: `cached == cached` or `cached != cached`. If testing for floating point NaN, use `math.isnan(cached)`, or `cmath.isnan(cached)` if the number is complex.",
        "securityTool": "Semgrep",
        "language": "Python",
        "severity": "LOW",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "python.lang.correctness.useless-eqeq.useless-eqeq",
        "vulnHash": "14c792541ecc389531bed6c178cfe4dac12e73ed118689a675b0d039e9cc8410",
        "deprecatedHashes": [
          "f72f83a04103472771c13793e6613802667ecdd8645c7737b8a8d08ee3c533ca",
          "3ea620e8a85204fed05c0ed99fa27548e33a8990bc12a0e9bbf668ab7755e473"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    },
    {
      "vulnerabilityID": "00000000-0000-0000-0000-000000000000",
      "analysisID": "f0ad5acd-e462-4528-b955-7fc4efe0646d",
      "createdAt": "2022-06-24T08:56:21.324118363Z",
      "vulnerabilities": {
        "vulnerabilityID": "224ebadb-1526-4a55-bb91-475d176ec20b",
        "line": "189",
        "column": "0",
        "confidence": "MEDIUM",
        "file": "requirements.txt",
        "code": "pillow==6.2.2\n\tInstalled Version: \"6.2.2\"\n\tUpdate to Version: \"7.1.0\" for fix this issue.",
        "details": "(1/2) * Possible vulnerability detected: In libImaging/PcxDecode.c in Pillow before 7.1.0, an out-of-bounds read can occur when reading PCX files where state-\u003eshuffle is instructed to read beyond state-\u003ebuffer.\n         \n(2/2) * Possible vulnerability detected: In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c.",
        "securityTool": "Trivy",
        "language": "Generic",
        "severity": "UNKNOWN",
        "type": "Vulnerability",
        "commitAuthor": "-",
        "commitEmail": "-",
        "commitHash": "-",
        "commitMessage": "-",
        "commitDate": "-",
        "rule_id": "PYSEC-2020-77",
        "vulnHash": "b466ff464a04ebb82af5b4aabd530c0dceaf5df43397ebc17e21004824527cda",
        "deprecatedHashes": [
          "ec59a1d5e19d3ce970d66e0009b94a8468949d5707db216d81efe92c62f713ab",
          "ee757516f8ffcf2a884cd628e25e9a041e0bf46359d0b55e3a05fe8cfda62ba6",
          "5bacbda7f1e7d3c000656f46276298b4b149d78e81d30c3124a1dcd3ee50e7b9",
          "47b2764ee10916bbc55e3a886074261038eaa102722dfb77412d82730e2f80d9"
        ],
        "securityToolVersion": "",
        "securityToolInfoUri": ""
      }
    }
  ]
}